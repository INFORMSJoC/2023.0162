################################################################################
# Problems
################################################################################
symobj_extrasim = x1 + 1
sol_extrasim = np.array([0., 1.])
eq1_extrasim = x1 + 2 * x2 - 2
cons_extrasim = [{'func':eq1_extrasim, 'type':'eq', 'prop':'convex'}]
vars_extrasim = [x1, x2]
bnds_extrasim = [np.array([0, 10000]), np.array([-10000, 10000])]
extrasim = OptimizationProblem('extrasim', sol_extrasim, symobj_extrasim, cons_extrasim, vars_extrasim, bnds_extrasim)

symobj_hs006 = (1-x1)**2
sol_hs006 = np.array([1., 1.])
eq1_hs006 = 10*(x2 - x1**2)
cons_hs006 = [{'func':eq1_hs006, 'type':'eq', 'prop':'non-convex'}]
vars_hs006 = [x1, x2]
bnds_hs006 = [np.array([-10000, 10000]), np.array([-10000, 10000])]
hs006 = OptimizationProblem('hs006', sol_hs006, symobj_hs006, cons_hs006, vars_hs006, bnds_hs006)

symobj_maratos = -x1 + 9.9999999999999995e-07 * x1**2 + 9.9999999999999995e-07 * x2**2 - 9.9999999999999995e-07
sol_maratos = np.array([1., -1.72277e-06])
eq1_maratos = x1**2 + x2**2 - 1
cons_maratos = [{'func':eq1_maratos, 'type':'eq', 'prop':'non-convex'}]
vars_maratos = [x1, x2]
bnds_maratos = [np.array([-10000, 10000]), np.array([-10000, 10000])]
maratos = OptimizationProblem('maratos', sol_maratos, symobj_maratos, cons_maratos, vars_maratos, bnds_maratos)

symobj_tame = (x1 - x2)**2
sol_tame = np.array([0.5, 0.5])
eq1_tame = x1 + x2 - 1
cons_tame = [{'func':eq1_tame, 'type':'eq', 'prop':'convex'}]
vars_tame = [x1, x2]
bnds_tame = [np.array([0, 10000]), np.array([0, 10000])]
tame = OptimizationProblem('tame', sol_tame, symobj_tame, cons_tame, vars_tame, bnds_tame)

symobj_b1 = 0
sol_b1 = np.array([0.5, 1.65139, -1, -0.151388])
eq1_b1 = x1 + x2 + x3 + x4 - 1
eq2_b1 = 2*x3 + 2
eq3_b1 = 2*x1 - 1
eq4_b1 = x1**2 + x2**2 + x3**2 + x4**2 - 4
cons_b1 = [{'func':eq1_b1, 'type':'eq', 'prop':'convex'}, {'func':eq2_b1, 'type':'eq', 'prop':'convex'}, {'func':eq3_b1, 'type':'eq', 'prop':'convex'}, {'func':eq4_b1, 'type':'eq', 'prop':'unknown'}]
vars_b1 = [x1, x2, x3, x4]
bnds_b1 = [np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10])]
b1 = OptimizationProblem('b1', sol_b1, symobj_b1, cons_b1, vars_b1, bnds_b1)

symobj_gottfr = 0
sol_gottfr = np.array([1.15592e-07, 2.56387e-07])
eq1_gottfr = x1 - ((- x1) + 1) * (0.11360000000000001 * x1 + 0.34079999999999999 * x2)
eq2_gottfr = x2 + ((- x2) + 1) * (15 * x1 - 7.5 * x1)
cons_gottfr = [{'func':eq1_gottfr, 'type':'eq', 'prop':'unknown'}, {'func':eq2_gottfr, 'type':'eq', 'prop':'unknown'}]
vars_gottfr = [x1, x2]
bnds_gottfr = [np.array([-10001, 10000]), np.array([-10001, 10000])]
gottfr = OptimizationProblem('gottfr', sol_gottfr, symobj_gottfr, cons_gottfr, vars_gottfr, bnds_gottfr)

symobj_himmelbc = 0
sol_himmelbc = np.array([3, 2])
eq1_himmelbc = x2 + x1**2 - 11
eq2_himmelbc = x1 + x2**2 - 7
cons_himmelbc = [{'func':eq1_himmelbc, 'type':'eq', 'prop':'unknown'}, {'func':eq2_himmelbc, 'type':'eq', 'prop':'unknown'}]
vars_himmelbc = [x1, x2]
bnds_himmelbc = [np.array([-10001, 10000]), np.array([-10001, 10000])]
himmelbc = OptimizationProblem('himmelbc', sol_himmelbc, symobj_himmelbc, cons_himmelbc, vars_himmelbc, bnds_himmelbc)

symobj_hypcir = 0
sol_hypcir = np.array([1.93185, 0.517638])
eq1_hypcir = x1 * x2 - 1
eq2_hypcir = x1**2 + x2**2 - 4
cons_hypcir = [{'func':eq1_hypcir, 'type':'eq', 'prop':'unknown'}, {'func':eq2_hypcir, 'type':'eq', 'prop':'unknown'}]
vars_hypcir = [x1, x2]
bnds_hypcir = [np.array([-10001, 10000]), np.array([-10001, 10000])]
hypcir = OptimizationProblem('hypcir', sol_hypcir, symobj_hypcir, cons_hypcir, vars_hypcir, bnds_hypcir)

symobj_hs8 =  0
sol_hs8 = np.array([4.60159,1.95584])
eq1_hs8 =  (x1**2) + (x2**2) - 25
eq2_hs8 =  x1 * x2 - 9
cons_hs8 = [{'func':eq1_hs8,'type': 'eq', 'prop':'unknown'},{'func':eq2_hs8,'type': 'eq', 'prop':'unknown'}]
bnds_hs8 = [np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_hs8 = [x1, x2]
hs8 = OptimizationProblem("hs8", sol_hs8, symobj_hs8, cons_hs8, vars_hs8, bnds_hs8)

symobj_hs008 = 0
sol_hs008 = np.array([4.6015949177, 1.9558436066])
eq1_hs008 = x1**2 + x2**2 - 25
eq2_hs008 = x1 * x2 - 9
cons_hs008 = [{'func':eq1_hs008, 'type':'eq', 'prop':'unknown'}, {'func':eq2_hs008, 'type':'eq', 'prop':'unknown'}]
vars_hs008 = [x1, x2]
bnds_hs008 = [np.array([-10001, 10000]), np.array([-10001, 10000])]
hs008 = OptimizationProblem('hs008', sol_hs008, symobj_hs008, cons_hs008, vars_hs008, bnds_hs008)

symobj_mickey = 0
sol_mickey = np.array([1.23607, 0.786151])
eq1_mickey = x1**2 + 4 * x2**2 - 4
eq2_mickey = -x1 + 2 * x2**2
cons_mickey = [{'func':eq1_mickey, 'type':'eq', 'prop':'unknown'}, {'func':eq2_mickey, 'type':'eq', 'prop':'unknown'}]
vars_mickey = [x1, x2]
#bnds_mickey = [np.array([0, 10]), np.array([0, 10])]
bnds_mickey = [np.array([-10000, 10000]), np.array([-10000, 10000])]
mickey = OptimizationProblem('mickey', sol_mickey, symobj_mickey, cons_mickey, vars_mickey, bnds_mickey)

symobj_parabola = x1
sol_parabola = np.array([1., 1.])
eq1_parabola = x1**2 - x2
eq2_parabola = x2**2 + x1**2 - 2
cons_parabola = [{'func':eq1_parabola, 'type':'eq', 'prop':'unknown'}, {'func':eq2_parabola, 'type':'eq', 'prop':'unknown'}]
vars_parabola = [x1, x2]
bnds_parabola = [np.array([0, 10]), np.array([0, 2])]
parabola = OptimizationProblem('parabola', sol_parabola, symobj_parabola, cons_parabola, vars_parabola, bnds_parabola)

symobj_precondk =  0
sol_precondk = np.array([1, 0])
eq1_precondk =  (x1**2) - (x2**2) - 1
eq2_precondk =  x1 * x2 - 0
cons_precondk = [{'func':eq1_precondk,'type': 'eq', 'prop':'unknown'},{'func':eq2_precondk,'type': 'eq', 'prop':'unknown'}]
bnds_precondk = [np.array([0.90000000000000002, 1.2]), np.array([-0.10000000000000001, 0.10000000000000001])]
vars_precondk = [x1, x2]
precondk = OptimizationProblem("precondk", sol_precondk, symobj_precondk, cons_precondk, vars_precondk, bnds_precondk)

symobj_supersim = 0
sol_supersim = np.array([0.666667, 0.666667])
eq1_supersim = 2 * x1 + x2 - 2
eq2_supersim = x1 + 2 * x2 - 2
cons_supersim = [{'func':eq1_supersim, 'type':'eq', 'prop':'convex'}, {'func':eq2_supersim, 'type':'eq', 'prop':'convex'}]
vars_supersim = [x1, x2]
bnds_supersim = [np.array([0, 10000]), np.array([-10000, 10000])]
#bnds_supersim = [np.array([0, 2]), np.array([-10, 10])]
supersim = OptimizationProblem('supersim', sol_supersim, symobj_supersim, cons_supersim, vars_supersim, bnds_supersim)

symobj_booth = 0
sol_booth = np.array([1., 3.])
ineq1_booth = (x1 + 2 * x2 - 7)**2 + (2 * x1 + x2 - 5)**2 - 1
cons_booth = [{'func':ineq1_booth, 'type':'ineq', 'prop':'unknown'}]
vars_booth = [x1, x2]
bnds_booth = [np.array([-10000, 10000]), np.array([-10000, 10000])]
booth = OptimizationProblem('booth', sol_booth, symobj_booth, cons_booth, vars_booth, bnds_booth)

symobj_hs011 =  (x2**2) + ((x1) - 5)**2 - 25
sol_hs011 = np.array([1.2347728250,1.5246639295])
ineq1_hs011 = -x2 + (x1**2) - 0
cons_hs011 = [{'func':ineq1_hs011,'type': 'ineq', 'prop':'unknown'}]
bnds_hs011 = [np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_hs011 = [x1, x2]
hs011 = OptimizationProblem("hs011", sol_hs011, symobj_hs011, cons_hs011, vars_hs011, bnds_hs011)

symobj_hs012 =  (-7) * x1 - 7 * x2 + (x2**2) + 0.5 * (x1**2) - x1 * x2
sol_hs012 = np.array([2, 3])
ineq1_hs012 = (x2**2) + 4 * (x1**2) - 25
cons_hs012 = [{'func':ineq1_hs012,'type': 'ineq'}]
bnds_hs012 = [np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_hs012 = [x1, x2]
hs012 = OptimizationProblem("hs012", sol_hs012, symobj_hs012, cons_hs012, vars_hs012, bnds_hs012)

symobj_hs6 = 0
sol_hs6 = np.array([0.781875, 0.611328])
eq1_hs6 = 10 * x2 - 10 * x1**2
ineq1_hs6 = (-x1 + 1)**2 - 1
cons_hs6 = [{'func':eq1_hs6, 'type':'eq', 'prop':'unknown'}, {'func':ineq1_hs6, 'type':'ineq', 'prop':'unknown'}]
vars_hs6 = [x1, x2]
bnds_hs6 = [np.array([-10000, 10000]), np.array([-10000, 10000])]
hs6 = OptimizationProblem('hs6', sol_hs6, symobj_hs6, cons_hs6, vars_hs6, bnds_hs6)

symobj_tryb = (x1 - 1)**2
sol_tryb = np.array([1, 9])
eq1_tryb = (x1 - 1)**2 + (x2 - 10)**2 - 1
ineq1_tryb = (x1 - 1)**2 - 2
cons_tryb = [{'func':eq1_tryb, 'type':'eq', 'prop':'unknown'}, {'func':ineq1_tryb, 'type':'ineq', 'prop':'unknown'}]
vars_tryb = [x1, x2]
bnds_tryb = [np.array([0, 10000]), np.array([0, 10000])]
tryb = OptimizationProblem('tryb', sol_tryb, symobj_tryb, cons_tryb, vars_tryb, bnds_tryb)

symobj_hs022 =  ((x1) - 2)**2 + ((x2) - 1)**2
sol_hs022 = np.array([1, 1])
ineq1_hs022 = x1 + x2 - 2
ineq2_hs022 = -(x2 - (x1**2))
cons_hs022 = [{'func':ineq1_hs022,'type': 'ineq', 'prop':'unknown'},{'func':ineq2_hs022,'type': 'ineq', 'prop':'unknown'}]
bnds_hs022 = [np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_hs022 = [x1, x2]
hs022 = OptimizationProblem("hs022", sol_hs022, symobj_hs022, cons_hs022, vars_hs022, bnds_hs022)

symobj_simpllpa =  2 * x1 + x2
sol_simpllpa = np.array([0, 1])
ineq1_simpllpa = -(x1 + 2 * x2) + 1.5
ineq2_simpllpa = -(x1 + x2) + 1
cons_simpllpa = [{'func':ineq1_simpllpa,'type': 'ineq', 'prop':'convex'},{'func':ineq2_simpllpa,'type': 'ineq', 'prop':'convex'}]
bnds_simpllpa = [np.array([0, 10000]), np.array([0, 10000])]
vars_simpllpa = [x1, x2]
simpllpa = OptimizationProblem("simpllpa", sol_simpllpa, symobj_simpllpa, cons_simpllpa, vars_simpllpa, bnds_simpllpa)

symobj_zecevic3 =  (-84) * x1 - 24 * x2 + 7 * (x1**2) + 3 * (x2**2) + 300
sol_zecevic3 = np.array([2.7955451851,1.0885437701])
ineq1_zecevic3 = (x1**2) + (x2**2) - 9
ineq2_zecevic3 = - x1 * x2 + 1
cons_zecevic3 = [{'func':ineq1_zecevic3,'type': 'ineq', 'prop':'convex'},{'func':ineq2_zecevic3,'type': 'ineq', 'prop':'convex'}]
bnds_zecevic3 = [np.array([0, 10]), np.array([0, 10])]
vars_zecevic3 = [x1, x2]
zecevic3 = OptimizationProblem("zecevic3", sol_zecevic3, symobj_zecevic3, cons_zecevic3, vars_zecevic3, bnds_zecevic3)

symobj_zecevic4 =  (-60) * x1 - 8 * x2 + (x2**2) + 6 * (x1**2) + 166
sol_zecevic4 = np.array([4.9709528802,1.2518287248])
ineq1_zecevic4 = -x1 - x2 - -3
ineq2_zecevic4 = -x1 - x2 + x1 * x2 - 0
cons_zecevic4 = [{'func':ineq1_zecevic4,'type': 'ineq', 'prop':'convex'},{'func':ineq2_zecevic4,'type': 'ineq', 'prop':'unknown'}]
bnds_zecevic4 = [np.array([0, 10]), np.array([0, 10])]
vars_zecevic4 = [x1, x2]
zecevic4 = OptimizationProblem("zecevic4", sol_zecevic4, symobj_zecevic4, cons_zecevic4, vars_zecevic4, bnds_zecevic4)

symobj_simpllpb = 1.5 * x1 + x2
sol_simpllpb = np.array([0.2, 0.8, 1.1])
ineq1_simpllpb = -x1 - x2 + 1
ineq2_simpllpb = -x1 - 2 * x2 + 1.2
ineq3_simpllpb = -2*x1 - x2 + 1.2
cons_simpllpb = [{'func':ineq1_simpllpb,'type': 'ineq', 'prop':'convex'},{'func':ineq2_simpllpb,'type': 'ineq', 'prop':'convex'},{'func':ineq3_simpllpb,'type': 'ineq', 'prop':'convex'}]
bnds_simpllpb = [np.array([0, 10000]), np.array([0, 10000])]
vars_simpllpb = [x1, x2]
simpllpb = OptimizationProblem("simpllpb", sol_simpllpb, symobj_simpllpb, cons_simpllpb, vars_simpllpb, bnds_simpllpb)

symobj_zecevic2 =  0
sol_zecevic2 = np.array([0.736017,1.05593])
ineq1_zecevic2 = 4 * x1 + x2 - 4
ineq2_zecevic2 = x1 + x2 - 2
ineq3_zecevic2 = (-3) * x1 - 2 * x2 + 2 * (x1**2) + 3.125
cons_zecevic2 = [{'func':ineq1_zecevic2,'type': 'ineq', 'prop':'convex'},{'func':ineq2_zecevic2,'type': 'ineq', 'prop':'convex'},{'func':ineq3_zecevic2,'type': 'ineq', 'prop':'unknown'}]
bnds_zecevic2 = [np.array([0, 10]), np.array([0, 10])]
vars_zecevic2 = [x1, x2]
zecevic2 = OptimizationProblem("zecevic2", sol_zecevic2, symobj_zecevic2, cons_zecevic2, vars_zecevic2, bnds_zecevic2)

symobj_aljazzaf = 50.005000000000003 * ((x1) + 1)**2 + 0.010000000000005116 * ((x2) - 1)**2 + 100 * (x3 - 0.5)**2
sol_aljazzaf = np.array([0., 0.9999999940, 0.9999990004])
eq1_aljazzaf = -x3 + 10000 * (x2 - 1)**2 + 5000.5 * (x1)**2 + 1
cons_aljazzaf = [{'func':eq1_aljazzaf, 'type':'eq', 'prop':'unknown'}]
vars_aljazzaf = [x1, x2, x3]
#bnds_aljazzaf = [np.array([0, 10]), np.array([0, 10]), np.array([0, 10])]
bnds_aljazzaf = [np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000])]
aljazzaf = OptimizationProblem('aljazzaf', sol_aljazzaf, symobj_aljazzaf, cons_aljazzaf, vars_aljazzaf, bnds_aljazzaf)

symobj_hs028 = (x1 + x2)**2 + (x2 + x3)**2
sol_hs028 = np.array([0.5, -0.5, 0.5])
eq1_hs028 = x1 + 2 * x2 + 3 * x3 - 1
cons_hs028 = [{'func':eq1_hs028, 'type':'eq', 'prop':'unknown'}]
vars_hs028 = [x1, x2, x3]
#bnds_hs028 = [np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10])]
bnds_hs028 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
hs028 = OptimizationProblem('hs028', sol_hs028, symobj_hs028, cons_hs028, vars_hs028, bnds_hs028)

symobj_hs042 =  ((x1) - 3)**2 + ((x2) - 4)**2 + ((2) - 1)**2 + ((x3) - 2)**2
sol_hs042 = np.array([0.84853,1.13137,2.00001])
eq1_hs042 =  (x1**2) + (x2**2) - 2
cons_hs042 = [{'func':eq1_hs042,'type': 'eq', 'prop':'unknown'}]
bnds_hs042 = [np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000])]
vars_hs042 = [x1, x2, x3]
hs042 = OptimizationProblem("hs042", sol_hs042, symobj_hs042, cons_hs042, vars_hs042, bnds_hs042)

symobj_hs061 = 16 * x1 - 24 * x2 - 33 * x3 + 2 * (x1)**2 + 2 * (x2)**2 + 4 * (x3)**2
sol_hs061 = np.array([-2.1190398764, 3.2105368221, 5.3268866265])
eq1_hs061 = 4 * x3 - x2**2 - 11
eq2_hs061 = 3 * x3 - 2 * x1**2 - 7
cons_hs061 = [{'func':eq1_hs061, 'type':'eq', 'prop':'unknown'}, {'func':eq2_hs061, 'type':'eq', 'prop':'unknown'}]
vars_hs061 = [x1, x2, x3]
#bnds_hs061 = [np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10])]
bnds_hs061 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
hs061 = OptimizationProblem('hs061', sol_hs061, symobj_hs061, cons_hs061, vars_hs061, bnds_hs061)

symobj_bronstein = 0
sol_bronstein = np.array([-1.7566229888, 4.8388299903, 3.0822070015])
eq1_bronstein = x1 + x2 - x3
eq2_bronstein = x1**2 + x2**2 + x3**2 - 36
eq3_bronstein = x3**2 + x1 * x2 - 1
cons_bronstein = [{'func':eq1_bronstein, 'type':'eq', 'prop':'convex'}, {'func':eq2_bronstein, 'type':'eq', 'prop':'unknown'}, {'func':eq3_bronstein, 'type':'eq', 'prop':'unknown'}]
vars_bronstein = [x1, x2, x3]
#bnds_bronstein = [np.array([-11, 10]), np.array([-10, 10]), np.array([-10, 10])]
bnds_bronstein = [np.array([-11000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
bronstein = OptimizationProblem('bronstein', sol_bronstein, symobj_bronstein, cons_bronstein, vars_bronstein, bnds_bronstein)

symobj_clo1 = 0
sol_clo1 = np.array([0.999822, 0.000177558, 0.000177558])
eq1_clo1 = x1 + x2 + x3**2 - 1
eq2_clo1 = x2 + x3 + x1**2 - 1
eq3_clo1 = x1 + x3 + x2**2 - 1
cons_clo1 = [{'func':eq1_clo1, 'type':'eq', 'prop':'unknown'}, {'func':eq2_clo1, 'type':'eq', 'prop':'unknown'}, {'func':eq3_clo1, 'type':'eq', 'prop':'unknown'}]
vars_clo1 = [x1, x2, x3]
bnds_clo1 = [np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10])]
clo1 = OptimizationProblem('clo1', sol_clo1, symobj_clo1, cons_clo1, vars_clo1, bnds_clo1)

symobj_czaporgeddes = 0
sol_czaporgeddes = np.array([-0.6988995833, 0.2326846489, 0.1654295542])
eq1_czaporgeddes = 3 * x1 + 10 * x2 -8 * x3 +8 * x1**2 +3 * x2**2 +10 * x3**2 - 2 * x1 * x2 -6 * x1 * x3 -7 * x2 * x3 - 4
eq2_czaporgeddes = 8 * x1 + 2 * x2 - 7 * x3 + 5 * x1**2 + 9 * x2**2 - x3**2 + 12 * x1 * x3 - 6 * x2 * x3 + 5
eq3_czaporgeddes = (-6) * x1 - 4 * x2 + 5 * x3 + 10 * x1**2 + 9 * x2**2 - 2 * x3**2 - 2 * x1 * x2 + 6 * x1 * x3 - x2 * x3 - 9
cons_czaporgeddes = [{'func':eq1_czaporgeddes, 'type':'eq', 'prop':'unknown'}, {'func':eq2_czaporgeddes, 'type':'eq', 'prop':'unknown'}, {'func':eq3_czaporgeddes, 'type':'eq', 'prop':'unknown'}]
vars_czaporgeddes = [x1, x2, x3]
#bnds_czaporgeddes = [np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10])]
bnds_czaporgeddes = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
czaporgeddes = OptimizationProblem('czaporgeddes', sol_czaporgeddes, symobj_czaporgeddes, cons_czaporgeddes, vars_czaporgeddes, bnds_czaporgeddes)

symobj_eqlin = 0
sol_eqlin = np.array([3.33067e-16, 1, 2])
eq1_eqlin = 3 * x1 + 5 * x2 - 3 * x3 + 1
eq2_eqlin = 2 * x1 + 4 * x2 + 7 * x3 - 18
eq3_eqlin = x1 - 2 * x2 + x3
cons_eqlin = [{'func':eq1_eqlin, 'type':'eq', 'prop':'convex'}, {'func':eq2_eqlin, 'type':'eq', 'prop':'convex'}, {'func':eq3_eqlin, 'type':'eq', 'prop':'convex'}]
vars_eqlin = [x1, x2, x3]
#bnds_eqlin = [np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10])]
bnds_eqlin = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
eqlin = OptimizationProblem('eqlin', sol_eqlin, symobj_eqlin, cons_eqlin, vars_eqlin, bnds_eqlin)

symobj_hong2 = 0
sol_hong2 = np.array([0.555893, 0.618034, 0.555893])
eq1_hong2 = x1 - x3
eq2_hong2 = x1**2 + x2**2 + x3**2 - 1
eq3_hong2 = -x2 + x1**2 + x3**2
cons_hong2 = [{'func':eq1_hong2, 'type':'eq', 'prop':'unknown'}, {'func':eq2_hong2, 'type':'eq', 'prop':'unknown'}, {'func':eq3_hong2, 'type':'eq', 'prop':'unknown'}]
vars_hong2 = [x1, x2, x3]
bnds_hong2 = [np.array([-1000, 1000]), np.array([-1000, 1000]), np.array([-1000, 1000])]
hong2 = OptimizationProblem('hong2', sol_hong2, symobj_hong2, cons_hong2, vars_hong2, bnds_hong2)

symobj_mathews = 0
sol_mathews = np.array([1.18046, 2.18046, -0.18046])
eq1_mathews = -x1 + x1**2 + x2**2 + x3**2 - 5
eq2_mathews = x3 + x1**2 + x2**2 + x3**2 - 6
eq3_mathews = -x2 + x1**2 + x2**2 + x3**2 - 4
cons_mathews = [{'func':eq1_mathews, 'type':'eq', 'prop':'unknown'}, {'func':eq2_mathews, 'type':'eq', 'prop':'unknown'}, {'func':eq3_mathews, 'type':'eq', 'prop':'unknown'}]
vars_mathews = [x1, x2, x3]
bnds_mathews = [np.array([-1000, 1000]), np.array([-1000, 1000]), np.array([-1000, 1000])]
mathews = OptimizationProblem('mathews', sol_mathews, symobj_mathews, cons_mathews, vars_mathews, bnds_mathews)

symobj_rediff3 = 0
sol_rediff3 = np.array([0.252318, 0.34699, 0.252318])
eq1_rediff3 = (-2) * x1 + x2 + 0.83563453399999998 * ((- x1) + 1) * x1
eq2_rediff3 = x2 - 2 * x3 + 0.83563453399999998 * ((- x3) + 1) * x3
eq3_rediff3 = x1 - 2 * x2 + x3 + 0.83563453399999998 * ((- x2) + 1) * x2
cons_rediff3 = [{'func':eq1_rediff3, 'type':'eq', 'prop':'unknown'}, {'func':eq2_rediff3, 'type':'eq', 'prop':'unknown'}, {'func':eq3_rediff3, 'type':'eq', 'prop':'unknown'}]
vars_rediff3 = [x1, x2, x3]
#bnds_rediff3 = [np.array([0, 10]), np.array([0, 10]), np.array([0, 10])]
bnds_rediff3 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
rediff3 = OptimizationProblem('rediff3', sol_rediff3, symobj_rediff3, cons_rediff3, vars_rediff3, bnds_rediff3)

symobj_zangwil3 = 0
#sol_zangwil3 = np.array([4.44089e-16, 0, 5.55112e-17])
sol_zangwil3 = np.array([0, 0, 0])
eq1_zangwil3 = x1 - x2 + x3
eq2_zangwil3 = -x1 + x2 + x3
eq3_zangwil3 = x1 + x2 - x3
cons_zangwil3 = [{'func':eq1_zangwil3, 'type':'eq', 'prop':'convex'}, {'func':eq2_zangwil3, 'type':'eq', 'prop':'convex'}, {'func':eq3_zangwil3, 'type':'eq', 'prop':'convex'}]
vars_zangwil3 = [x1, x2, x3]
#bnds_zangwil3 = [np.array([0, 10]), np.array([0, 10]), np.array([0, 10])]
bnds_zangwil3 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
zangwil3 = OptimizationProblem('zangwil3', sol_zangwil3, symobj_zangwil3, cons_zangwil3, vars_zangwil3, bnds_zangwil3)

symobj_hs030 = x1**2 + x2**2 + x3**2
sol_hs030 = np.array([1, 1.32507e-09, -5.74407e-05])
ineq1_hs030 = x1**2 + x2**2 - 1
cons_hs030 = [{'func':ineq1_hs030, 'type':'ineq', 'prop':'unknown'}]
vars_hs030 = [x1, x2, x3]
bnds_hs030 = [np.array([1, 10]), np.array([-10, 10]), np.array([-10, 10])]
hs030 = OptimizationProblem('hs030', sol_hs030, symobj_hs030, cons_hs030, vars_hs030, bnds_hs030)

symobj_hs035 = (-8) * x1 - 6 * x2 - 4 * x3 + x3**2 + 2 * x1**2 + 2 * x2**2 + 2 * x1 * x2 + 2 * x1 * x3 + 9
sol_hs035 = np.array([1.3333333333, 0.7777777778, 0.4444444444])
ineq1_hs035 = x1 + x2 + 2 * x3 - 3
cons_hs035 = [{'func':ineq1_hs035, 'type':'ineq', 'prop':'convex'}]
vars_hs035 = [x1, x2, x3]
bnds_hs035 = [np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000])]
hs035 = OptimizationProblem('hs035', sol_hs035, symobj_hs035, cons_hs035, vars_hs035, bnds_hs035)

symobj_hs065 = (x3 - 5)**2 + (x1 - x2)**2 + 0.1111111111111111 * (x1 + x2 - 10)**2
sol_hs065 = np.array([3.65046, 3.65046, 4.62042])
ineq1_hs065 = x1**2 + x2**2 + x3**2 - 48
cons_hs065 = [{'func':ineq1_hs065, 'type':'ineq', 'prop':'unknown'}]
vars_hs065 = [x1, x2, x3]
bnds_hs065 = [np.array([-4.5, 4.5]), np.array([-4.5, 4.5]), np.array([-5, 5])]
hs065 = OptimizationProblem('hs065', sol_hs065, symobj_hs065, cons_hs065, vars_hs065, bnds_hs065)

symobj_hs35mod =  (-8) * x1 - 6 * x2 - 4 * x3 + (x3**2) + 2 * (x1**2) + 2 * (x2**2) + 2 * x1 * x2 + 2 * x1 * x3 + 9
sol_hs35mod = np.array([1.5000000000,0.5000000000,0.5000000000])
ineq1_hs35mod = -(-x1 - x2 - 2 * x3) - 3
cons_hs35mod = [{'func':ineq1_hs35mod,'type': 'ineq', 'prop':'convex'}]
bnds_hs35mod = [np.array([0, 10000]), np.array([0.5, 0.5]), np.array([0, 10000])]
vars_hs35mod = [x1, x2, x3]
hs35mod = OptimizationProblem("hs35mod", sol_hs35mod, symobj_hs35mod, cons_hs35mod, vars_hs35mod, bnds_hs35mod)

symobj_congigmz = x3
sol_congigmz = np.array([-4.0000000001, -5.9999999999, 27.9999999969])
ineq1_congigmz = x1 + x2 + 10
ineq2_congigmz = 5 * x1 + x2 - x3
ineq3_congigmz = -5 * x1 + x2 - x3
ineq4_congigmz = 4 * x2 - x3 + x1**2 + x2**2
ineq5_congigmz = 2 * x1**2 - x2**2 + 4
cons_congigmz = [{'func':ineq1_congigmz, 'type':'ineq', 'prop':'unknown'}, {'func':ineq2_congigmz, 'type':'ineq', 'prop':'unknown'}, {'func':ineq3_congigmz, 'type':'ineq', 'prop':'unknown'}, {'func':ineq4_congigmz, 'type':'ineq', 'prop':'unknown'}, {'func':ineq5_congigmz, 'type':'ineq', 'prop':'unknown'}]
vars_congigmz = [x1, x2, x3]
bnds_congigmz = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
congigmz = OptimizationProblem('congigmz', sol_congigmz, symobj_congigmz, cons_congigmz, vars_congigmz, bnds_congigmz)

symobj_b =  0
sol_b = np.array([0.5,1.65139,-1,-0.151388])
eq1_b =  x1 + x2 - x3 + x4 - 3
eq2_b =  x1 + x2 + x3 + x4 - 1
eq3_b =  (x1**2) + (x2**2) + (x3**2) + (x4**2) - 4
eq4_b =  (-2) * x1 + (x1**2) + (x2**2) + (x3**2) + (x4**2) - 3
cons_b = [{'func':eq1_b,'type': 'eq', 'prop':'convex'},{'func':eq2_b,'type': 'eq', 'prop':'convex'},{'func':eq3_b,'type': 'eq', 'prop':'unknown'},{'func':eq4_b,'type': 'eq', 'prop':'unknown'}]
bnds_b = [np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10])]
vars_b = [x1, x2, x3, x4]
b = OptimizationProblem("b", sol_b, symobj_b, cons_b, vars_b, bnds_b)

symobj_eiger = 0
sol_eiger = np.array([0.1, 0.1, 0.1, 0.1])
eq1_eiger = (-0.20000000000000001) * x1 + x2 + x1**2 - 0.089999999999999997
eq2_eiger = x1 - 0.20000000000000001 * x4 + x4**2 - 0.089999999999999997
eq3_eiger = (-0.20000000000000001) * x2 + x3 + x2**2 - 0.089999999999999997
eq4_eiger = (-0.20000000000000001) * x3 + x4 + x3**2 - 0.089999999999999997
cons_eiger = [{'func':eq1_eiger, 'type':'eq', 'prop':'unknown'}, {'func':eq2_eiger, 'type':'eq', 'prop':'unknown'}, {'func':eq3_eiger, 'type':'eq', 'prop':'unknown'}, {'func':eq4_eiger, 'type':'eq', 'prop':'unknown'}]
vars_eiger = [x1, x2, x3, x4]
bnds_eiger = [np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100])]
eiger = OptimizationProblem('eiger', sol_eiger, symobj_eiger, cons_eiger, vars_eiger, bnds_eiger)

symobj_hong1 = 0
sol_hong1 = np.array([0.5, 1.65139, -1, -0.151388])
eq1_hong1 = x1 + x2 - x3 + x4 - 3
eq2_hong1 = x1 + x2 + x3 + x4 - 1
eq3_hong1 = x1**2 + x2**2 + x3**2 + x4**2 - 4
eq4_hong1 = (-2) * x1 + x1**2 + x2**2 + x3**2 + x4**2 - 3
cons_hong1 = [{'func':eq1_hong1, 'type':'eq', 'prop':'convex'}, {'func':eq2_hong1, 'type':'eq', 'prop':'convex'}, {'func':eq3_hong1, 'type':'eq', 'prop':'unknown'}, {'func':eq4_hong1, 'type':'eq', 'prop':'unknown'}]
vars_hong1 = [x1, x2, x3, x4]
bnds_hong1 = [np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10])]
hong1 = OptimizationProblem('hong1', sol_hong1, symobj_hong1, cons_hong1, vars_hong1, bnds_hong1)

symobj_kear3 = 0
sol_kear3 = np.array([2.77556e-17, -3.46945e-18, -1.73472e-18, -1.73472e-18])
eq1_kear3 = x3 - x4
eq2_kear3 = x1 + 10 * x2
eq3_kear3 = (x2 - 2 * x3)**2
eq4_kear3 = (x1 - x4)**2
cons_kear3 = [{'func':eq1_kear3, 'type':'eq', 'prop':'convex'}, {'func':eq2_kear3, 'type':'eq', 'prop':'convex'}, {'func':eq3_kear3, 'type':'eq', 'prop':'unknown'}, {'func':eq4_kear3, 'type':'eq', 'prop':'unknown'}]
vars_kear3 = [x1, x2, x3, x4]
bnds_kear3 = [np.array([-2, 3]), np.array([-2, 3]), np.array([-2, 3]), np.array([-2, 3])]
kear3 = OptimizationProblem('kear3', sol_kear3, symobj_kear3, cons_kear3, vars_kear3, bnds_kear3)

symobj_kincox =  0
sol_kincox = np.array([0.907472,0.12883,0.420113,-0.991667])
eq1_kincox =  (-10) * x3 + 6 * x1 * x2 - 6 * x3 * x4 - -1
eq2_kincox =  (x2**2) + (x4**2) - 1
eq3_kincox =  (x1**2) + (x3**2) - 1
eq4_kincox =  (-10) * x1 - 6 * x1 * x4 - 6 * x2 * x3 - -4
cons_kincox = [{'func':eq1_kincox,'type': 'eq', 'prop':'unknown'},{'func':eq2_kincox,'type': 'eq', 'prop':'unknown'},{'func':eq3_kincox,'type': 'eq', 'prop':'unknown'},{'func':eq4_kincox,'type': 'eq', 'prop':'unknown'}]
bnds_kincox = [np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1])]
vars_kincox = [x1, x2, x3, x4]
kincox = OptimizationProblem("kincox", sol_kincox, symobj_kincox, cons_kincox, vars_kincox, bnds_kincox)

symobj_lorentz = 0
sol_lorentz = np.array([1, -3.2916e-13, 1, 2.24014e-13])
eq1_lorentz = -x4 + x1 * x2 - x1 * x3 + 1
eq2_lorentz = -x3 - x2 * x4 + x1 * x4 + 1
eq3_lorentz = -x1 + x2 * x3 - x2 * x4 + 1
eq4_lorentz = -x2 - x1 * x3 + x3 * x4 + 1
cons_lorentz = [{'func':eq1_lorentz, 'type':'eq', 'prop':'unknown'}, {'func':eq2_lorentz, 'type':'eq', 'prop':'unknown'}, {'func':eq3_lorentz, 'type':'eq', 'prop':'unknown'}, {'func':eq4_lorentz, 'type':'eq', 'prop':'unknown'}]
vars_lorentz = [x1, x2, x3, x4]
#bnds_lorentz = [np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10])]
bnds_lorentz = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
lorentz = OptimizationProblem('lorentz', sol_lorentz, symobj_lorentz, cons_lorentz, vars_lorentz, bnds_lorentz)

symobj_monfroy1 =  0
sol_monfroy1 = np.array([15.8113883008,15.8113883008,3.2235246281,50.9683995923])
eq1_monfroy1 =  -x1 + x2 - 0
eq2_monfroy1 =  (x1**2) + (x2**2) - 500
eq3_monfroy1 =  x4 - x1 * x3 - 0
eq4_monfroy1 =  4.9050000000000002 * (x3**2) - x2 * x3 - 0
cons_monfroy1 = [{'func':eq1_monfroy1,'type': 'eq', 'prop':'unknown'},{'func':eq2_monfroy1,'type': 'eq', 'prop':'unknown'},{'func':eq3_monfroy1,'type': 'eq', 'prop':'unknown'},{'func':eq4_monfroy1,'type': 'eq', 'prop':'unknown'}]
bnds_monfroy1 = [np.array([0, 100000]), np.array([0, 100000]), np.array([0, 100000]), np.array([0.10000000000000001, 100000])]
vars_monfroy1 = [x1, x2, x3, x4]
monfroy1 = OptimizationProblem("monfroy1", sol_monfroy1, symobj_monfroy1, cons_monfroy1, vars_monfroy1, bnds_monfroy1)

symobj_powell = 0
sol_powell = np.array([2.77556e-17, -3.46945e-18, -1.73472e-18, -1.73472e-18])
eq1_powell = x3 - x4
eq2_powell = x1 + 10 * x2
eq3_powell = x2**2 + 4 * x3**2 - 4 * x2 * x3
eq4_powell = x1**2 + x4**2 - 2 * x1 * x4
cons_powell = [{'func':eq1_powell, 'type':'eq', 'prop':'convex'}, {'func':eq2_powell, 'type':'eq', 'prop':'convex'}, {'func':eq3_powell, 'type':'eq', 'prop':'unknown'}, {'func':eq4_powell, 'type':'eq', 'prop':'unknown'}]
vars_powell = [x1, x2, x3, x4]
bnds_powell = [np.array([-2, 2]), np.array([-2, 2]), np.array([-2, 2]), np.array([-2, 2])]
powell = OptimizationProblem('powell', sol_powell, symobj_powell, cons_powell, vars_powell, bnds_powell)

symobj_dispatch = 11.669 * x1 + 10.333 * x2 + 10.833 * x3 + 0.0053299999999999997 * x1**2 + 0.0088900000000000003 * x2**2 + 0.0074099999999999999 * x3**2 + 653.10000000000002
sol_dispatch = np.array([50.0, 75.4858804799, 93.2622541695, 8.7481346494])
eq1_dispatch =  0.00076599999999999997 * x1 + 3.4199999999999998e-05 * x2 - 0.00018900000000000001 * x3 + x4 - 0.00067599999999999995 * x1**2 - 0.00052099999999999998 * x2**2 - 0.00029399999999999999 * x3**2 - 0.0001906 * x1 * x2 + 5.0699999999999999e-05 * x1 * x3 + 5.0699999999999999e-05 * x1 * x3 - 0.00018020000000000002 * x2 * x3 - 0.040356999999999997
ineq1_dispatch = -x1 - x2 - x3 + x4 + 210
cons_dispatch = [{'func':eq1_dispatch, 'type':'eq', 'prop':'unknown'}, {'func':ineq1_dispatch, 'type':'ineq', 'prop':'convex'}]
vars_dispatch = [x1, x2, x3, x4]
bnds_dispatch = [np.array([50, 200]), np.array([37.5, 150]), np.array([45, 180]), np.array([-10, 10])]
#bnds_dispatch = [np.array([49.9, 50.1]), np.array([75.4, 75.6]), np.array([93.0, 93.3]), np.array([8.7, 8.8])]
dispatch = OptimizationProblem('dispatch', sol_dispatch, symobj_dispatch, cons_dispatch, vars_dispatch, bnds_dispatch)

symobj_hs043 = (-5) * x1 - 5 * x2 - 21 * x3 + 7 * x4 + x1**2 + x2**2 + x4**2 + 2 * x3**2
sol_hs043 = np.array([8.36698e-07, 0.999999, 2, -1])
ineq1_hs043 = 2 * x1 - x2 - x4 + 2 * x1**2 + x2**2 + x3**2 - 5
ineq2_hs043 = -x1 - x4 + x1**2 + 2 * x2**2 + 2 * x4**2 + x3**2 - 10
ineq3_hs043 = x1 - x2 + x3 - x4 + x1**2 + x2**2 + x4**2 + x3**2 - 8
cons_hs043 = [{'func':ineq1_hs043, 'type':'ineq', 'prop':'unknown'}, {'func':ineq2_hs043, 'type':'ineq', 'prop':'unknown'}, {'func':ineq3_hs043, 'type':'ineq', 'prop':'unknown'}]
vars_hs043 = [x1, x2, x3, x4]
bnds_hs043 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
hs043 = OptimizationProblem('hs043', sol_hs043, symobj_hs043, cons_hs043, vars_hs043, bnds_hs043)

symobj_hs076 = -x1 - 3 * x2 + x3 - x4 + x1**2 + x3**2 + 0.5 * x2**2 + 0.5 * x4**2 - x1 * x3 + x3 * x4
sol_hs076 = np.array([0.2727272727, 2.0909090909, 0, 0.5454545455])
ineq1_hs076 = -x2 - 4 * x3 + 1.5
ineq2_hs076 = 3 * x1 + x2 + 2 * x3 - x4 - 4
ineq3_hs076 = x1 + 2 * x2 + x3 + x4 - 5
cons_hs076 = [{'func':ineq1_hs076, 'type':'ineq', 'prop':'convex'}, {'func':ineq2_hs076, 'type':'ineq', 'prop':'convex'}, {'func':ineq3_hs076, 'type':'ineq', 'prop':'convex'}]
vars_hs076 = [x1, x2, x3, x4]
bnds_hs076 = [np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000])]
hs076 = OptimizationProblem('hs076', sol_hs076, symobj_hs076, cons_hs076, vars_hs076, bnds_hs076)

symobj_hs044 =  x1 - x2 - x3 - x1 * x3 + x1 * x4 + x2 * x3 - x2 * x4
sol_hs044 = np.array([6.81905e-18,3,4.66772e-18,4])
ineq1_hs044 = x3 + x4 - 5
ineq2_hs044 = x3 + 2 * x4 - 8
ineq3_hs044 = 2 * x3 + x4 - 8
ineq4_hs044 = 3 * x1 + 4 * x2 - 12
ineq5_hs044 = 4 * x1 + x2 - 12
ineq6_hs044 = x1 + 2 * x2 - 8
cons_hs044 = [{'func':ineq1_hs044,'type': 'ineq', 'prop':'convex'},{'func':ineq2_hs044,'type': 'ineq', 'prop':'convex'},{'func':ineq3_hs044,'type': 'ineq', 'prop':'convex'},{'func':ineq4_hs044,'type': 'ineq', 'prop':'convex'},{'func':ineq5_hs044,'type': 'ineq', 'prop':'convex'},{'func':ineq6_hs044,'type': 'ineq', 'prop':'convex'}]
bnds_hs044 = [np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000])]
vars_hs044 = [x1, x2, x3, x4]
hs044 = OptimizationProblem("hs044", sol_hs044, symobj_hs044, cons_hs044, vars_hs044, bnds_hs044)

symobj_hs44new = x1 - x2 - x3 - x1 * x3 + x1 * x4 + x2 * x3 - x2 * x4
sol_hs44new = np.array([6.81905e-18, 3, 4.66772e-18, 4])
ineq1_hs44new = x3 + x4 - 5
ineq2_hs44new = x3 + 2 * x4 - 8
ineq3_hs44new = (2) * x3 + x4 - 8
ineq4_hs44new = (3) * x1 + 4 * x2 - 12
ineq5_hs44new = (4) * x1 + x2 - 12
ineq6_hs44new = x1 + x2 - 8
cons_hs44new = [{'func':ineq1_hs44new, 'type':'ineq', 'prop':'convex'}, {'func':ineq2_hs44new, 'type':'ineq', 'prop':'convex'}, {'func':ineq3_hs44new, 'type':'ineq', 'prop':'convex'}, {'func':ineq4_hs44new, 'type':'ineq', 'prop':'convex'}, {'func':ineq5_hs44new, 'type':'ineq', 'prop':'convex'}, {'func':ineq6_hs44new, 'type':'ineq', 'prop':'convex'}]
vars_hs44new = [x1, x2, x3, x4]
bnds_hs44new = [np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000])]
hs44new = OptimizationProblem('hs44new', sol_hs44new, symobj_hs44new, cons_hs44new, vars_hs44new, bnds_hs44new)

symobj_bt13 = x5
sol_bt13 = np.array([0.000171212, -8.15277e-05, -0.000100024, 5.63993e-05, 0])
eq1_bt13 =  x1**2 - x5**2 + (x1 - 2 * x2)**2 + (x2 - 3 * x3)**2 + (x3 - 4 * x4)**2
cons_bt13 = [{'func':eq1_bt13, 'type':'eq', 'prop':'unknown'}]
vars_bt13 = [x1, x2, x3, x4, x5]
#bnds_bt13 = [np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100]), np.array([0, 100])]
bnds_bt13 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([0, 10000])]
bt13 = OptimizationProblem('bt13', sol_bt13, symobj_bt13, cons_bt13, vars_bt13, bnds_bt13)

symobj_bt8 = x1**2 + x2**2 + x5**2
sol_bt8 = np.array([0.888031, 0.459783, 0.315328, 8.78968e-07, -3.76183e-06])
eq1_bt8 = x1 + x2**2 - x3**2 - 1
eq2_bt8 = x1**2 + x2**2 - x4**2 - 1
cons_bt8 = [{'func':eq1_bt8, 'type':'eq', 'prop':'unknown'}, {'func':eq2_bt8, 'type':'eq', 'prop':'unknown'}]
vars_bt8 = [x1, x2, x3, x4, x5]
bnds_bt8 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
bt8 = OptimizationProblem('bt8', sol_bt8, symobj_bt8, cons_bt8, vars_bt8, bnds_bt8)

symobj_hs048 = (x1 - 1)**2 + (x2 - x3)**2 + (x4 - x5)**2
sol_hs048 = np.array([1, 0.999999, 1, 1, 0.999999])
eq1_hs048 = x3 - 2 * x4 - 2 * x5 + 3
eq2_hs048 = x1 + x2 + x3 + x4 + x5 - 5
cons_hs048 = [{'func':eq1_hs048, 'type':'eq', 'prop':'unknown'}, {'func':eq2_hs048, 'type':'eq', 'prop':'unknown'}]
vars_hs048 = [x1, x2, x3, x4, x5]
bnds_hs048 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
hs048 = OptimizationProblem('hs048', sol_hs048, symobj_hs048, cons_hs048, vars_hs048, bnds_hs048)

symobj_bt3 = (x4 - 1)**2 + (x5 - 1)**2 + (x1 - x2)**2 + (x2 + x3 - 2)**2
sol_bt3 = np.array([-0.7674418605, 0.2558139535, 0.6279069767, -0.1162790698, 0.2558139535])
eq1_bt3 = x2 - x5
eq2_bt3 = x3 + x4 - 2 * x5
eq3_bt3 = x1 + 3 * x2
cons_bt3 = [{'func':eq1_bt3, 'type':'eq', 'prop':'unknown'}, {'func':eq2_bt3, 'type':'eq', 'prop':'unknown'}, {'func':eq3_bt3, 'type':'eq', 'prop':'unknown'}]
vars_bt3 = [x1, x2, x3, x4, x5]
bnds_bt3 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
bt3 = OptimizationProblem('bt3', sol_bt3, symobj_bt3, cons_bt3, vars_bt3, bnds_bt3)

symobj_bt12 = x2**2 + 0.01 * x1**2
#sol_bt12 = np.array([24.7525, 0.247525, 2.63158e-08, -24.2435, 4.76996])
sol_bt12 = np.array([24.75247525, 0.24752475, 0.0, -24.24347952, 4.76995548])
eq1_bt12 = x1 + x2 - x3**2 - 25
eq2_bt12 = x1 - x5**2 - 2
eq3_bt12 = x2**2 + x1**2 - x4**2 - 25
cons_bt12 = [{'func':eq1_bt12, 'type':'eq', 'prop':'unknown'}, {'func':eq2_bt12, 'type':'eq', 'prop':'unknown'}, {'func':eq3_bt12, 'type':'eq', 'prop':'unknown'}]
vars_bt12 = [x1, x2, x3, x4, x5]
bnds_bt12 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
bt12 = OptimizationProblem('bt12', sol_bt12, symobj_bt12, cons_bt12, vars_bt12, bnds_bt12)

symobj_hs051 = (x4 - 1)**2 + (x5 - 1)**2 + (x1 - x2)**2 + (x2 + x3 - 2)**2
sol_hs051 = np.array([1, 1, 1, 1, 1])
eq1_hs051 = x2 - x5
eq2_hs051 = x3 + x4 - 2 * x5
eq3_hs051 = x1 + 3 * x2 - 4
cons_hs051 = [{'func':eq1_hs051, 'type':'eq', 'prop':'unknown'}, {'func':eq2_hs051, 'type':'eq', 'prop':'unknown'}, {'func':eq3_hs051, 'type':'eq', 'prop':'unknown'}]
vars_hs051 = [x1, x2, x3, x4, x5]
bnds_hs051 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
hs051 = OptimizationProblem('hs051', sol_hs051, symobj_hs051, cons_hs051, vars_hs051, bnds_hs051)

symobj_hs052 = (x4 - 1)**2 + (x5 - 1)**2 + (4 * x1 - x2)**2 + (x2 + x3 - 2)**2
sol_hs052 = np.array([-0.0945558739, 0.0315186246, 0.5157593123, -0.452722063, 0.0315186246])
eq1_hs052 = x2 - x5
eq2_hs052 = x3 + x4 - 2 * x5
eq3_hs052 = x1 + 3 * x2
cons_hs052 = [{'func':eq1_hs052, 'type':'eq', 'prop':'unknown'}, {'func':eq2_hs052, 'type':'eq', 'prop':'unknown'}, {'func':eq3_hs052, 'type':'eq', 'prop':'unknown'}]
vars_hs052 = [x1, x2, x3, x4, x5]
bnds_hs052 = [np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1])]
#bnds_hs052 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
hs052 = OptimizationProblem('hs052', sol_hs052, symobj_hs052, cons_hs052, vars_hs052, bnds_hs052)

symobj_aircrfta = 0
sol_aircrfta = np.array([-2.8819233426, -2.8411289852, -0.2022780355, 0.0003759005, 1.0265036693])
eq1_aircrfta = (-3.9329999999999998) * x1 + 0.107 * x2 + 0.126 * x3 - 9.9900000000000002 * x5 - 0.72699999999999998 * x2 * x3 + 63.5 * x2 * x4 + 8.3900000000000006 * x3 * x4 - 684.39999999999998 * x4 * x5
eq2_aircrfta = -x3 - 0.19600000000000001 * x5 + x1 * x4
eq3_aircrfta = x2 - x4 - x1 * x5 - 0.1168
eq4_aircrfta = 0.002 * x1 - 0.23499999999999999 * x3 + 5.6699999999999999 * x5 - 0.71599999999999997 * x1 * x2 - 1.5780000000000001 * x1 * x4 + 1.1319999999999999 * x2 * x4
eq5_aircrfta = (-0.98699999999999999) * x2 - 22.949999999999999 * x4 + 0.94899999999999995 * x1 * x3 + 0.17299999999999999 * x1 * x5 - 2.8370000000000002
cons_aircrfta = [{'func':eq1_aircrfta, 'type':'eq', 'prop':'unknown'}, {'func':eq2_aircrfta, 'type':'eq', 'prop':'unknown'}, {'func':eq3_aircrfta, 'type':'eq', 'prop':'unknown'}, {'func':eq4_aircrfta, 'type':'eq', 'prop':'unknown'}, {'func':eq5_aircrfta, 'type':'eq', 'prop':'unknown'}]
vars_aircrfta = [x1, x2, x3, x4, x5]
bnds_aircrfta = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
aircrfta = OptimizationProblem('aircrfta', sol_aircrfta, symobj_aircrfta, cons_aircrfta, vars_aircrfta, bnds_aircrfta)

symobj_redeco5 =  0
sol_redeco5 = np.array([0.7948,-1.14417,0.030515,-0.681144,-0.170286])
eq1_redeco5 =  x1 + x2 + x3 + x4 - -1
eq2_redeco5 =  x4 - 4 * x5 - 0
eq3_redeco5 =  x1 - x5 + x1 * x2 + x2 * x3 + x3 * x4 - 0
eq4_redeco5 =  x3 - 3 * x5 + x1 * x4 - 0
eq5_redeco5 =  x2 - 2 * x5 + x1 * x3 + x2 * x4 - 0
cons_redeco5 = [{'func':eq1_redeco5,'type': 'eq', 'prop': 'convex'},{'func':eq2_redeco5,'type': 'eq', 'prop': 'convex'},{'func':eq3_redeco5,'type': 'eq', 'prop': 'unknown'},{'func':eq4_redeco5,'type': 'eq', 'prop': 'unknown'},{'func':eq5_redeco5,'type': 'eq', 'prop': 'unknown'}]
bnds_redeco5 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_redeco5 = [x1, x2, x3, x4, x5]
redeco5 = OptimizationProblem("redeco5", sol_redeco5, symobj_redeco5, cons_redeco5, vars_redeco5, bnds_redeco5)

symobj_wright =  0
sol_wright = np.array([2,2,2,2,2])
eq1_wright =  -x1 + x2 + x3 + x4 + x5 + (x1**2) - 10
eq2_wright =  x1 - x2 + x3 + x4 + x5 + (x2**2) - 10
eq3_wright =  x1 + x2 + x3 + x4 - x5 + (x5**2) - 10
eq4_wright =  x1 + x2 + x3 - x4 + x5 + (x4**2) - 10
eq5_wright =  x1 + x2 - x3 + x4 + x5 + (x3**2) - 10
cons_wright = [{'func':eq1_wright,'type': 'eq', 'prop':'unknown'},{'func':eq2_wright,'type': 'eq', 'prop':'unknown'},{'func':eq3_wright,'type': 'eq', 'prop':'unknown'},{'func':eq4_wright,'type': 'eq', 'prop':'unknown'},{'func':eq5_wright,'type': 'eq', 'prop':'unknown'}]
bnds_wright = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_wright = [x1, x2, x3, x4, x5]
wright = OptimizationProblem("wright", sol_wright, symobj_wright, cons_wright, vars_wright, bnds_wright)

symobj_hs268 = 18340 * x1 - 34198 * x2 + 4542 * x3 + 8672 * x4 + 86 * x5 + 20909 * (x2**2) + 1755 * (x3**2) + 1515 * (x4**2) + 27 * (x5**2) + 10197 * (x1**2) - 24908 * x1 * x2 - 2026 * x1 * x3 + 3896 * x1 * x4 + 658 * x1 * x5 - 3466 * x2 * x3 - 9828 * x2 * x4 - 372 * x2 * x5 + 2178 * x3 * x4 - 348 * x3 * x5 - 44 * x4 * x5 + 14463
sol_hs268 = np.array([0.9999999949, 1.9999999953, -1.0000000077, 2.9999999964, -4.0000000233])
ineq1_hs268 = (4) * x1 + 2 * x2 - 3 * x3 + 5 * x4 - x5 - 30
ineq2_hs268 = -8 * x1 + x2 - 2 * x3 - 5 * x4 + 3 * x5 + 11
ineq3_hs268 = (8) * x1 - x2 + 2 * x3 + 5 * x4 - 3 * x5 - 40
ineq4_hs268 = -10 * x1 - 10 * x2 + 3 * x3 - 5 * x4 - 4 * x5 + 20
ineq5_hs268 = x1 + x2 + x3 + x4 + x5 - 5
cons_hs268 = [{'func':ineq1_hs268, 'type':'ineq', 'prop':'unknown'}, {'func':ineq2_hs268, 'type':'ineq', 'prop':'unknown'}, {'func':ineq3_hs268, 'type':'ineq', 'prop':'unknown'}, {'func':ineq4_hs268, 'type':'ineq', 'prop':'unknown'}, {'func':ineq5_hs268, 'type':'ineq', 'prop':'unknown'}]
vars_hs268 = [x1, x2, x3, x4, x5]
bnds_hs268 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
hs268 = OptimizationProblem('hs268', sol_hs268, symobj_hs268, cons_hs268, vars_hs268, bnds_hs268)

symobj_ex3_1_2 =  37.293239 * x1 + 5.3578546999999999 * (x2**2) + 0.83568909999999996 * x1 * x3 - 40792.141000000003
sol_ex3_1_2 = np.array([78.00000,29.99526,36.77581,33.00000,45.00000])
ineq1_ex3_1_2 = (-0.0012547000000000001) * x1 * x2 - 0.0047026000000000004 * x2 * x3 - 0.0019085 * x2 * x5 + 10.699039000000001
ineq2_ex3_1_2 = 0.0012547000000000001 * x1 * x2 + 0.0047026000000000004 * x2 * x3 + 0.0019085 * x2 * x5 - 15.599038999999999
ineq3_ex3_1_2 = (-0.0021813000000000002) * (x2**2) - 0.0071317000000000004 * x3 * x4 - 0.0029954999999999999 * x1 * x4 + 9.4875100000000003
ineq4_ex3_1_2 = 0.0021813000000000002 * (x2**2) + 0.0071317000000000004 * x3 * x4 + 0.0029954999999999999 * x1 * x4 - 29.48751
ineq5_ex3_1_2 = 0.00062620000000000004 * x1 * x5 - 0.0022052999999999999 * x2 * x3 + 0.0056858000000000004 * x3 * x4 - 6.6655930000000003
ineq6_ex3_1_2 = (-0.00062620000000000004) * x1 * x5 + 0.0022052999999999999 * x2 * x3 - 0.0056858000000000004 * x3 * x4 - 85.334406999999999
cons_ex3_1_2 = [{'func':ineq1_ex3_1_2,'type': 'ineq', 'prop': 'unknown'},{'func':ineq2_ex3_1_2,'type': 'ineq', 'prop': 'unknown'},{'func':ineq3_ex3_1_2,'type': 'ineq', 'prop': 'unknown'},{'func':ineq4_ex3_1_2,'type': 'ineq', 'prop': 'unknown'},{'func':ineq5_ex3_1_2,'type': 'ineq', 'prop': 'unknown'},{'func':ineq6_ex3_1_2,'type': 'ineq', 'prop': 'unknown'}]
bnds_ex3_1_2 = [np.array([78, 102]), np.array([27, 45]), np.array([27, 45]), np.array([33, 45]), np.array([27, 45])]
vars_ex3_1_2 = [x1, x2, x3, x4, x5]
ex3_1_2 = OptimizationProblem("ex3_1_2", sol_ex3_1_2, symobj_ex3_1_2, cons_ex3_1_2, vars_ex3_1_2, bnds_ex3_1_2)

symobj_hs083 = 37.293239 * x1 + 5.3578546999999999 * x2**2 + 0.83568909999999996 * x1 * x3 - 40792.141000000003
sol_hs083 = np.array([78.0, 29.99526, 36.77581, 33.0, 45.0])
ineq1_hs083 = -0.0012547000000000001 * x1 * x2 - 0.0047026000000000004 * x2 * x3 - 0.0019085 * x2 * x5 + 10.699039000000001
ineq2_hs083 = 0.0012547000000000001 * x1 * x2 + 0.0047026000000000004 * x2 * x3 + 0.0019085 * x2 * x5 - 15.699039000000001
ineq3_hs083 = -0.0021813000000000002 * x2**2 - 0.0071317000000000004 * x3 * x4 - 0.0029954999999999999 * x1 * x4 + 9.4875100000000003
ineq4_hs083 = 0.0021813000000000002 * x2**2 + 0.0071317000000000004 * x3 * x4 + 0.0029954999999999999 * x1 * x4 - 29.48751
ineq5_hs083 = -0.00062620000000000004 * x1 * x5 + 0.0022052999999999999 * x2 * x3 - 0.0056858000000000004 * x3 * x4 - 85.334406999999999
ineq6_hs083 = 0.00062620000000000004 * x1 * x5 - 0.0022052999999999999 * x2 * x3 + 0.0056858000000000004 * x3 * x4 - 6.6655930000000012
cons_hs083 = [{'func':ineq1_hs083, 'type':'ineq', 'prop':'unknown'}, {'func':ineq2_hs083, 'type':'ineq', 'prop':'unknown'}, {'func':ineq3_hs083, 'type':'ineq', 'prop':'unknown'}, {'func':ineq4_hs083, 'type':'ineq', 'prop':'unknown'}, {'func':ineq5_hs083, 'type':'ineq', 'prop':'unknown'}, {'func':ineq6_hs083, 'type':'ineq', 'prop':'unknown'}]
vars_hs083 = [x1, x2, x3, x4, x5]
bnds_hs083 = [np.array([78, 102]), np.array([27, 45]), np.array([27, 45]), np.array([33, 45]), np.array([27, 45])]
hs083 = OptimizationProblem('hs083', sol_hs083, symobj_hs083, cons_hs083, vars_hs083, bnds_hs083)

symobj_hs054 =  (x3**2) + (x4**2) + (x5**2) + (x6**2) + 1.0416666666666667 * (x1**2) + 1.0416666666666667 * (x2**2) + 0.41666666666666674 * x1 * x2
sol_hs054 = np.array([0.385716,0.128568,6.12846e-06,0,2.76242e-06,2.30202e-06])
eq1_hs054 =  x1 + 0.5 * x2 - 0.45000000000000001
cons_hs054 = [{'func':eq1_hs054,'type': 'eq', 'prop':'convex'}]
bnds_hs054 = [np.array([-1.25, 1.25]), np.array([-11, 9]), np.array([-0.2857142857142857, 1.1428571428571428]), np.array([-0.20000000000000001, 0.20000000000000001]), np.array([-20.019999999999996, 19.98]), np.array([-0.20000000000000001, 0.20000000000000001])]
vars_hs054 = [x1, x2, x3, x4, x5, x6]
hs054 = OptimizationProblem("hs054", sol_hs054, symobj_hs054, cons_hs054, vars_hs054, bnds_hs054)

symobj_ex9_2_8 =  2 * x5 + 3 * x6 - 4 * x5 * x6 + 1
sol_ex9_2_8 = np.array([0.0000000000,1.0000000000,0.0000000000,0.0000000000,0.2500000000,0.0000000000])
eq1_ex9_2_8 =  -x3 + x4 + 4 * x5 - 1
eq2_ex9_2_8 =  x2 + x6 - 1
eq3_ex9_2_8 =  x1 - x6 - 0
eq4_ex9_2_8 =  x2 * x4 - 0
eq5_ex9_2_8 =  x1 * x3 - 0
cons_ex9_2_8 = [{'func':eq1_ex9_2_8,'type': 'eq', 'prop':'convex'},{'func':eq2_ex9_2_8,'type': 'eq', 'prop':'convex'},{'func':eq3_ex9_2_8,'type': 'eq', 'prop':'convex'},{'func':eq4_ex9_2_8,'type': 'eq', 'prop':'unknown'},{'func':eq5_ex9_2_8,'type': 'eq', 'prop':'unknown'}]
bnds_ex9_2_8 = [np.array([0, 20]), np.array([0, 20]), np.array([0, 0]), np.array([0, 0]), np.array([0, 1]), np.array([0, 10000])]
vars_ex9_2_8 = [x1, x2, x3, x4, x5, x6]
ex9_2_8 = OptimizationProblem("ex9_2_8", sol_ex9_2_8, symobj_ex9_2_8, cons_ex9_2_8, vars_ex9_2_8, bnds_ex9_2_8)

symobj_katsura5 =  0
sol_katsura5 = np.array([0.162143,0.22587,0.27721,-0.12399,0.0115328,0.085839])
eq1_katsura5 =  2 * x1 + 2 * x2 + x3 + 2 * x4 + 2 * x5 + 2 * x6 - 1
eq2_katsura5 =  -x3 + (x3**2) + 2 * (x1**2) + 2 * (x2**2) + 2 * (x4**2) + 2 * (x5**2) + 2 * (x6**2) - 0
eq3_katsura5 =  -x5 + (x1**2) + 2 * x3 * x4 + 2 * x3 * x5 + 2 * x3 * x6 - 0
eq4_katsura5 =  -x6 + 2 * x1 * x2 + 2 * x1 * x4 + 2 * x2 * x5 + 2 * x3 * x6 - 0
eq5_katsura5 =  -x2 + 2 * x1 * x2 + 2 * x1 * x6 + 2 * x2 * x3 + x4 * x5 + x5 * x6 - 0
eq6_katsura5 =  -x1 + (x2**2) + 2 * x1 * x3 + 2 * x1 * x5 + 2 * x2 * x6 + 2 * x4 * x6 - 0
cons_katsura5 = [{'func':eq1_katsura5,'type': 'eq', 'prop':'convex'},{'func':eq2_katsura5,'type': 'eq', 'prop':'unknown'},{'func':eq3_katsura5,'type': 'eq', 'prop':'unknown'},{'func':eq4_katsura5,'type': 'eq', 'prop':'unknown'},{'func':eq5_katsura5,'type': 'eq', 'prop':'unknown'},{'func':eq6_katsura5,'type': 'eq', 'prop':'unknown'}]
bnds_katsura5 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_katsura5 = [x1, x2, x3, x4, x5, x6]
katsura5 = OptimizationProblem("katsura5", sol_katsura5, symobj_katsura5, cons_katsura5, vars_katsura5, bnds_katsura5)

symobj_redeco6 =  0
sol_redeco6 = np.array([-0.2000000000,-0.2000000000,-0.2000000000,-0.2000000000,-0.2000000000,-0.0400000000])
eq1_redeco6 =  x1 + x2 + x3 + x4 + x5 - -1
eq2_redeco6 =  x5 - 5 * x6 - 0
eq3_redeco6 =  x1 - x6 + x1 * x2 + x2 * x3 + x3 * x4 + x4 * x5 - 0
eq4_redeco6 =  x4 - 4 * x6 + x1 * x5 - 0
eq5_redeco6 =  x2 - 2 * x6 + x1 * x3 + x2 * x4 + x3 * x5 - 0
eq6_redeco6 =  x3 - 3 * x6 + x1 * x4 + x2 * x5 - 0
cons_redeco6 = [{'func':eq1_redeco6,'type': 'eq', 'prop':'convex'},{'func':eq2_redeco6,'type': 'eq', 'prop':'convex'},{'func':eq3_redeco6,'type': 'eq', 'prop':'unknown'},{'func':eq4_redeco6,'type': 'eq', 'prop':'unknown'},{'func':eq5_redeco6,'type': 'eq', 'prop':'unknown'},{'func':eq6_redeco6,'type': 'eq', 'prop':'unknown'}]
bnds_redeco6 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_redeco6 = [x1, x2, x3, x4, x5, x6]
redeco6 = OptimizationProblem("redeco6", sol_redeco6, symobj_redeco6, cons_redeco6, vars_redeco6, bnds_redeco6)

symobj_ex2_1_2 =  (-10.5) * x1 - 7.5 * x2 - 3.5 * x3 - 2.5 * x4 - 1.5 * x5 - 10 * x6 - 0.5 * (x1**2) - 0.5 * (x2**2) - 0.5 * (x3**2) - 0.5 * (x4**2) - 0.5 * (x5**2)
sol_ex2_1_2 = np.array([0.0000000000,1.0000000000,0.0000000000,1.0000000000,1.0000000000,20.0000000000])
ineq1_ex2_1_2 = 10 * x1 + 10 * x3 + x6 - 20
ineq2_ex2_1_2 = 6 * x1 + 3 * x2 + 3 * x3 + 2 * x4 + x5 - 6.5
cons_ex2_1_2 = [{'func':ineq1_ex2_1_2,'type': 'ineq', 'prop': 'convex'},{'func':ineq2_ex2_1_2,'type': 'ineq', 'prop': 'convex'}]
bnds_ex2_1_2 = [np.array([0, 1]), np.array([0, 1]), np.array([0, 1]), np.array([0, 1]), np.array([0, 1]), np.array([0, 1000])]
vars_ex2_1_2 = [x1, x2, x3, x4, x5, x6]
ex2_1_2 = OptimizationProblem("ex2_1_2", sol_ex2_1_2, symobj_ex2_1_2, cons_ex2_1_2, vars_ex2_1_2, bnds_ex2_1_2)

symobj_hs098 = 4.2999999999999998 * x1 + 63.299999999999997 * x2 + 15.800000000000001 * x3 + 68.5 * x4 + 4.7000000000000002 * x5 + 31.800000000000001 * x6
sol_hs098 = np.array([0.268565, 5.23749e-21, 8.47671e-21, 0.028, 0.0134, 0])
ineq1_hs098 = -159.90000000000001 * x1 - 587 * x3 - 391 * x4 - 2198 * x5 + 311 * x6 + 14000 * x1 * x5 - 173.02000000000001
ineq2_hs098 = (70) * x3 + 819 * x4 + 273 * x6 - 26000 * x3 * x4 - 124.08
ineq3_hs098 = -17.100000000000001 * x1 - 204.19999999999999 * x2 - 212.30000000000001 * x3 - 623.39999999999998 * x4 - 1495.5 * x5 - 38.200000000000003 * x6 + 169 * x1 * x2 + 3580 * x2 * x4 + 3810 * x3 * x4 + 18500 * x3 * x5 + 24300 * x4 * x5 + 32.969999999999999
ineq4_hs098 = -17.899999999999999 * x1 - 113.90000000000001 * x2 - 169.69999999999999 * x3 - 337.80000000000001 * x4 - 1385.2 * x5 - 36.799999999999997 * x6 + 139 * x1 * x2 + 2450 * x3 * x4 + 16600 * x3 * x5 + 17200 * x4 * x5 + 25.120000000000001
cons_hs098 = [{'func':ineq1_hs098, 'type':'ineq', 'prop':'unknown'}, {'func':ineq2_hs098, 'type':'ineq', 'prop':'unknown'}, {'func':ineq3_hs098, 'type':'ineq', 'prop':'unknown'}, {'func':ineq4_hs098, 'type':'ineq', 'prop':'unknown'}]
vars_hs098 = [x1, x2, x3, x4, x5, x6]
bnds_hs098 = [np.array([0, 0.31]), np.array([0, 0.068000000000000005]), np.array([0, 0.042000000000000003]), np.array([0, 0.028000000000000001]), np.array([0, 0.0134]), np.array([0, 0.045999999999999999])]
hs098 = OptimizationProblem('hs098', sol_hs098, symobj_hs098, cons_hs098, vars_hs098, bnds_hs098)

symobj_redeco7 =  0
sol_redeco7 = np.array([0.654799,-0.854233,0.15732,-0.520756,-0.0662201,-0.37091,-0.0618184])
eq1_redeco7 =  x1 + x2 + x3 + x4 + x5 + x6 - -1
eq2_redeco7 =  x6 - 6 * x7 - 0
eq3_redeco7 =  x1 - x7 + x1 * x2 + x2 * x3 + x3 * x4 + x4 * x5 + x5 * x6 - 0
eq4_redeco7 =  x5 - 5 * x7 + x1 * x6 - 0
eq5_redeco7 =  x2 - 2 * x7 + x1 * x3 + x2 * x4 + x3 * x5 + x4 * x6 - 0
eq6_redeco7 =  x4 - 4 * x7 + x1 * x5 + x2 * x6 - 0
eq7_redeco7 =  x3 - 3 * x7 + x1 * x4 + x2 * x5 + x3 * x6 - 0
cons_redeco7 = [{'func':eq1_redeco7,'type': 'eq', 'prop': 'convex'},{'func':eq2_redeco7,'type': 'eq', 'prop': 'convex'},{'func':eq3_redeco7,'type': 'eq', 'prop': 'unknown'},{'func':eq4_redeco7,'type': 'eq', 'prop': 'unknown'},{'func':eq5_redeco7,'type': 'eq', 'prop': 'unknown'},{'func':eq6_redeco7,'type': 'eq', 'prop': 'unknown'},{'func':eq7_redeco7,'type': 'eq', 'prop': 'unknown'}]
bnds_redeco7 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_redeco7 = [x1, x2, x3, x4, x5, x6, x7]
redeco7 = OptimizationProblem("redeco7", sol_redeco7, symobj_redeco7, cons_redeco7, vars_redeco7, bnds_redeco7)

symobj_ladders = 0
sol_ladders = np.array([-18.7316354819, -2.9910178412, -33.4334340541, 7.9935511772, -26.7251866592, 42.8022209143, -8.534813887])
eq1_ladders = x1 - x4 - x5
eq2_ladders = (x2**2) + (x4**2) - (x7**2)
eq3_ladders = (x3**2) + (x5**2) - (x6**2)
eq4_ladders = 10 * x6 + (x6 - 30) * x3
eq5_ladders = 60 * x6 + (x4**2) - (x6**2) - 800
eq6_ladders = 10 * x7 + (x7 - 20) * x2
eq7_ladders = (-30) * x3 + (x3 + 10) * x6
eq8_ladders = 40 * x7 - (x7**2) + (x5**2) - 300
eq9_ladders = (-20) * x2 + (x2 + 10) * x7
eq10_ladders = 20 * x4 - x1 * x7
eq11_ladders = 30 * x5 - x1 * x6
eq12_ladders = (x1**2) + (x2 + 20) * x2 - 300
eq13_ladders = (x1**2) + (x3 + 20) * x3 - 800
cons_ladders = [{'func':eq1_ladders, 'type':'eq', 'prop':'convex'}, {'func':eq2_ladders, 'type':'eq', 'prop':'unknown'}, {'func':eq3_ladders, 'type':'eq', 'prop':'unknown'}, {'func':eq4_ladders, 'type':'eq', 'prop':'unknown'}, {'func':eq5_ladders, 'type':'eq', 'prop':'unknown'}, {'func':eq6_ladders, 'type':'eq', 'prop':'unknown'}, {'func':eq7_ladders, 'type':'eq', 'prop':'unknown'}, {'func':eq8_ladders, 'type':'eq', 'prop':'unknown'}, {'func':eq9_ladders, 'type':'eq', 'prop':'unknown'}, {'func':eq10_ladders, 'type':'eq', 'prop':'unknown'}, {'func':eq11_ladders, 'type':'eq', 'prop':'unknown'}, {'func':eq12_ladders, 'type':'eq', 'prop':'unknown'}, {'func':eq13_ladders, 'type':'eq', 'prop':'unknown'}]
vars_ladders = [x1, x2, x3, x4, x5, x6, x7]
bnds_ladders = [np.array([-1000, 1000]), np.array([-1000, 1000]), np.array([-1000, 1000]), np.array([-1000, 1000]), np.array([-1000, 1000]), np.array([-1000, 1000]), np.array([-1000, 1000])]
ladders = OptimizationProblem('ladders', sol_ladders, symobj_ladders, cons_ladders, vars_ladders, bnds_ladders)

symobj_meanvar =  21.09 * (x1**2) + 35.445 * (x2**2) + 12.755000000000001 * (x3**2) + 11.164999999999999 * (x4**2) + 15.005000000000001 * (x5**2) + 21.114999999999998 * (x6**2) + 8.2100000000000009 * (x7**2) + x4 * x7 + 20.18 * x1 * x2 + 5.4400000000000004 * x1 * x3 + 2.6499999999999999 * x1 * x4 + 6.1600000000000001 * x1 * x5 + 11.92 * x1 * x6 + 8.7050000000000001 * x1 * x7 + 10.789999999999999 * x2 * x3 + 7.7050000000000001 * x2 * x4 + 11.619999999999999 * x2 * x5 + 11.9 * x2 * x6 + 6.3099999999999996 * x2 * x7 + 5.4400000000000004 * x1 * x3 + 10.789999999999999 * x2 * x3 + 4.7999999999999998 * x3 * x4 + 11.315 * x3 * x5 + 6.6100000000000003 * x3 * x6 + 2.3500000000000001 * x3 * x7 + 2.6499999999999999 * x1 * x4 + 7.7050000000000001 * x2 * x4 + 4.7999999999999998 * x3 * x4 + 5.1600000000000001 * x4 * x5 + 5.2300000000000004 * x4 * x6 + 6.1600000000000001 * x1 * x5 + 11.619999999999999 * x2 * x5 + 11.315 * x3 * x5 + 5.1600000000000001 * x4 * x5 + 8.1799999999999997 * x5 * x6 + 3.6000000000000001 * x5 * x7 + 11.92 * x1 * x6 + 11.9 * x2 * x6 + 6.6100000000000003 * x3 * x6 + 5.2300000000000004 * x4 * x6 + 8.1799999999999997 * x5 * x6 + 9.9000000000000004 * x6 * x7 + 8.7050000000000001 * x1 * x7 + 6.3099999999999996 * x2 * x7 + 2.3500000000000001 * x3 * x7 + 3.6000000000000001 * x5 * x7
sol_meanvar = np.array([0,0,0.0144299,0.464722,2.09909e-20,0.0904447,0.430404,0.115])
eq1_meanvar =  x1 + x2 + x3 + x4 + x5 + x6 + x7 - 1
eq2_meanvar =  (-0.12870000000000001) * x1 - 0.1096 * x2 - 0.050099999999999999 * x3 - 0.15240000000000001 * x4 - 0.076300000000000007 * x5 - 0.18540000000000001 * x6 - 0.062 * x7 + x8 - 0
cons_meanvar = [{'func':eq1_meanvar,'type': 'eq', 'prop': 'convex'},{'func':eq2_meanvar,'type': 'eq', 'prop': 'convex'}]
bnds_meanvar = [np.array([0, 1]), np.array([0, 1]), np.array([0, 1]), np.array([0, 1]), np.array([0, 1]), np.array([0, 1]), np.array([0, 1]), np.array([0.115, 0.115])]
vars_meanvar = [x1, x2, x3, x4, x5, x6, x7, x8]
meanvar = OptimizationProblem("meanvar", sol_meanvar, symobj_meanvar, cons_meanvar, vars_meanvar, bnds_meanvar)

symobj_discret3 =  0
sol_discret3 = np.array([2.60554,2.78811,2.41699,1.80763,2.01919,2.22184,1.34424,1.58457])
eq1_discret3 =  4.1261870974784403 * x7 - 0.13753956991594801 * (x7**2) - 0.034384892478987003 * x1 * x7 - 0.039297019975985198 * x3 * x7 - 0.068769784957974006 * x4 * x7 - 0.055015827966379202 * x5 * x7 - 0.045846523305316002 * x6 * x7 - 0.091693046610632004 * x7 * x8 - 4.4012662373103399
eq2_discret3 =  3.7706363994307801 * x2 - 0.134067071979761 * x1 * x2 - 0.143643291406887 * x2 * x3 - 0.18281873451785599 * x2 * x4 - 0.167583839974702 * x2 * x5 - 0.154692775361263 * x2 * x6 - 0.22344511996626901 * x2 * x7 - 0.20110060796964199 * x2 * x8 - 4.0220121593928404
eq3_discret3 =  3.7909702490275499 * x1 - 0.126365674967585 * (x1**2) - 0.13608611150355299 * x1 * x3 - 0.17691194495461901 * x1 * x4 - 0.160829040867835 * x1 * x5 - 0.14742662079551599 * x1 * x6 - 0.22113993119327399 * x1 * x7 - 0.19656882772735401 * x1 * x8 - 4.0437015989627199
eq4_discret3 =  4.0109410738286702 * x8 - 0.13369803579428899 * (x8**2) - 0.17826404772571899 * x7 * x8 - 0.059421349241906202 * x1 * x8 - 0.066849017897144494 * x3 * x8 - 0.10695842863543099 * x4 * x8 - 0.089132023862859303 * x5 * x8 - 0.076398877596736497 * x6 * x8 - 4.2783371454172503
eq5_discret3 =  3.8156285426954102 * x3 - 0.12718761808984699 * (x3**2) - 0.11740395515985901 * x1 * x3 - 0.16958349078646301 * x3 * x4 - 0.15262514170781599 * x3 * x5 - 0.138750128825288 * x3 * x6 - 0.218035916725452 * x3 * x7 - 0.19078142713477 * x3 * x8 - 4.0700037788751002
eq6_discret3 =  3.8462210482499199 * x6 - 0.12820736827499701 * (x6**2) - 0.106839473562498 * x1 * x6 - 0.11655215297726999 * x3 * x6 - 0.16025921034374699 * x4 * x6 - 0.14245263141666401 * x5 * x6 - 0.21367894712499599 * x6 * x7 - 0.183153383249996 * x6 * x8 - 4.1026357847999098
eq7_discret3 =  3.88531963403948 * x5 - 0.12951065446798299 * (x5**2) - 0.094189566885805501 * x1 * x5 - 0.10360852357438601 * x3 * x5 - 0.148012176534837 * x4 * x5 - 0.115120581749318 * x5 * x6 - 0.20721704714877201 * x5 * x7 - 0.17268087262397699 * x5 * x8 - 4.1443409429754396
eq8_discret3 =  3.93736328599701 * x4 - 0.131245442866567 * (x4**2) - 0.078747265719940299 * x1 * x4 - 0.087496961911044793 * x3 * x4 - 0.11249609388562901 * x4 * x5 - 0.0984340821499253 * x4 * x6 - 0.19686816429985099 * x4 * x7 - 0.15749453143988101 * x4 * x8 - 4.1998541717301503
cons_discret3 = [{'func':eq1_discret3,'type': 'eq', 'prop': 'unknown'},{'func':eq2_discret3,'type': 'eq', 'prop': 'unknown'},{'func':eq3_discret3,'type': 'eq', 'prop': 'unknown'},{'func':eq4_discret3,'type': 'eq', 'prop': 'unknown'},{'func':eq5_discret3,'type': 'eq', 'prop': 'unknown'},{'func':eq6_discret3,'type': 'eq', 'prop': 'unknown'},{'func':eq7_discret3,'type': 'eq', 'prop': 'unknown'},{'func':eq8_discret3,'type': 'eq', 'prop': 'unknown'}]
bnds_discret3 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_discret3 = [x1, x2, x3, x4, x5, x6, x7, x8]
discret3 = OptimizationProblem("discret3", sol_discret3, symobj_discret3, cons_discret3, vars_discret3, bnds_discret3)

symobj_eco9 =  0
sol_eco9 = np.array([1.53785,0.224122,-1.17811,-0.258552,0.386083,-1.40486,0.602632,-0.909159])
eq1_eco9 =  x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + 1
eq2_eco9 =  x1 - ((- x7) + 0.125) * x8 + x2 * (x1 + x3) + x4 * (x3 + x5) + x6 * (x5 + x7) - 0
eq3_eco9 =  x7 - ((- x1) + 0.875) * x8 - 0
eq4_eco9 =  x6 + x1 * x7 - ((- x2) + 0.75) * x8 - 0
eq5_eco9 =  x5 + x1 * x6 + x2 * x7 - ((- x3) + 0.625) * x8 - 0
eq6_eco9 =  x2 + x5 * x7 - ((- x6) + 0.25) * x8 + x3 * (x1 + x5) + x4 * (x2 + x6) - 0
eq7_eco9 =  x4 + x1 * x5 + x2 * x6 + x3 * x7 - ((- x4) + 0.5) * x8 - 0
eq8_eco9 =  x2 * x5 + (x6 + 1) * x3 - ((- x5) + 0.375) * x8 + x4 * (x1 + x7) - 0
cons_eco9 = [{'func':eq1_eco9,'type': 'eq', 'prop': 'convex'},{'func':eq2_eco9,'type': 'eq', 'prop': 'unknown'},{'func':eq3_eco9,'type': 'eq', 'prop': 'unknown'},{'func':eq4_eco9,'type': 'eq', 'prop': 'unknown'},{'func':eq5_eco9,'type': 'eq', 'prop': 'unknown'},{'func':eq6_eco9,'type': 'eq', 'prop': 'unknown'},{'func':eq7_eco9,'type': 'eq', 'prop': 'unknown'},{'func':eq8_eco9,'type': 'eq', 'prop': 'unknown'}]
bnds_eco9 = [np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100])]
vars_eco9 = [x1, x2, x3, x4, x5, x6, x7, x8]
eco9 = OptimizationProblem("eco9", sol_eco9, symobj_eco9, cons_eco9, vars_eco9, bnds_eco9)

symobj_ipp =  0
sol_ipp = np.array([-0.5636326343,0.8260255768,0.3590420181,0.9333213965,-0.8618968518,-0.5070836389,0.9115095274,0.4112789581])
eq1_ipp =  (x1**2) + (x2**2) - 1
eq2_ipp =  (x3**2) + (x4**2) - 1
eq3_ipp =  (x5**2) + (x6**2) - 1
eq4_ipp =  (x7**2) + (x8**2) - 1
eq5_ipp =  0.074052387999999997 * x1 - 0.083050030999999996 * x2 - 0.38615960999999999 * x3 - 0.75526603000000003 * x4 + 0.50420167999999999 * x5 - 1.0916287 * x6 + 0.40026383999999998 * x8 - 0.24915068000000001 * x1 * x3 + 1.6091354 * x1 * x4 + 0.27942342999999997 * x2 * x3 + 1.4348015999999999 * x2 * x4 + 0.40026383999999998 * x5 * x8 - 0.80052767999999996 * x6 * x7 + 0.049207290000000001
eq6_ipp =  (-0.20816984999999999) * x1 + 2.6868319999999999 * x2 - 0.69910317 * x3 + 0.35744413000000003 * x4 + 1.2499117 * x5 + 1.4677359999999999 * x6 + 1.1651720000000001 * x7 + 1.10763397 * x8 + 1.4894772999999999 * x1 * x3 + 0.23062341 * x1 * x4 + 1.3281073000000001 * x2 * x3 - 0.25864503 * x2 * x4 + 1.1651720000000001 * x5 * x7 - 0.26908493999999999 * x5 * x8 + 0.53816987000000005 * x6 * x7 + 0.58258597999999995 * x6 * x8 - 0.69686809000000005
eq7_ipp =  0.19594661999999999 * x1 - 1.2280342 * x2 - 0.079034221000000002 * x4 + 0.026387877000000001 * x5 - 0.057131429999999997 * x6 - 1.1628080999999999 * x7 + 1.2587767000000001 * x8 + 0.29070203 * x5 * x7 - 0.63555006999999997 * x1 * x3 - 0.11571992 * x1 * x4 - 0.66640447999999997 * x2 * x3 + 0.11036211 * x2 * x4 + 1.2587767000000001 * x5 * x8 - 0.62938835999999998 * x6 * x7 + 0.58140406 * x6 * x8 + 2.1625749999999999
eq8_ipp =  (-0.037157269999999999) * x1 + 0.035436896000000002 * x2 + 0.085383481999999997 * x3 - 0.039251966999999999 * x5 - 0.43241927000000002 * x7 + 0.12501635 * x1 * x3 - 0.68660736 * x1 * x4 - 0.11922812000000001 * x2 * x3 - 0.71994047000000005 * x2 * x4 - 0.43241927000000002 * x5 * x7 - 0.86483854999999998 * x6 * x8 - -0.01387301
cons_ipp = [{'func':eq1_ipp,'type': 'eq', 'prop': 'unknown'},{'func':eq2_ipp,'type': 'eq', 'prop': 'unknown'},{'func':eq3_ipp,'type': 'eq', 'prop': 'unknown'},{'func':eq4_ipp,'type': 'eq', 'prop': 'unknown'},{'func':eq5_ipp,'type': 'eq', 'prop': 'unknown'},{'func':eq6_ipp,'type': 'eq', 'prop': 'unknown'},{'func':eq7_ipp,'type': 'eq', 'prop': 'unknown'},{'func':eq8_ipp,'type': 'eq', 'prop': 'unknown'}]
bnds_ipp = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_ipp = [x1, x2, x3, x4, x5, x6, x7, x8]
ipp = OptimizationProblem("ipp", sol_ipp, symobj_ipp, cons_ipp, vars_ipp, bnds_ipp)

symobj_kear11 =  0
sol_kear11 = np.array([0.671554,0.740955,0.95473,0.297474,0.128778,-0.991673,0.969312,0.245835])
eq1_kear11 =  (-0.76229999999999998) * x1 + 0.2238 * x2 - -0.34610000000000002
eq2_kear11 =  (x1**2) + (x2**2) - 1
eq3_kear11 =  (x3**2) + (x4**2) - 1
eq4_kear11 =  0.35780000000000001 * x1 + 0.004731 * x2 + x6 * x8 - 0
eq5_kear11 =  0.26379999999999998 * x1 - 0.077450000000000005 * x2 - 0.6734 * x4 + 0.2238 * x1 * x3 + 0.76229999999999998 * x2 * x3 - 0.60219999999999996
eq6_kear11 =  (x5**2) + (x6**2) - 1
eq7_kear11 =  (x7**2) + (x8**2) - 1
eq8_kear11 =  (-0.12379999999999999) * x1 - 0.001637 * x2 - 0.93379999999999996 * x4 + x7 + 0.004731 * x1 * x3 - 0.35780000000000001 * x2 * x3 - 0.35709999999999997
cons_kear11 = [{'func':eq1_kear11,'type': 'eq', 'prop': 'unknown'},{'func':eq2_kear11,'type': 'eq', 'prop': 'unknown'},{'func':eq3_kear11,'type': 'eq', 'prop': 'unknown'},{'func':eq4_kear11,'type': 'eq', 'prop': 'unknown'},{'func':eq5_kear11,'type': 'eq', 'prop': 'unknown'},{'func':eq6_kear11,'type': 'eq', 'prop': 'unknown'},{'func':eq7_kear11,'type': 'eq', 'prop': 'unknown'},{'func':eq8_kear11,'type': 'eq', 'prop': 'unknown'}]
bnds_kear11 = [np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1])]
vars_kear11 = [x1, x2, x3, x4, x5, x6, x7, x8]
kear11 = OptimizationProblem("kear11", sol_kear11, symobj_kear11, cons_kear11, vars_kear11, bnds_kear11)

symobj_kin2 =  0
sol_kin2 = np.array([0.977922,0.208971,0.0261133,0.999659,-0.0978686,0.995199,0.0770736,-0.997025])
eq1_kin2 =  (x1**2) + (x2**2) - 1
eq2_kin2 =  (x3**2) + (x4**2) - 1
eq3_kin2 =  (x5**2) + (x6**2) - 1
eq4_kin2 =  (x7**2) + (x8**2) - 1
eq5_kin2 =  0.074052387999999997 * x1 - 0.083050030999999996 * x2 + 0.50420167999999999 * x5 + (0.40026383999999998 * x5 + 0.049207290000000001) * x8 + ((-0.80052767999999996) * x7 - 1.0916287) * x6 + x3 * ((-0.24915068000000001) * x1 + 0.27942342999999997 * x2 - 0.38615960999999999) + x4 * (1.6091354 * x1 + 1.4348015999999999 * x2 - 0.75526603000000003) - -0.049207290000000001
eq6_kin2 =  (-0.20816984999999999) * x1 + 2.6868319999999999 * x2 + 1.2499117 * x5 + 1.4677359999999999 * x6 + x3 * (1.4894772999999999 * x1 + 1.3281073000000001 * x2 - 0.69910317) + x4 * (0.23062341 * x1 - 0.25864503 * x2 + 0.35744413000000003) + x7 * (1.1651720000000001 * x5 + 0.53816987000000005 * x6 + 1.1651720000000001) + x8 * ((-0.26908493999999999) * x5 + 0.58258597999999995 * x6 + 1.0763396999999999) - 0.69686809000000005
eq7_kin2 =  0.19594661999999999 * x1 - 1.2280342 * x2 + 0.026387877000000001 * x5 - 0.057131429999999997 * x6 + x3 * ((-0.63555006999999997) * x1 - 0.66640447999999997 * x2) + x4 * ((-0.11571992) * x1 + 0.11036211 * x2 - 0.079034221000000002) + x7 * (0.29070203 * x5 - 0.62938835999999998 * x6 - 1.1628080999999999) + x8 * (1.2587767000000001 * x5 + 0.58140406 * x6 + 1.2587767000000001) - -2.1625749999999999
eq8_kin2 =  (-0.037157269999999999) * x1 + 0.035436896000000002 * x2 - 0.039251966999999999 * x5 - 0.86483854999999998 * x6 * x8 + ((-0.43241927000000002) * x5 - 0.43241927000000002) * x7 + x3 * (0.12501635 * x1 - 0.11922812000000001 * x2 + 0.085383481999999997) + x4 * ((-0.68660736) * x1 - 0.71994047000000005 * x2) - -0.01387301
cons_kin2 = [{'func':eq1_kin2,'type': 'eq', 'prop': 'unknown'},{'func':eq2_kin2,'type': 'eq', 'prop': 'unknown'},{'func':eq3_kin2,'type': 'eq', 'prop': 'unknown'},{'func':eq4_kin2,'type': 'eq', 'prop': 'unknown'},{'func':eq5_kin2,'type': 'eq', 'prop': 'unknown'},{'func':eq6_kin2,'type': 'eq', 'prop': 'unknown'},{'func':eq7_kin2,'type': 'eq', 'prop': 'unknown'},{'func':eq8_kin2,'type': 'eq', 'prop': 'unknown'}]
bnds_kin2 = [np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1])]
vars_kin2 = [x1, x2, x3, x4, x5, x6, x7, x8]
kin2 = OptimizationProblem("kin2", sol_kin2, symobj_kin2, cons_kin2, vars_kin2, bnds_kin2)

symobj_kink =  0
sol_kink = np.array([0.671554,0.740955,0.95473,0.297474,0.128778,-0.991673,0.969312,0.245835])
eq1_kink =  (-0.76229999999999998) * x1 + 0.2238 * x2 - -0.34610000000000002
eq2_kink =  (x1**2) + (x2**2) - 1
eq3_kink =  (x3**2) + (x4**2) - 1
eq4_kink =  0.35780000000000001 * x1 + 0.004731 * x2 + x6 * x8 - 0
eq5_kink =  0.26379999999999998 * x1 - 0.077450000000000005 * x2 - 0.6734 * x4 + 0.2238 * x1 * x3 + 0.76229999999999998 * x2 * x3 - 0.60219999999999996
eq6_kink =  (x5**2) + (x6**2) - 1
eq7_kink =  (x7**2) + (x8**2) - 1
eq8_kink =  (-0.12379999999999999) * x1 - 0.001637 * x2 - 0.93379999999999996 * x4 + x7 + 0.004731 * x1 * x3 - 0.35780000000000001 * x2 * x3 - 0.35709999999999997
cons_kink = [{'func':eq1_kink,'type': 'eq', 'prop': 'unknown'},{'func':eq2_kink,'type': 'eq', 'prop': 'unknown'},{'func':eq3_kink,'type': 'eq', 'prop': 'unknown'},{'func':eq4_kink,'type': 'eq', 'prop': 'unknown'},{'func':eq5_kink,'type': 'eq', 'prop': 'unknown'},{'func':eq6_kink,'type': 'eq', 'prop': 'unknown'},{'func':eq7_kink,'type': 'eq', 'prop': 'unknown'},{'func':eq8_kink,'type': 'eq', 'prop': 'unknown'}]
bnds_kink = [np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1])]
vars_kink = [x1, x2, x3, x4, x5, x6, x7, x8]
kink = OptimizationProblem("kink", sol_kink, symobj_kink, cons_kink, vars_kink, bnds_kink)

symobj_nauheim =  0
sol_nauheim = np.array([-0.9984478660,-0.1806010465,0.2196069929,0.7151726480,0.1057627501,0.0643026161,-0.1408615420,-0.4941157341])
eq1_nauheim =  9 * x1 - 7 * x7 - -8
eq2_nauheim =  9 * x2 + 6 * x7 - 5 * x8 - 0
eq3_nauheim =  7 * x1 + 8 * x4 - 9 * x7 - 0
eq4_nauheim =  9 * x3 + 4 * x8 - 0
eq5_nauheim =  2 * x2 * x6 + x3 * x5 - 0
eq6_nauheim =  4 * x1 * x6 + 3 * x2 * x5 + 2 * x3 * x4 - 0
eq7_nauheim =  5 * x2 + 7 * x5 - 9 * x8 + 6 * x1 * x4 - 0
eq8_nauheim =  3 * x3 + 6 * x6 + 5 * x1 * x5 + 4 * x2 * x4 - 0
cons_nauheim = [{'func':eq1_nauheim,'type': 'eq', 'prop': 'convex'},{'func':eq2_nauheim,'type': 'eq', 'prop': 'convex'},{'func':eq3_nauheim,'type': 'eq', 'prop': 'convex'},{'func':eq4_nauheim,'type': 'eq', 'prop': 'convex'},{'func':eq5_nauheim,'type': 'eq', 'prop': 'unknown'},{'func':eq6_nauheim,'type': 'eq', 'prop': 'unknown'},{'func':eq7_nauheim,'type': 'eq', 'prop': 'unknown'},{'func':eq8_nauheim,'type': 'eq', 'prop': 'unknown'}]
bnds_nauheim = [np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000])]
vars_nauheim = [x1, x2, x3, x4, x5, x6, x7, x8]
nauheim = OptimizationProblem("nauheim", sol_nauheim, symobj_nauheim, cons_nauheim, vars_nauheim, bnds_nauheim)

symobj_puma =  0
sol_puma = np.array([0.671554,0.740955,0.95473,0.297474,0.128778,-0.991673,0.969312,0.245835])
eq1_puma =  (-0.76229999999999998) * x1 + 0.2238 * x2 - -0.34610000000000002
eq2_puma =  (x1**2) + (x2**2) - 1
eq3_puma =  (x3**2) + (x4**2) - 1
eq4_puma =  (x5**2) + (x6**2) - 1
eq5_puma =  (x7**2) + (x8**2) - 1
eq6_puma =  (-0.12379999999999999) * x1 - 0.001637 * x2 - 0.93379999999999996 * x4 + x7 + 0.004731 * x1 * x3 - 0.35780000000000001 * x2 * x3 - 0.35709999999999997
eq7_puma =  0.35780000000000001 * x1 + 0.004731 * x2 + x6 * x8 - 0
eq8_puma =  0.26379999999999998 * x1 - 0.077450000000000005 * x2 - 0.6734 * x4 + 0.2238 * x1 * x3 + 0.76229999999999998 * x2 * x3 - 0.60219999999999996
cons_puma = [{'func':eq1_puma,'type': 'eq', 'prop': 'unknown'},{'func':eq2_puma,'type': 'eq', 'prop': 'unknown'},{'func':eq3_puma,'type': 'eq', 'prop': 'unknown'},{'func':eq4_puma,'type': 'eq', 'prop': 'unknown'},{'func':eq5_puma,'type': 'eq', 'prop': 'unknown'},{'func':eq6_puma,'type': 'eq', 'prop': 'unknown'},{'func':eq7_puma,'type': 'eq', 'prop': 'unknown'},{'func':eq8_puma,'type': 'eq', 'prop': 'unknown'}]
bnds_puma = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_puma = [x1, x2, x3, x4, x5, x6, x7, x8]
puma = OptimizationProblem("puma", sol_puma, symobj_puma, cons_puma, vars_puma, bnds_puma)

symobj_redeco8 =  0
sol_redeco8 = np.array([-0.1428571429,-0.1428571429,-0.1428571429,-0.1428571429,-0.1428571429,-0.1428571429,-0.1428571429,-0.0204081633])
eq1_redeco8 =  x1 + x2 + x3 + x4 + x5 + x6 + x7 - -1
eq2_redeco8 =  x7 - 7 * x8 - 0
eq3_redeco8 =  x1 - x8 + x1 * x2 + x2 * x3 + x3 * x4 + x4 * x5 + x5 * x6 + x6 * x7 - 0
eq4_redeco8 =  x6 - 6 * x8 + x1 * x7 - 0
eq5_redeco8 =  x5 - 5 * x8 + x1 * x6 + x2 * x7 - 0
eq6_redeco8 =  x2 - 2 * x8 + x1 * x3 + x2 * x4 + x3 * x5 + x4 * x6 + x5 * x7 - 0
eq7_redeco8 =  x4 - 4 * x8 + x1 * x5 + x2 * x6 + x3 * x7 - 0
eq8_redeco8 =  x3 - 3 * x8 + x1 * x4 + x2 * x5 + x3 * x6 + x4 * x7 - 0
cons_redeco8 = [{'func':eq1_redeco8,'type': 'eq', 'prop': 'convex'},{'func':eq2_redeco8,'type': 'eq', 'prop': 'convex'},{'func':eq3_redeco8,'type': 'eq', 'prop': 'unknown'},{'func':eq4_redeco8,'type': 'eq', 'prop': 'unknown'},{'func':eq5_redeco8,'type': 'eq', 'prop': 'unknown'},{'func':eq6_redeco8,'type': 'eq', 'prop': 'unknown'},{'func':eq7_redeco8,'type': 'eq', 'prop': 'unknown'},{'func':eq8_redeco8,'type': 'eq', 'prop': 'unknown'}]
bnds_redeco8 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_redeco8 = [x1, x2, x3, x4, x5, x6, x7, x8]
redeco8 = OptimizationProblem("redeco8", sol_redeco8, symobj_redeco8, cons_redeco8, vars_redeco8, bnds_redeco8)

symobj_s9_1 =  0
sol_s9_1 = np.array([-0.9984478660,-0.1806010465,0.2196069929,0.7151726480,0.1057627501,0.0643026161,-0.1408615420,-0.4941157341])
eq1_s9_1 =  9 * x1 - 7 * x7 - -8
eq2_s9_1 =  9 * x2 + 6 * x7 - 5 * x8 - 0
eq3_s9_1 =  (-7) * x1 - 8 * x4 + 9 * x7 - 0
eq4_s9_1 =  9 * x3 + 4 * x8 - 0
eq5_s9_1 =  (-2) * x2 * x6 - x3 * x5 - 0
eq6_s9_1 =  (-4) * x1 * x6 - 3 * x2 * x5 - 2 * x3 * x4 - 0
eq7_s9_1 =  (-5) * x2 - 7 * x5 + 9 * x8 - 6 * x1 * x4 - 0
eq8_s9_1 =  (-3) * x3 - 6 * x6 - 5 * x1 * x5 - 4 * x2 * x4 - 0
cons_s9_1 = [{'func':eq1_s9_1,'type': 'eq', 'prop': 'convex'},{'func':eq2_s9_1,'type': 'eq', 'prop': 'convex'},{'func':eq3_s9_1,'type': 'eq', 'prop': 'convex'},{'func':eq4_s9_1,'type': 'eq', 'prop': 'convex'},{'func':eq5_s9_1,'type': 'eq', 'prop': 'unknown'},{'func':eq6_s9_1,'type': 'eq', 'prop': 'unknown'},{'func':eq7_s9_1,'type': 'eq', 'prop': 'unknown'},{'func':eq8_s9_1,'type': 'eq', 'prop': 'unknown'}]
bnds_s9_1 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_s9_1 = [x1, x2, x3, x4, x5, x6, x7, x8]
s9_1 = OptimizationProblem("s9_1", sol_s9_1, symobj_s9_1, cons_s9_1, vars_s9_1, bnds_s9_1)

symobj_bellido = 0
sol_bellido = np.array([9.3916661681, 9.2476345419, 2.6415631705, 7.9626675077, 5.1949976754, 6.3204349074, 5.0133097151, 6.5045382606, 10.9665507117])
eq1_bellido = x1 + x3 - 2 * x4 + x5 - x6 + 2 * x7 - 2 * x8 + 8
eq2_bellido = x1 + x2 + 2 * x3 + 2 * x4 + 2 * x6 - 2 * x7 + x8 - x9 - 38
eq3_bellido = 2 * x2 + 2 * x3 - x4 - x5 - 2 * x6 - x7 - x9 + 18
eq4_bellido = (-12) * x1 + x1**2 + x2**2 + x3**2 - 68
eq5_bellido = (-12) * x5 + x4**2 + x5**2 + x6**2 - 68
eq6_bellido = (-6) * x5 - 12 * x8 - 6 * x9 + x4 * x7 + x5 * x8 + x6 * x9 + 32
eq7_bellido = (-24) * x8 - 12 * x9 + x7**2 + x8**2 + x9**2 + 100
eq8_bellido = (-6) * x1 - 12 * x8 - 6 * x9 + x1 * x7 + x2 * x8 + x3 * x9 + 64
eq9_bellido = (-6) * x1 - 6 * x5 + x1 * x4 + x2 * x5 + x3 * x6 - 52
cons_bellido = [{'func':eq1_bellido, 'type':'eq', 'prop':'unknown'}, {'func':eq2_bellido, 'type':'eq', 'prop':'unknown'}, {'func':eq3_bellido, 'type':'eq', 'prop':'unknown'}, {'func':eq4_bellido, 'type':'eq', 'prop':'unknown'}, {'func':eq5_bellido, 'type':'eq', 'prop':'unknown'}, {'func':eq6_bellido, 'type':'eq', 'prop':'unknown'}, {'func':eq7_bellido, 'type':'eq', 'prop':'unknown'}, {'func':eq8_bellido, 'type':'eq', 'prop':'unknown'}, {'func':eq9_bellido, 'type':'eq', 'prop':'unknown'}]
vars_bellido = [x1, x2, x3, x4, x5, x6, x7, x8, x9]
bnds_bellido = [np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000])]
bellido = OptimizationProblem('bellido', sol_bellido, symobj_bellido, cons_bellido, vars_bellido, bnds_bellido)

symobj_kapur =  0
sol_kapur = np.array([1.3552017928,3.2156376596,2.5470511926,0.1404910598,2.6875422524,4.5708394524,0.3578379213,4.3578379213,2.9661096069])
eq1_kapur =  -x1 - x2 + x6 - 0
eq2_kapur =  -x3 - x4 + x5 - 0
eq3_kapur =  x7 + x2 * x5 - 9
eq4_kapur =  x7 + x1 * x5 - 4
eq5_kapur =  x8 - x1 * x2 - 0
eq6_kapur =  x7 - x3 * x4 - 0
eq7_kapur =  x8 + x4 * x6 - 5
eq8_kapur =  (-9) * x9 + 2 * x5 * x8 + 2 * x6 * x7 - 0
eq9_kapur =  x8 + x3 * x6 - 16
cons_kapur = [{'func':eq1_kapur,'type': 'eq', 'prop': 'convex'},{'func':eq2_kapur,'type': 'eq', 'prop': 'convex'},{'func':eq3_kapur,'type': 'eq'},{'func':eq4_kapur,'type': 'eq'},{'func':eq5_kapur,'type': 'eq'},{'func':eq6_kapur,'type': 'eq'},{'func':eq7_kapur,'type': 'eq'},{'func':eq8_kapur,'type': 'eq'},{'func':eq9_kapur,'type': 'eq'}]
bnds_kapur = [np.array([0, 1000]), np.array([0, 1000]), np.array([0, 1000]), np.array([0, 1000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([0, 1000])]
vars_kapur = [x1, x2, x3, x4, x5, x6, x7, x8, x9]
kapur = OptimizationProblem("kapur", sol_kapur, symobj_kapur, cons_kapur, vars_kapur, bnds_kapur)

symobj_kinema =  0
sol_kinema = np.array([5.1422604971,8.3190211463,5.8359378092,1.0548391333,10.4491459122,9.1155041032,1.8911493054,10.9922302297,14.6837753538])
eq1_kinema =  x1 + x3 - 2 * x4 + x5 - x6 + 2 * x7 - 2 * x8 + 8
eq2_kinema =  x1 + x2 + 2 * x3 + 2 * x4 + 2 * x6 - 2 * x7 + x8 - x9 - 38
eq3_kinema =  2 * x2 + 2 * x3 - x4 - x5 - 2 * x6 - x7 - x9 + 18
eq4_kinema =  (-12) * x1 + (x1**2) + (x2**2) + (x3**2) - 68
eq5_kinema =  (-12) * x5 + (x4**2) + (x5**2) + (x6**2) - 68
eq6_kinema =  (-24) * x8 - 12 * x9 + (x7**2) + (x8**2) + (x9**2) + 100
eq7_kinema =  (-6) * x5 - 12 * x8 - 6 * x9 + x4 * x7 + x5 * x8 + x6 * x9 + 32
eq8_kinema =  (-6) * x1 - 6 * x5 + x1 * x4 + x2 * x5 + x3 * x6 - 52
eq9_kinema =  (-6) * x1 - 12 * x8 - 6 * x9 + x1 * x7 + x2 * x8 + x3 * x9 + 64
cons_kinema = [{'func':eq1_kinema,'type': 'eq', 'prop': 'convex'},{'func':eq2_kinema,'type': 'eq', 'prop': 'convex'},{'func':eq3_kinema,'type': 'eq', 'prop': 'convex'},{'func':eq4_kinema,'type': 'eq'},{'func':eq5_kinema,'type': 'eq'},{'func':eq6_kinema,'type': 'eq'},{'func':eq7_kinema,'type': 'eq'},{'func':eq8_kinema,'type': 'eq'},{'func':eq9_kinema,'type': 'eq'}]
bnds_kinema = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_kinema = [x1, x2, x3, x4, x5, x6, x7, x8, x9]
kinema = OptimizationProblem("kinema", sol_kinema, symobj_kinema, cons_kinema, vars_kinema, bnds_kinema)

symobj_vrahatis = 0
#sol_vrahatis = np.array([0, 0, 0, 0, -8.47033e-22, -6.52318e-12, 1.79451e-16, -6.20445e-20, 0])
sol_vrahatis = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0])
eq1_vrahatis = -x2 + x1**2
eq2_vrahatis = -x1 + x9**2
eq3_vrahatis = -x3 + x2**2
eq4_vrahatis = -x9 + x8**2
eq5_vrahatis = -x4 + x3**2
eq6_vrahatis = -x8 + x7**2
eq7_vrahatis = -x5 + x4**2
eq8_vrahatis = -x7 + x6**2
eq9_vrahatis = -x6 + x5**2
cons_vrahatis = [{'func':eq1_vrahatis, 'type':'eq', 'prop':'unknown'}, {'func':eq2_vrahatis, 'type':'eq', 'prop':'unknown'}, {'func':eq3_vrahatis, 'type':'eq', 'prop':'unknown'}, {'func':eq4_vrahatis, 'type':'eq', 'prop':'unknown'}, {'func':eq5_vrahatis, 'type':'eq', 'prop':'unknown'}, {'func':eq6_vrahatis, 'type':'eq', 'prop':'unknown'}, {'func':eq7_vrahatis, 'type':'eq', 'prop':'unknown'}, {'func':eq8_vrahatis, 'type':'eq', 'prop':'unknown'}, {'func':eq9_vrahatis, 'type':'eq', 'prop':'unknown'}]
vars_vrahatis = [x1, x2, x3, x4, x5, x6, x7, x8, x9]
bnds_vrahatis = [np.array([-1000, 1000]), np.array([-1000, 1000]), np.array([-1000, 1000]), np.array([-1000, 1000]), np.array([-1000, 1000]), np.array([-1000, 1000]), np.array([-1000, 1000]), np.array([-1000, 1000]), np.array([-1000, 1000])]
vrahatis = OptimizationProblem('vrahatis', sol_vrahatis, symobj_vrahatis, cons_vrahatis, vars_vrahatis, bnds_vrahatis)

symobj_chemkin =  0
sol_chemkin = np.array([-0.9942302805,-0.4193892828,0.4430190520,0.0917581828,-0.9077859376,-0.5158801861,0.7397012830,0.0555570451,-0.0061090885,-0.7891492397])
eq1_chemkin =  x7 + x8 + x9 + x10 - 0
eq2_chemkin =  x3 + x4 + x5 + x6 - -0.88888888888888895
eq3_chemkin =  x1 + x2 - 2.8284271247461898 * x3 - -2.6666666666666665
eq4_chemkin =  (-5.6568542494923806) * x3 + x7 + 9 * (x3**2) - 0
eq5_chemkin =  (x1**2) + (x4**2) + (x8**2) - 1
eq6_chemkin =  0.33333333333333331 * x2 + x5 * x6 + x9 * x10 - 0.33333333333333331
eq7_chemkin =  (x2**2) + (x5**2) + (x9**2) - 1
eq8_chemkin =  x1 * x2 + x4 * x5 + x8 * x9 - 0.33333333333333331
eq9_chemkin =  (x6**2) + (x10**2) - 0.88888888888888895
eq10_chemkin =  x3 * x4 + x7 * x8 + ((-2.8284271247461898) * x3 + 1) * x1 - 0.33333333333333331
cons_chemkin = [{'func':eq1_chemkin,'type': 'eq', 'prop': 'convex'},{'func':eq2_chemkin,'type': 'eq', 'prop': 'convex'},{'func':eq3_chemkin,'type': 'eq', 'prop': 'convex'},{'func':eq4_chemkin,'type': 'eq'},{'func':eq5_chemkin,'type': 'eq'},{'func':eq6_chemkin,'type': 'eq'},{'func':eq7_chemkin,'type': 'eq'},{'func':eq8_chemkin,'type': 'eq'},{'func':eq9_chemkin,'type': 'eq'},{'func':eq10_chemkin,'type': 'eq'}]
bnds_chemkin = [np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]),np.array([-100000000, 100000000]),np.array([-100000000, 100000000]),np.array([-100000000, 100000000]),np.array([-100000000, 100000000])]
vars_chemkin = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10]
chemkin = OptimizationProblem("chemkin", sol_chemkin, symobj_chemkin, cons_chemkin, vars_chemkin, bnds_chemkin)

symobj_dccircuit = 0
sol_dccircuit = np.array([10.8283, 10, 0.56909, -0.31183, 0.53206, 0.25726, 0.296239, 0.828299, 0.259209, 0.0389788])
eq1_dccircuit = x1 - x2 - x3 - x9
eq2_dccircuit = -x2 + 4 * x5 + 7 * x8 + 8 * x9
eq3_dccircuit = (-4) * x5 + 6 * x7 + 9 * x10
eq4_dccircuit = 3 * x4 + 5 * x6 - 9 * x10
eq5_dccircuit = 2 * x3 - 3 * x4 - 8 * x9
eq6_dccircuit = -x1 + x2 + x8
eq7_dccircuit = x6 - x7 + x10
eq8_dccircuit = x5 + x7 - x8
eq9_dccircuit = -x4 - x5 + x9 - x10
eq10_dccircuit = x3 + x4 - x6
cons_dccircuit = [{'func':eq1_dccircuit, 'type':'eq', 'prop':'convex'}, {'func':eq2_dccircuit, 'type':'eq', 'prop':'convex'}, {'func':eq3_dccircuit, 'type':'eq', 'prop':'convex'}, {'func':eq4_dccircuit, 'type':'eq', 'prop':'convex'}, {'func':eq5_dccircuit, 'type':'eq', 'prop':'convex'}, {'func':eq6_dccircuit, 'type':'eq', 'prop':'convex'}, {'func':eq7_dccircuit, 'type':'eq', 'prop':'convex'}, {'func':eq8_dccircuit, 'type':'eq', 'prop':'convex'}, {'func':eq9_dccircuit, 'type':'eq', 'prop':'convex'}, {'func':eq10_dccircuit, 'type':'eq', 'prop':'convex'}]
vars_dccircuit = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10]
bnds_dccircuit = [np.array([-100, 100]), np.array([10, 10]), np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100]), np.array([-100, 100])]
dccircuit = OptimizationProblem('dccircuit', sol_dccircuit, symobj_dccircuit, cons_dccircuit, vars_dccircuit, bnds_dccircuit)

symobj_ex9_1_2 =  -x9 - 3 * x10
sol_ex9_1_2 = np.array([2.9999999686,0.0000000000,0.0000000000,4.0000000105,0.0000000000,0.0000000000,1.0000000000,0.0000000000,3.9999999791,4.0000000105])
eq1_ex9_1_2 =  x5 + 2 * x6 - x7 - x8 + 1
eq2_ex9_1_2 =  x4 - x10 - 0
eq3_ex9_1_2 =  x3 + 4 * x9 - x10 - 12
eq4_ex9_1_2 =  x2 + x9 + 2 * x10 - 12
eq5_ex9_1_2 =  x1 - x9 + x10 - 3
eq6_ex9_1_2 =  x1 * x5 - 0
eq7_ex9_1_2 =  x2 * x6 - 0
eq8_ex9_1_2 =  x4 * x8 - 0
eq9_ex9_1_2 =  x3 * x7 - 0
cons_ex9_1_2 = [{'func':eq1_ex9_1_2,'type': 'eq', 'prop': 'convex'},{'func':eq2_ex9_1_2,'type': 'eq', 'prop': 'convex'},{'func':eq3_ex9_1_2,'type': 'eq', 'prop': 'convex'},{'func':eq4_ex9_1_2,'type': 'eq', 'prop': 'convex'},{'func':eq5_ex9_1_2,'type': 'eq', 'prop': 'convex'},{'func':eq6_ex9_1_2,'type': 'eq'},{'func':eq7_ex9_1_2,'type': 'eq'},{'func':eq8_ex9_1_2,'type': 'eq'},{'func':eq9_ex9_1_2,'type': 'eq'}]
bnds_ex9_1_2 = [np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000])]
vars_ex9_1_2 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10]
ex9_1_2 = OptimizationProblem("ex9_1_2", sol_ex9_1_2, symobj_ex9_1_2, cons_ex9_1_2, vars_ex9_1_2, bnds_ex9_1_2)

symobj_ex9_1_4 =  x9 - 4 * x10
sol_ex9_1_4 = np.array([24.0000000000,0.0000000000,0.0000000000,14.0000000000,0.0000000000,0.0000000000,0.3333333333,0.0000000000,19.0000000000,14.0000000000])
eq1_ex9_1_4 =  x5 + 5 * x6 - 3 * x7 - x8 + 1
eq2_ex9_1_4 =  x4 - x10 - 0
eq3_ex9_1_4 =  x3 + 2 * x9 - 3 * x10 + 4
eq4_ex9_1_4 =  x2 + 2 * x9 + 5 * x10 - 108
eq5_ex9_1_4 =  x1 - 2 * x9 + x10 - 0
eq6_ex9_1_4 =  x1 * x5 - 0
eq7_ex9_1_4 =  x2 * x6 - 0
eq8_ex9_1_4 =  x4 * x8 - 0
eq9_ex9_1_4 =  x3 * x7 - 0
cons_ex9_1_4 = [{'func':eq1_ex9_1_4,'type': 'eq', 'prop': 'convex'},{'func':eq2_ex9_1_4,'type': 'eq', 'prop': 'convex'},{'func':eq3_ex9_1_4,'type': 'eq', 'prop': 'convex'},{'func':eq4_ex9_1_4,'type': 'eq', 'prop': 'convex'},{'func':eq5_ex9_1_4,'type': 'eq', 'prop': 'convex'},{'func':eq6_ex9_1_4,'type': 'eq'},{'func':eq7_ex9_1_4,'type': 'eq'},{'func':eq8_ex9_1_4,'type': 'eq'},{'func':eq9_ex9_1_4,'type': 'eq'}]
bnds_ex9_1_4 = [np.array([0, 200]), np.array([0, 200]), np.array([0, 200]), np.array([0, 200]), np.array([0, 200]), np.array([0, 200]), np.array([0, 200]), np.array([0, 200]), np.array([0, 10000]), np.array([0, 10000])]
vars_ex9_1_4 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10]
ex9_1_4 = OptimizationProblem("ex9_1_4", sol_ex9_1_4, symobj_ex9_1_4, cons_ex9_1_4, vars_ex9_1_4, bnds_ex9_1_4)

symobj_ex9_2_1 =  (x9 - 5) * (x9 - 5) + (2 * x10 + 1) * (2 * x10 + 1)
sol_ex9_2_1 = np.array([0,3,6,2.66454e-15,3.5,4.05304e-16,0,4.838e-17,1,0])
eq1_ex9_2_1 =  x5 - 0.5 * x6 + x7 - x8 - 1.5 * x9 + 2 * x10 - 2
eq2_ex9_2_1 =  x4 - x10 - 0
eq3_ex9_2_1 =  x3 + x9 + x10 - 7
eq4_ex9_2_1 =  x2 + x9 - 0.5 * x10 - 4
eq5_ex9_2_1 =  x1 - 3 * x9 + x10 - -3
eq6_ex9_2_1 =  x4 * x8 - 0
eq7_ex9_2_1 =  x3 * x7 - 0
eq8_ex9_2_1 =  x2 * x6 - 0
eq9_ex9_2_1 =  x1 * x5 - 0
cons_ex9_2_1 = [{'func':eq1_ex9_2_1,'type': 'eq', 'prop': 'convex'},{'func':eq2_ex9_2_1,'type': 'eq', 'prop': 'convex'},{'func':eq3_ex9_2_1,'type': 'eq', 'prop': 'convex'},{'func':eq4_ex9_2_1,'type': 'eq', 'prop': 'convex'},{'func':eq5_ex9_2_1,'type': 'eq', 'prop': 'convex'},{'func':eq6_ex9_2_1,'type': 'eq'},{'func':eq7_ex9_2_1,'type': 'eq'},{'func':eq8_ex9_2_1,'type': 'eq'},{'func':eq9_ex9_2_1,'type': 'eq'}]
bnds_ex9_2_1 = [np.array([0, 20]), np.array([0, 20]), np.array([0, 20]), np.array([0, 20]), np.array([0, 20]), np.array([0, 20]), np.array([0, 20]), np.array([0, 20]), np.array([0, 10000]), np.array([0, 10000])]
vars_ex9_2_1 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10]
ex9_2_1 = OptimizationProblem("ex9_2_1", sol_ex9_2_1, symobj_ex9_2_1, cons_ex9_2_1, vars_ex9_2_1, bnds_ex9_2_1)

symobj_ex9_2_7 =  (x9 - 5) * (x9 - 5) + (2 * x10 + 1) * (2 * x10 + 1)
sol_ex9_2_7 = np.array([0,3,6,2.66454e-15,3.5,4.05304e-16,0,4.838e-17,1,0])
eq1_ex9_2_7 =  x5 - 0.5 * x6 + x7 - x8 - 1.5 * x9 + 2 * x10 - 2
eq2_ex9_2_7 =  x4 - x10 - 0
eq3_ex9_2_7 =  x3 + x9 + x10 - 7
eq4_ex9_2_7 =  x2 + x9 - 0.5 * x10 - 4
eq5_ex9_2_7 =  x1 - 3 * x9 + x10 + 3
eq6_ex9_2_7 =  x4 * x8 - 0
eq7_ex9_2_7 =  x3 * x7 - 0
eq8_ex9_2_7 =  x2 * x6 - 0
eq9_ex9_2_7 =  x1 * x5 - 0
cons_ex9_2_7 = [{'func':eq1_ex9_2_7,'type': 'eq', 'prop': 'convex'},{'func':eq2_ex9_2_7,'type': 'eq', 'prop': 'convex'},{'func':eq3_ex9_2_7,'type': 'eq', 'prop': 'convex'},{'func':eq4_ex9_2_7,'type': 'eq', 'prop': 'convex'},{'func':eq5_ex9_2_7,'type': 'eq', 'prop': 'convex'},{'func':eq6_ex9_2_7,'type': 'eq'},{'func':eq7_ex9_2_7,'type': 'eq'},{'func':eq8_ex9_2_7,'type': 'eq'},{'func':eq9_ex9_2_7,'type': 'eq'}]
bnds_ex9_2_7 = [np.array([0, 20]), np.array([0, 20]),np.array([0, 20]),np.array([0, 20]),np.array([0, 20]),np.array([0, 20]),np.array([0, 20]),np.array([0, 20]),np.array([0, 10000]),np.array([0, 10000])]
vars_ex9_2_7 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10]
ex9_2_7 = OptimizationProblem("ex9_2_7", sol_ex9_2_7, symobj_ex9_2_7, cons_ex9_2_7, vars_ex9_2_7, bnds_ex9_2_7)

symobj_genhs28 =  (x1 + x2)**2 +(x2 + x3)**2 +(x3 + x4)**2 +(x4 + x5)**2 +(x5 + x6)**2 +(x6 + x7)**2 +(x7 + x8)**2 +(x8 + x9)**2 + (x9 + x10)**2
sol_genhs28 = np.array([0.164213,-0.0520467,0.313294,0.14182,0.134356,0.19649,0.157555,0.1628,0.172282,0.164212])
eq1_genhs28 =  x8 + 2 * x9 + 3 * x10 - 1
eq2_genhs28 =  x7 + 2 * x8 + 3 * x9 - 1
eq3_genhs28 =  x6 + 2 * x7 + 3 * x8 - 1
eq4_genhs28 =  x5 + 2 * x6 + 3 * x7 - 1
eq5_genhs28 =  x4 + 2 * x5 + 3 * x6 - 1
eq6_genhs28 =  x3 + 2 * x4 + 3 * x5 - 1
eq7_genhs28 =  x2 + 2 * x3 + 3 * x4 - 1
eq8_genhs28 =  x1 + 2 * x2 + 3 * x3 - 1
cons_genhs28 = [{'func':eq1_genhs28,'type': 'eq', 'prop': 'convex'},{'func':eq2_genhs28,'type': 'eq', 'prop': 'convex'},{'func':eq3_genhs28,'type': 'eq', 'prop': 'convex'},{'func':eq4_genhs28,'type': 'eq', 'prop': 'convex'},{'func':eq5_genhs28,'type': 'eq', 'prop': 'convex'},{'func':eq6_genhs28,'type': 'eq', 'prop': 'convex'},{'func':eq7_genhs28,'type': 'eq', 'prop': 'convex'},{'func':eq8_genhs28,'type': 'eq', 'prop': 'convex'}]
bnds_genhs28 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]),np.array([-10000, 10000])]
vars_genhs28 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10]
genhs28 = OptimizationProblem("genhs28", sol_genhs28, symobj_genhs28, cons_genhs28, vars_genhs28, bnds_genhs28)

symobj_ku =  0
sol_ku = np.array([2.0000000000,-5.0000000000,-1.0000000000,5.0000000000,-4.0000000000,-3.0000000000,3.0000000000,-2.0000000000,4.0000000000,1.0000000000])
eq1_ku =  3 * x2 + 5 * (x2 + 1) * x1 + 55
eq2_ku =  x10 + (3 * x10 - 6) * x1 - -5
eq3_ku =  9 * x3 + (7 * x3 + 9) * x2 + 19
eq4_ku =  3 * x10 + (8 * x10 + 4) * x9 - 51
eq5_ku =  6 * x9 + 4 * (x9 + 1) * x8 - -16
eq6_ku =  5 * x4 + (3 * x4 + 6) * x3 - 4
eq7_ku =  x8 + (9 * x8 + 7) * x7 + 35
eq8_ku =  x7 + (6 * x7 + 7) * x6 + 72
eq9_ku =  7 * x5 + 6 * (x5 + 1) * x4 + 118
eq10_ku =  9 * x6 + (x6 + 3) * x5 + 27
cons_ku = [{'func':eq1_ku,'type': 'eq'},{'func':eq2_ku,'type': 'eq'},{'func':eq3_ku,'type': 'eq'},{'func':eq4_ku,'type': 'eq'},{'func':eq5_ku,'type': 'eq'},{'func':eq6_ku,'type': 'eq'},{'func':eq7_ku,'type': 'eq'},{'func':eq8_ku,'type': 'eq'},{'func':eq9_ku,'type': 'eq'},{'func':eq10_ku,'type': 'eq'}]
bnds_ku = [np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000]), np.array([-100000000, 100000000])]
vars_ku = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10]
ku = OptimizationProblem("ku", sol_ku, symobj_ku, cons_ku, vars_ku, bnds_ku)

symobj_ku10 =  0
sol_ku10 = np.array([2.0000000000,1.0000000000,-5.0000000000,-1.0000000000,5.0000000000,-4.0000000000,-3.0000000000,3.0000000000,-2.0000000000,4.0000000000])
eq1_ku10 =  5 * x1 + 3 * x3 + 5 * x1 * x3 + 55
eq2_ku10 =  (-6) * x1 + x2 + 3 * x1 * x2 + 5
eq3_ku10 =  9 * x3 + 9 * x4 + 7 * x3 * x4 + 19
eq4_ku10 =  3 * x2 + 4 * x10 + 8 * x2 * x10 - 51
eq5_ku10 =  6 * x4 + 5 * x5 + 3 * x4 * x5 - 4
eq6_ku10 =  4 * x9 + 6 * x10 + 4 * x9 * x10 + 16
eq7_ku10 =  7 * x8 + x9 + 9 * x8 * x9 + 35
eq8_ku10 =  6 * x5 + 7 * x6 + 6 * x5 * x6 + 118
eq9_ku10 =  7 * x7 + x8 + 6 * x7 * x8 + 72
eq10_ku10 =  3 * x6 + 9 * x7 + x6 * x7 + 27
cons_ku10 = [{'func':eq1_ku10,'type': 'eq'},{'func':eq2_ku10,'type': 'eq'},{'func':eq3_ku10,'type': 'eq'},{'func':eq4_ku10,'type': 'eq'},{'func':eq5_ku10,'type': 'eq'},{'func':eq6_ku10,'type': 'eq'},{'func':eq7_ku10,'type': 'eq'},{'func':eq8_ku10,'type': 'eq'},{'func':eq9_ku10,'type': 'eq'},{'func':eq10_ku10,'type': 'eq'}]
bnds_ku10 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_ku10 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10]
ku10 = OptimizationProblem("ku10", sol_ku10, symobj_ku10, cons_ku10, vars_ku10, bnds_ku10)

symobj_ex9_2_2 =  (x9**2) + (x10 - 10) * (x10 - 10)
sol_ex9_2_2 = np.array([4.96494e-05,9.99998,10,0.202093,0.000148948,0,2.7117e-23,5.11611e-21,9.99998,9.99998])
eq1_ex9_2_2 =  x5 - x6 + x7 + 2 * x9 + 4 * x10 - 60
eq2_ex9_2_2 =  x3 + x10 - 20
eq3_ex9_2_2 =  x2 - x10 - 0
eq4_ex9_2_2 =  x1 + x9 + x10 - 20
eq5_ex9_2_2 =  x4 * x8 - 0
eq6_ex9_2_2 =  x1 * x5 - 0
eq7_ex9_2_2 =  x3 * x7 - 0
eq8_ex9_2_2 =  x2 * x6 - 0
ineq1_ex9_2_2 = -x9 + x10 - 0
cons_ex9_2_2 = [{'func':eq1_ex9_2_2,'type': 'eq', 'prop': 'convex'},{'func':eq2_ex9_2_2,'type': 'eq', 'prop': 'convex'},{'func':eq3_ex9_2_2,'type': 'eq', 'prop': 'convex'},{'func':eq4_ex9_2_2,'type': 'eq', 'prop': 'convex'},{'func':eq5_ex9_2_2,'type': 'eq'},{'func':eq6_ex9_2_2,'type': 'eq'},{'func':eq7_ex9_2_2,'type': 'eq'},{'func':eq8_ex9_2_2,'type': 'eq'},{'func':ineq1_ex9_2_2,'type': 'ineq'}]
bnds_ex9_2_2 = [np.array([0, 20]), np.array([0, 20]), np.array([0, 20]), np.array([0, 20]), np.array([0, 20]), np.array([0, 20]), np.array([0, 20]), np.array([0, 20]), np.array([0, 15]), np.array([0, 10000])]
vars_ex9_2_2 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10]
ex9_2_2 = OptimizationProblem("ex9_2_2", sol_ex9_2_2, symobj_ex9_2_2, cons_ex9_2_2, vars_ex9_2_2, bnds_ex9_2_2)

symobj_ex2_1_6 =  48 * x1 +42 * x2 +48 * x3 +45 * x4 +44 * x5 +41 * x6 +47 * x7 +42 * x8 +45 * x9 +46 * x10 -50 * x1**2 -50 * x2**2 -50 * x3**2 -50 * x4**2 -50 * x5**2 -50 * x6**2 -50 * x7**2 -50 * x8**2 -50 * x9**2 -50 * x10**2
sol_ex2_1_6 = np.array([1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0])
ineq1_ex2_1_6 = (-8) * x1 +7 * x2 -4 * x3 -5 * x4 -9 * x5 +x6 -7 * x7 -x8 +3 * x9 -2 * x10 - -12
ineq2_ex2_1_6 = 9 * x1 +5 * x2 -9 * x4 +x5 -8 * x6 +3 * x7 -9 * x8 -9 * x9 -3 * x10 - -23
ineq3_ex2_1_6 = (-5) * x1 +6 * x2 +5 * x3 +3 * x4 +8 * x5 -8 * x6 +9 * x7 +2 * x8 -9 * x10 - -6
ineq4_ex2_1_6 = 6 * x1 -5 * x2 +8 * x3 -3 * x4 +x6 +3 * x7 +8 * x8 +9 * x9 -3 * x10 - 22
ineq5_ex2_1_6 = (-2) * x1 -6 * x2 -x3 -3 * x5 -3 * x6 -2 * x7 -6 * x8 -2 * x9 -2 * x10 - -4
cons_ex2_1_6 = [{'func':ineq1_ex2_1_6,'type': 'ineq', 'prop': 'convex'},{'func':ineq2_ex2_1_6,'type': 'ineq', 'prop': 'convex'},{'func':ineq3_ex2_1_6,'type': 'ineq', 'prop': 'convex'},{'func':ineq4_ex2_1_6,'type': 'ineq', 'prop': 'convex'},{'func':ineq5_ex2_1_6,'type': 'ineq', 'prop': 'convex'}]
bnds_ex2_1_6 = [np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1])]
vars_ex2_1_6 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10]
ex2_1_6 = OptimizationProblem("ex2_1_6", sol_ex2_1_6, symobj_ex2_1_6, cons_ex2_1_6, vars_ex2_1_6, bnds_ex2_1_6)

symobj_hs113 =  (-14) * x1 - 16 * x2 + (x1**2) + (x2**2) + ((x3) - 10)**2 + ((x4) - 3)**2 + 5 * (x8**2) + ((x10) - 7)**2 + 2 * ((x5) - 10)**2 + 4 * ((x6) - 5)**2 + 2 * ((x7) - 1)**2 + 7 * ((x9) - 11)**2 + x1 * x2 + 45
sol_hs113 = np.array([2.1719963714,2.3636829746,8.7739257399,0.9906547648,8.2800916622,5.0959844875,1.4305739767,1.3216442077,9.8287258072,8.3759266446])
ineq1_hs113 = -(8 * x1 - 2 * x2 - 5 * x5 + 2 * x10) - 12
ineq2_hs113 = -((-10) * x1 + 8 * x2 + 17 * x8 - 2 * x9)
ineq3_hs113 = -((-4) * x1 - 5 * x2 + 3 * x8 - 9 * x9) - 105
ineq4_hs113 = -(3 * x1 - 6 * x2 + 7 * x10 - 12 * ((x5) - 8)**2)
ineq5_hs113 = -((-14) * x4 + 6 * x7 - (x1**2) - 2 * ((x2) - 2)**2 + 2 * x1 * x2)
ineq6_hs113 = -(x7 - 3 * (x4**2) - 0.5 * ((x1) - 8)**2 - 2 * ((x2) - 4)**2) - 30
ineq7_hs113 = -((-8) * x2 + 2 * x6 - 5 * (x1**2) - ((x3) - 6)**2) - 40
ineq8_hs113 = -(7 * x6 - 2 * (x3**2) - 3 * ((x1) - 2)**2 - 4 * ((x2) - 3)**2) - 120
cons_hs113 = [{'func':ineq1_hs113,'type': 'ineq', 'prop': 'convex'},{'func':ineq2_hs113,'type': 'ineq', 'prop': 'convex'},{'func':ineq3_hs113,'type': 'ineq', 'prop': 'convex'},{'func':ineq4_hs113,'type': 'ineq', 'prop': 'convex'},{'func':ineq5_hs113,'type': 'ineq'},{'func':ineq6_hs113,'type': 'ineq'},{'func':ineq7_hs113,'type': 'ineq'},{'func':ineq8_hs113,'type': 'ineq'}]
bnds_hs113 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_hs113 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10]
hs113 = OptimizationProblem("hs113", sol_hs113, symobj_hs113, cons_hs113, vars_hs113, bnds_hs113)

symobj_h113 =  0
sol_h113 = np.array([2.0780290882, 2.5816275637, 8.7805332193, 4.9877049754, 1.0098060239, 1.4004460212, 1.1476525511, 9.6914114980, 7.8573384814, 7.9128574143])
ineq1_h113 = -8 * x1 +2 * x2 +5 * x9 -2 * x10 -12
ineq2_h113 = (+10) * x1 -8 * x2 -17 * x7 +2 * x8
ineq3_h113 = (+4) * x1 +5 * x2 -3 * x7 +9 * x8 -105
ineq4_h113 = (-14) * x1 -16 * x2 + x1**2 + x2**2 + (x3-10)**2 + (x5-3)**2 +5 * x7**2 + (x10-7)**2 +4 * (x4-5)**2 +2 * (x6-1)**2 +7 * (x8-11)**2 +2 * (x9-10)**2 +x1 * x2 + 19.693790929999999
ineq5_h113 = -3 * x1 +6 * x2 -7 * x10 +12 * (x9-8)**2
ineq6_h113 = (+14) * x5 -6 * x6 + x1**2 +2 * (x2-2)**2 -2 * x1 * x2
ineq7_h113 = -x6 +3 * x5**2 +0.5 * (x1-8)**2 +2 * (x2-4)**2 -30
ineq8_h113 = (+8) * x2 -2 * x4 +5 * x1**2 + (x3-6)**2 -40
ineq9_h113 = -7 * x4 +2 * x3**2 +3 * (x1-2)**2 +4 * (x2-3)**2 -120
cons_h113 = [{'func':ineq1_h113,'type': 'ineq', 'prop': 'convex'},{'func':ineq2_h113,'type': 'ineq', 'prop': 'convex'},{'func':ineq3_h113,'type': 'ineq', 'prop': 'convex'},{'func':ineq4_h113,'type': 'ineq', 'prop': 'unknown'},{'func':ineq5_h113,'type': 'ineq', 'prop': 'unknown'},{'func':ineq6_h113,'type': 'ineq', 'prop': 'unknown'},{'func':ineq7_h113,'type': 'ineq', 'prop': 'unknown'},{'func':ineq8_h113,'type': 'ineq', 'prop': 'unknown'},{'func':ineq9_h113,'type': 'ineq', 'prop': 'unknown'}]
bnds_h113 = [np.array([0, 10]),np.array([0, 10]),np.array([0, 10]),np.array([0, 10]),np.array([0, 10]),np.array([0, 10]),np.array([0, 10]),np.array([0, 10]),np.array([0, 10]),np.array([0, 10])]
vars_h113 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10]
h113 = OptimizationProblem("h113", sol_h113, symobj_h113, cons_h113, vars_h113, bnds_h113)

################################################################################
# Larger Problems (n > 10), not included in TestProblem.py
################################################################################

symobj_portfl1 =  (0.01485068 * x1 +0.064728949999999993 * x2 +0.0021268699999999999 * x4 +0.01658024 * x5 +0.049802829999999999 * x6 +0.057492219999999997 * x7 +0.020563970000000001 * x8 +0.026373480000000001 * x9 +0.058622399999999998 * x10 +0.01305068 * x11 +0.02148485 * x12 -0.024559379999999999)**2 + (0.027144350000000001 * x2 -0.016989500000000001 * x3 -0.015651399999999999 * x4 +0.0023685099999999999 * x5 -0.025704000000000001 * x6 -0.0183082 * x7 +0.00039866000000000001 * x8 -0.0066337000000000002 * x9 -0.028555400000000002 * x10 -0.0216779 * x11 +0.00045682999999999997 * x12 +0.017825299999999999)**2 + (0.0060863899999999997 * x1 -0.030979199999999998 * x2 -0.0125235 * x3 +0.026187019999999998 * x4 +0.033165010000000002 * x5 +0.040649940000000002 * x6 -0.0047691000000000001 * x7 +0.041853509999999997 * x8 -0.0021638999999999999 * x9 +0.096193810000000005 * x10 +0.015477110000000001 * x11 -0.0317326 * x12 -0.02870323)**2 + (0.02048871 * x1 -0.0099322000000000004 * x2 -0.0012011999999999999 * x3 -0.0050875 * x4 -0.015112199999999999 * x5 -0.066835099999999995 * x6 +0.01449517 * x7 -0.014977000000000001 * x8 -0.0108723 * x9 -0.0438425 * x10 +0.01895492 * x11 -0.021780399999999998 * x12 -0.019001219999999999)**2 + ((-0.017431599999999998) * x1 -0.064816899999999997 * x2 -0.025862400000000001 * x3 -0.019920500000000001 * x4 -0.019749699999999999 * x5 -0.038789299999999999 * x6 +0.01805729 * x7 -0.0260699 * x8 -0.039673600000000003 * x9 -0.036252600000000003 * x10 -0.0623984 * x11 -0.040078500000000003 * x12 +0.0164809)**2 + ((-0.0137687) * x1 -0.029230300000000001 * x2 -0.031085399999999999 * x3 -0.015649699999999999 * x4 -0.0077774000000000003 * x5 -0.0290312 * x6 -0.027751600000000001 * x7 -0.0138505 * x8 -0.0098904000000000006 * x9 -0.020560599999999998 * x10 -0.049649199999999998 * x11 +0.020238800000000001 * x12 +0.031690099999999999)**2  + ((-0.015834000000000001) * x1 +0.029029490000000002 * x2 -0.030522000000000001 * x3 -0.019634800000000001 * x4 -0.0068716999999999997 * x5 -0.017998799999999999 * x6 -0.019224100000000001 * x7 -0.017110799999999999 * x8 -0.0051139999999999996 * x9 -0.024380700000000002 * x10 +0.00134202 * x11 +0.01612974 * x12 -0.0061281299999999999)**2 +(0.016597750000000001 * x1 +0.026802110000000001 * x2 +0.024294710000000001 * x3 +0.023153429999999999 * x4 +0.0161998 * x5 +0.0055495199999999996 * x6 +0.027641889999999999 * x7 +0.013815920000000001 * x8 +0.038343750000000003 * x9 +0.010915909999999999 * x10 +0.02193175 * x11 +0.082783159999999995 * x12 -0.0069696100000000002)**2 +(0.01107383 * x1 +0.02188145 * x2 +0.0042064800000000003 * x3 -0.0044365999999999997 * x4 +0.0086688100000000008 * x5 -0.083257200000000003 * x6 +0.0048110799999999997 * x7 +0.01020926 * x8 -0.014421 * x9 +0.00099840999999999992 * x10 -0.035645400000000001 * x11 -0.0263263 * x12 -0.012150319999999999)**2 +((-0.0043531999999999998) * x1 -0.017691599999999998 * x2 -0.0112316 * x3 +0.00308721 * x4 -0.0102431 * x5 -0.018826499999999999 * x6 -0.016631300000000002 * x7 -0.0103614 * x8 -0.011717099999999999 * x9 -0.0012432999999999999 * x10 -0.040009999999999997 * x11 -0.038737500000000001 * x12 -0.0043501900000000003)**2 +(0.0084767100000000001 * x1 -0.0196384 * x2 +0.0073444000000000001 * x3 -0.0060155 * x4 +0.01153823 * x5 -0.018580300000000001 * x6 -0.0079725999999999998 * x7 +0.0088904299999999995 * x8 -0.0229678 * x9 -0.00074069999999999995 * x10 -0.0062248 * x11 -0.0066382000000000004 * x12 -0.030821919999999999)**2 +(0.0083357599999999994 * x1 -0.0051548999999999996 * x2 +0.01560227 * x3 +0.028537739999999999 * x4 +0.011073110000000001 * x5 +0.027903299999999999 * x6 -0.0362028 * x7 +0.01081704 * x8 +0.0044096600000000001 * x9 +0.029115060000000002 * x10 +0.018714499999999998 * x11 -0.0019992 * x12 -0.019979509999999999)**2 +(0.0090700799999999995 * x1 +0.01001894 * x2 +0.012625279999999999 * x3 +0.01389078 * x4 +0.0049045099999999999 * x5 -0.0082345999999999999 * x6 +0.0055657600000000003 * x7 +0.0052654700000000004 * x8 -0.0035146000000000001 * x9 +0.0057945100000000001 * x10 -0.0014775999999999999 * x11 +0.020367610000000001 * x12 +0.012987)**2 +(0.028021440000000002 * x1 +0.06839808 * x2 +0.030099850000000001 * x3 +0.027652590000000001 * x4 +0.01934344 * x5 +0.020265450000000001 * x6 +0.025753419999999999 * x7 +0.01944241 * x8 +0.03257355 * x9 +0.029362470000000002 * x10 +0.0142632 * x11 +0.049613320000000002 * x12 -0.027507549999999999)**2 +((-0.00023699999999999999) * x1 +0.11464542 * x2 +0.0011320200000000001 * x3 +0.00825095 * x4 -0.00018239999999999999 * x5 +0.024129250000000001 * x6 +0.047115379999999998 * x7 -0.00017990000000000001 * x8 +0.11882582999999999 * x9 +0.027287530000000001 * x10 +0.029135270000000001 * x11 +0.10977209 * x12 -0.025791709999999999)**2 +(0.016358459999999998 * x1 +0.023911080000000001 * x2 +0.020141340000000001 * x3 +0.023002060000000001 * x4 +0.013687380000000001 * x5 +0.026702179999999999 * x6 +0.042138559999999999 * x7 +0.01340651 * x8 +0.020009800000000001 * x9 +0.018955240000000002 * x10 +0.00045297000000000002 * x11 +0.043999320000000001 * x12 -0.021960529999999999)**2 +(0.011196640000000001 * x1 +0.017309160000000001 * x2 +0.0060962899999999999 * x3 -0.0109541 * x4 -0.0011701999999999999 * x5 +0.0068511400000000004 * x6 +0.0015664800000000001 * x7 -0.0015981000000000001 * x8 +0.0099458099999999994 * x9 +0.024264290000000001 * x10 -0.0110172 * x11 -0.0011856 * x12 -0.0037371499999999998)**2 +((-0.0063052000000000004) * x1 +0.039854649999999998 * x2 +0.00041313999999999999 * x3 +0.0075050999999999998 * x4 +0.0063987000000000002 * x5 +0.00436018 * x6 +0.047018570000000003 * x7 +0.0084481999999999995 * x8 +0.047881010000000002 * x9 -0.0079571999999999993 * x10 +0.0061040699999999996 * x11 +0.047590779999999999 * x12 -0.029165369999999999)**2 +(0.0016250100000000001 * x1 -0.0284541 * x2 -0.0022713 * x3 -0.0013018000000000001 * x4 -0.0012535999999999999 * x5 -0.00032880000000000002 * x6 -0.0128839 * x7 -0.00035270000000000001 * x8 -0.023203000000000001 * x9 -0.00079589999999999999 * x10 +0.02745336 * x11 -0.0030387999999999999 * x12 -0.0024118199999999998)**2 +(0.015064889999999999 * x1 +0.03014387 * x2 +0.016280349999999999 * x3 +0.020421459999999999 * x4 +0.01631848 * x5 +0.01644953 * x6 +0.02269933 * x7 +0.01270289 * x8 +0.02328976 * x9 +0.03278387 * x10 +0.01660762 * x11 +0.027691670000000002 * x12 +0.0069172000000000001)**2 +(0.012481920000000001 * x1 -0.0043781000000000002 * x2 +0.01568015 * x3 +0.010361220000000001 * x4 +0.0085575700000000005 * x5 +0.018319519999999999 * x6 +0.0026819600000000002 * x7 +0.0074912900000000003 * x8 -0.0285306 * x9 -0.0042126000000000004 * x10 +0.019748780000000001 * x11 -0.0027146000000000002 * x12 -0.00090854)**2 +(0.0081936400000000003 * x1 +0.043529079999999998 * x2 +0.0091559199999999997 * x3 +0.00786683 * x4 +0.00629811 * x5 +0.017163560000000001 * x6 +0.02979155 * x7 +0.0071762099999999997 * x8 +0.01515152 * x9 +0.016087710000000002 * x10 +0.0011391999999999999 * x11 +0.022078839999999999 * x12 -0.010892590000000001)**2 +(0.0046972899999999998 * x1 -0.031311600000000002 * x2 -0.00066220000000000005 * x3 -0.0013240999999999999 * x4 +0.0075625900000000001 * x5 -0.0061246 * x6 -0.015136500000000001 * x7 +0.0042922100000000003 * x8 -0.018738899999999999 * x9 -0.0134287 * x10 -0.0152905 * x11 -0.0142039 * x12 +0.0062855000000000003)**2 +(0.0141744 * x1 -0.060462500000000002 * x2 +0.017229950000000001 * x3 +0.022679689999999999 * x4 +0.017082219999999999 * x5 +0.010249640000000001 * x6 +0.00081848000000000001 * x7 +0.019317890000000001 * x8 -0.0351782 * x9 +0.012244410000000001 * x10 +0.00137224 * x11 -0.063788200000000003 * x12 +0.015361400000000001)**2 +(0.021147369999999999 * x1 +0.037275820000000001 * x2 +0.017003259999999999 * x3 +0.01487547 * x4 +0.018915939999999999 * x5 +0.026266649999999999 * x6 +0.060699679999999999 * x7 +0.0208805 * x8 +0.043822489999999999 * x9 +0.027715799999999999 * x10 +0.040461589999999999 * x11 +0.015817879999999999 * x12 +0.010094799999999999)**2 +(0.0056610499999999999 * x1 +0.01361736 * x2 +0.0063416799999999997 * x3 +0.0053116400000000003 * x4 +0.0052447600000000002 * x5 +0.0095827299999999994 * x6 -0.0102801 * x7 +0.0122392 * x8 +0.01976048 * x9 +0.011541539999999999 * x10 +0.01122972 * x11 +0.027618500000000001 * x12 -0.041718169999999999)**2 +((-0.0045602999999999998) * x1 -0.013824599999999999 * x2 -0.0091024000000000001 * x3 -0.0015382 * x4 -0.0021532000000000001 * x5 -0.001622 * x6 -0.0141954 * x7 -0.0060860999999999997 * x8 +6.5199999999999999e-05 * x9 -5.6499999999999998e-05 * x10 -0.030093200000000001 * x11 +0.039162490000000001 * x12 -0.0097893800000000003)**2 +(0.01052255 * x1 +0.0056525899999999999 * x2 +0.0141967 * x3 +0.012325010000000001 * x4 +0.0043157100000000004 * x5 +0.015945600000000001 * x6 -0.0088681999999999997 * x7 +0.012328540000000001 * x8 +0.0097860099999999995 * x9 +0.017398179999999999 * x10 +0.071100430000000006 * x11 +0.015961380000000001 * x12 -0.0023501799999999999)**2 +(0.0070128200000000003 * x1 -0.0043280000000000002 * x2 +0.018051680000000001 * x3 +0.021637 * x4 +0.0098338999999999996 * x5 +0.0052712599999999998 * x6 +0.02879164 * x7 +0.0070166899999999999 * x8 -0.0084635999999999999 * x9 +0.01421354 * x10 +0.024018479999999998 * x11 -0.0065459999999999997 * x12 +0.0058615999999999998)**2 +(0.0049943699999999997 * x1 -0.024613300000000001 * x2 -0.0075903000000000003 * x3 -0.0068652000000000001 * x4 +0.0019639900000000001 * x5 -0.016673500000000001 * x6 -0.021699800000000002 * x7 +0.0044850200000000002 * x8 -0.037401400000000001 * x9 -0.024196599999999999 * x10 -0.016109200000000001 * x11 -0.038412700000000001 * x12 +0.0076649999999999999)**2 +(0.0052495299999999996 * x1 -0.051332599999999999 * x2 -0.0010204000000000001 * x3 -0.0011925 * x4 +0.014177459999999999 * x5 +0.0083020699999999999 * x6 -0.0087868000000000009 * x7 +0.01235355 * x8 -0.041499099999999997 * x9 -0.0282975 * x10 -0.026576499999999999 * x11 -0.12110600000000001 * x12 +0.015124)**2 +(0.027642389999999999 * x1 -0.057852199999999999 * x2 +0.0119382 * x3 +0.036083839999999999 * x4 +0.027717519999999999 * x5 -0.1286899 * x6 +0.049118050000000003 * x7 +0.037159499999999998 * x8 +0.02509598 * x9 -0.083264000000000005 * x10 -0.060587299999999997 * x11 +0.018761179999999999 * x12 -0.017199019999999999)**2 +(0.032861300000000003 * x1 +0.11776573 * x2 +0.047063279999999999 * x3 +0.03060179 * x4 +0.01993433 * x5 +0.068528629999999993 * x6 +0.066390759999999993 * x7 +0.022468499999999999 * x8 +0.067272349999999995 * x9 +0.03474878 * x10 +0.0085651500000000005 * x11 +0.065503169999999999 * x12 +0.0147946)**2 +(0.01121753 * x1 -0.029441599999999998 * x2 -0.0065674000000000001 * x3 -0.00012420000000000001 * x4 +0.0077412399999999999 * x5 -0.0098919000000000003 * x6 +0.03177555 * x7 +0.00853749 * x8 +0.033855349999999999 * x9 -0.0091473000000000006 * x10 -0.0087101000000000001 * x11 +0.01441183 * x12 -0.044744100000000002)**2 +(0.019980540000000001 * x1 +0.048465830000000001 * x2 +0.0053372100000000002 * x3 +0.012611829999999999 * x4 +0.01201704 * x5 -0.032684900000000003 * x6 +0.020061120000000002 * x7 +0.021641520000000001 * x8 +0.031803900000000003 * x9 +0.029212769999999999 * x10 +0.036757709999999999 * x11 +0.041887290000000001 * x12 +0.0052801000000000002)**2 +(0.01507346 * x1 +0.0021061999999999999 * x2 +0.0316723 * x3 +0.018221979999999999 * x4 +0.015256280000000001 * x5 +0.016826270000000001 * x6 +0.0097564699999999997 * x7 +0.014338210000000001 * x8 +0.018031189999999999 * x9 +0.033298519999999998 * x10 -0.0057913000000000001 * x11 +0.0032202899999999998 * x12 -0.027130640000000001)**2 +(0.0054511300000000002 * x1 +0.071128319999999995 * x2 -0.0015788 * x3 +0.0208484 * x4 +0.027019020000000001 * x5 -0.027579699999999999 * x6 +0.10423006999999999 * x7 +0.033953690000000002 * x8 +0.04092867 * x9 +0.00214044 * x10 +0.00028415 * x11 +0.083960279999999998 * x12 -0.017800750000000001)**2 +(0.01265034 * x1 -0.026179899999999999 * x2 +0.042345090000000002 * x3 +0.02921733 * x4 +0.0064148800000000004 * x5 -0.026079100000000001 * x6 -0.010196999999999999 * x7 +0.00054960000000000002 * x8 -0.0186249 * x9 +0.026994959999999998 * x10 +0.045522340000000001 * x11 +0.0056450099999999998 * x12 -0.028490830000000002)**2 +(0.00086154000000000005 * x1 -0.021740200000000001 * x2 +0.02123953 * x3 +0.01559901 * x4 -0.0007161 * x5 +0.080261379999999993 * x6 +0.015174719999999999 * x7 +0.0020598700000000001 * x8 -0.0076147999999999997 * x9 -0.021606 * x10 +0.011683199999999999 * x11 +0.0035888500000000002 * x12 +0.0093252000000000005)**2 +(0.01629365 * x1 +0.01046127 * x2 +0.02167813 * x3 +0.00265402 * x4 +0.00121838 * x5 +0.045696630000000002 * x6 +0.040661000000000003 * x7 +0.00356311 * x8 -0.0016527 * x9 -0.031235200000000001 * x10 -0.0024169999999999999 * x11 -0.041765999999999998 * x12 -0.012458469999999999)**2 +(0.026740880000000002 * x1 +0.082180020000000006 * x2 +0.029296139999999998 * x3 +0.03300293 * x4 +0.01281317 * x5 +0.063443159999999998 * x6 +0.092047180000000006 * x7 +0.022395189999999999 * x8 +0.093177250000000003 * x9 +0.071128179999999999 * x10 +0.062188720000000003 * x11 +0.073824219999999996 * x12 -0.019141370000000001)**2 +((-0.0028283000000000002) * x1 +0.064042829999999995 * x2 -0.0015172 * x3 +0.01390252 * x4 +0.035691569999999999 * x5 +0.029799559999999999 * x6 +0.075358999999999995 * x7 +0.027581140000000001 * x8 +0.049702540000000003 * x9 -0.041709299999999998 * x10 +0.064440499999999998 * x11 +0.10782392 * x12 -0.046954660000000002)**2 +((-0.0120404) * x1 -0.030960000000000001 * x2 +0.038896260000000002 * x3 +0.02305596 * x4 +0.02476882 * x5 +0.010096549999999999 * x6 -0.0071032999999999999 * x7 +0.025450690000000002 * x8 -0.0077451000000000004 * x9 +0.0099669600000000004 * x10 -0.0056861000000000004 * x11 -0.055244000000000001 * x12 +0.0079720999999999993)**2 +(0.0242554 * x1 +0.068909059999999994 * x2 +0.020533249999999999 * x3 +0.0067609100000000002 * x4 +0.01933613 * x5 +0.015840070000000001 * x6 +0.02237111 * x7 +0.019465900000000001 * x8 +0.033824220000000002 * x9 +0.043496920000000001 * x10 +0.035726920000000002 * x11 +0.085996920000000004 * x12 -0.030889)**2 +(0.027130020000000001 * x1 +0.024704670000000001 * x2 +0.012577670000000001 * x3 +0.024953980000000001 * x4 -0.0032742000000000001 * x5 +0.044598100000000002 * x6 -0.015054400000000001 * x7 +0.0041192099999999999 * x8 -0.00030529999999999999 * x9 +0.0041928699999999996 * x10 +0.02731691 * x11 +0.039274919999999998 * x12 +0.0016734)**2 +(0.00382081 * x1 +0.010704969999999999 * x2 +0.0084129300000000008 * x3 -0.0082317999999999992 * x4 -0.0117874 * x5 +0.0096530399999999999 * x6 -0.018119099999999999 * x7 -0.0118846 * x8 +0.0046322200000000003 * x9 +0.026229860000000001 * x10 +0.0039151699999999999 * x11 +0.055192739999999997 * x12 -0.031609199999999997)**2 +((-0.0057825999999999997) * x1 -0.086781800000000006 * x2 -0.0102267 * x3 -0.012215699999999999 * x4 +0.00079792999999999997 * x5 +0.042514490000000002 * x6 -0.0015567999999999999 * x7 -0.0097792999999999995 * x8 -0.040046400000000003 * x9 -0.0030850000000000001 * x10 -0.053090699999999998 * x11 -0.066677100000000003 * x12 +0.045787099999999997)**2 +((-0.0075103000000000001) * x1 -0.0118189 * x2 -0.0044790000000000003 * x3 -0.013873699999999999 * x4 -0.0090358999999999995 * x5 +0.0028350200000000002 * x6 +0.0053461000000000003 * x7 -0.0127247 * x8 -0.016379000000000001 * x9 -0.0045062000000000001 * x10 +0.00024404 * x11 -0.0051390000000000003 * x12 +0.016571800000000001)**2 +(0.0049036599999999998 * x1 -0.047458500000000001 * x2 -0.0043268999999999998 * x3 -0.0069588999999999996 * x4 +0.0058111999999999999 * x5 -0.047592299999999997 * x6 +0.00586828 * x7 +0.0042915699999999998 * x8 -0.032168799999999997 * x9 -0.0288991 * x10 -0.0034015 * x11 -0.070260600000000006 * x12 +0.045454500000000002)**2 +(0.0043056400000000003 * x1 +0.01299229 * x2 +0.019237899999999999 * x3 +0.018543469999999999 * x4 +0.0069868999999999999 * x5 -0.0070546000000000003 * x6 -0.0188615 * x7 +0.017869860000000001 * x8 +0.014811360000000001 * x9 +0.025401380000000001 * x10 +0.0077279799999999997 * x11 +0.02115788 * x12 +0.023129199999999999)**2 +((-0.0020909000000000001) * x1 +0.0093478699999999994 * x2 +0.0031107499999999998 * x3 -0.0026451999999999999 * x4 -0.011554399999999999 * x5 +0.01344507 * x6 +0.0093589999999999993 * x7 -0.0081542000000000003 * x8 -0.029224900000000002 * x9 +0.0041840999999999996 * x10 -0.0003191 * x11 -0.054288900000000001 * x12 +0.021317800000000001)**2 +(0.01344508 * x1 -0.039470699999999997 * x2 +0.010158800000000001 * x3 -0.0041136000000000002 * x4 +0.0068642099999999999 * x5 -0.013742600000000001 * x6 -0.0105551 * x7 +0.0059376200000000002 * x8 -0.028676799999999999 * x9 +0.0039383600000000001 * x10 +0.015896319999999999 * x11 -0.0285207 * x12 -0.014710040000000001)**2 +((-0.0014687999999999999) * x1 -0.030238600000000001 * x2 -0.017672500000000001 * x3 -0.019867200000000002 * x4 -0.0094319999999999994 * x5 -0.021955599999999999 * x6 -0.014338099999999999 * x7 -0.0106845 * x8 -0.0092613999999999995 * x9 -0.032394100000000002 * x10 -0.021153600000000002 * x11 +0.015654049999999999 * x12 +0.0060908000000000004)**2 +(0.011598300000000001 * x1 -0.022766499999999999 * x2 +0.01294056 * x3 +0.01392878 * x4 +0.02105545 * x5 +0.00705348 * x6 -0.0082625000000000007 * x7 +0.019853840000000001 * x8 -0.00083350000000000004 * x9 -0.0103458 * x10 +0.0098630499999999999 * x11 -0.045812499999999999 * x12 +0.014206099999999999)**2 +(0.016871339999999999 * x1 -0.072665300000000002 * x2 +0.0044991500000000004 * x3 +0.0097718100000000006 * x4 +0.017058400000000001 * x5 -0.090220499999999995 * x6 +0.088753940000000003 * x7 +0.019521690000000001 * x8 -0.062337499999999997 * x9 -0.056207399999999998 * x10 -0.026254599999999999 * x11 -0.063608399999999995 * x12 +0.033779999999999998)**2 +(0.03430532 * x1 +0.04080201 * x2 +0.068008650000000004 * x3 +0.0311986 * x4 +0.020528970000000001 * x5 +0.078881469999999995 * x6 +0.052033669999999997 * x7 +0.024734559999999999 * x8 +0.056292010000000003 * x9 +0.03905103 * x10 +0.04276746 * x11 +0.055001920000000003 * x12 -0.037225040000000001)**2 +(0.019571100000000001 * x1 -0.017438499999999999 * x2 +0.025156009999999999 * x3 +0.032213390000000001 * x4 +0.015586030000000001 * x5 +0.056183469999999999 * x6 -0.041913800000000001 * x7 +0.01671624 * x8 -0.0052960999999999998 * x9 +0.045891809999999998 * x10 +0.02436634 * x11 +0.036046679999999998 * x12 -0.01082837)**2 +(0.01179293 * x1 +0.11707885 * x2 +0.02306449 * x3 +0.016100980000000001 * x4 +0.01086556 * x5 +0.061469549999999998 * x6 -0.0565902 * x7 +0.013515889999999999 * x8 +0.074782189999999998 * x9 +0.02250717 * x10 +0.044958869999999998 * x11 +0.1128135 * x12 -0.01660418)**2 +(0.014609499999999999 * x1 +0.0097768300000000002 * x2 +0.015643029999999999 * x3 +0.011562680000000001 * x4 +0.015188810000000001 * x5 +0.01385571 * x6 -0.046088200000000003 * x7 +0.01487755 * x8 +0.0053007599999999998 * x9 +0.0114906 * x10 +0.0041144700000000003 * x11 -0.0038363 * x12 +0.016866800000000001)**2 +(0.01750579 * x1 +0.041201849999999998 * x2 +0.03084961 * x3 +0.031178560000000001 * x4 +0.020047309999999999 * x5 +0.042884070000000003 * x6 +0.043271440000000001 * x7 +0.026838069999999999 * x8 +0.039775329999999998 * x9 +0.048267200000000003 * x10 +0.02287322 * x11 +0.035653650000000002 * x12 -0.01481674)**2 +(0.021964819999999999 * x1 +0.045516889999999997 * x2 +0.014364450000000001 * x3 +0.018894749999999998 * x4 +0.01026376 * x5 +0.071491369999999999 * x6 -0.00096889999999999997 * x7 +0.012982779999999999 * x8 +0.046537149999999999 * x9 +0.024700340000000001 * x10 +0.01414485 * x11 +0.053725960000000003 * x12 -0.018834759999999999)**2 +((-0.0148144) * x1 -0.025217400000000001 * x2 -0.0139043 * x3 -0.0084618999999999996 * x4 -0.0163459 * x5 +0.0089235300000000007 * x6 -0.0056483999999999996 * x7 -0.022308000000000001 * x8 -0.030204499999999999 * x9 +0.0052566799999999997 * x10 -0.020834499999999999 * x11 -0.0050188000000000003 * x12 -0.0059157000000000003)**2
#sol_portfl1 = np.array([0.267993, 1.15927e-20, 0.0, 0.0, 0.405341, 0.0, 0.0, 1.02423e-19, 0.0159309, 0.0563109, 0.0765199, 0.177904])
sol_portfl1 = np.array([0.267993, 0.0, 0.0, 0.0, 0.405341, 0.0, 0.0, 0.0, 0.0159309, 0.0563109, 0.0765199, 0.177904])
eq1_portfl1 =  x1 +x2 +x3 +x4 +x5 +x6 +x7 +x8 +x9 +x10 +x11 +x12 - 1
cons_portfl1 = [{'func':eq1_portfl1,'type': 'eq', 'prop': 'convex'}]
bnds_portfl1 = [np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1])]
vars_portfl1 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12]
portfl1 = OptimizationProblem("portfl1", sol_portfl1, symobj_portfl1, cons_portfl1, vars_portfl1, bnds_portfl1)

symobj_portfl2 =  (0.01485068 * x1 +0.064728949999999993 * x2 +0.0021268699999999999 * x4 +0.01658024 * x5 +0.049802829999999999 * x6 +0.057492219999999997 * x7 +0.020563970000000001 * x8 +0.026373480000000001 * x9 +0.058622399999999998 * x10 +0.01305068 * x11 +0.02148485 * x12 -0.023798380000000001)**2 +(0.027144350000000001 * x2 -0.016989500000000001 * x3 -0.015651399999999999 * x4 +0.0023685099999999999 * x5 -0.025704000000000001 * x6 -0.0183082 * x7 +0.00039866000000000001 * x8 -0.0066337000000000002 * x9 -0.028555400000000002 * x10 -0.0216779 * x11 +0.00045682999999999997 * x12 +0.021957339999999999)**2 +(0.0060863899999999997 * x1 -0.030979199999999998 * x2 -0.0125235 * x3 +0.026187019999999998 * x4 +0.033165010000000002 * x5 +0.040649940000000002 * x6 -0.0047691000000000001 * x7 +0.041853509999999997 * x8 -0.0021638999999999999 * x9 +0.096193810000000005 * x10 +0.015477110000000001 * x11 -0.0317326 * x12 -0.046073889999999999)**2 +(0.02048871 * x1 -0.0099322000000000004 * x2 -0.0012011999999999999 * x3 -0.0050875 * x4 -0.015112199999999999 * x5 -0.066835099999999995 * x6 +0.01449517 * x7 -0.014977000000000001 * x8 -0.0108723 * x9 -0.0438425 * x10 +0.01895492 * x11 -0.021780399999999998 * x12 -0.017936069999999998)**2 +((-0.017431599999999998) * x1 -0.064816899999999997 * x2 -0.025862400000000001 * x3 -0.019920500000000001 * x4 -0.019749699999999999 * x5 -0.038789299999999999 * x6 +0.01805729 * x7 -0.0260699 * x8 -0.039673600000000003 * x9 -0.036252600000000003 * x10 -0.0623984 * x11 -0.040078500000000003 * x12 +0.01069194)**2 +((-0.0137687) * x1 -0.029230300000000001 * x2 -0.031085399999999999 * x3 -0.015649699999999999 * x4 -0.0077774000000000003 * x5 -0.0290312 * x6 -0.027751600000000001 * x7 -0.0138505 * x8 -0.0098904000000000006 * x9 -0.020560599999999998 * x10 -0.049649199999999998 * x11 +0.020238800000000001 * x12 +0.041798309999999998)**2 +((-0.015834000000000001) * x1 +0.029029490000000002 * x2 -0.030522000000000001 * x3 -0.019634800000000001 * x4 -0.0068716999999999997 * x5 -0.017998799999999999 * x6 -0.019224100000000001 * x7 -0.017110799999999999 * x8 -0.0051139999999999996 * x9 -0.024380700000000002 * x10 +0.00134202 * x11 +0.01612974 * x12 -0.0094835900000000001)**2 +(0.016597750000000001 * x1 +0.026802110000000001 * x2 +0.024294710000000001 * x3 +0.023153429999999999 * x4 +0.0161998 * x5 +0.0055495199999999996 * x6 +0.027641889999999999 * x7 +0.013815920000000001 * x8 +0.038343750000000003 * x9 +0.010915909999999999 * x10 +0.02193175 * x11 +0.082783159999999995 * x12 -0.01200623)**2 +(0.01107383 * x1 +0.02188145 * x2 +0.0042064800000000003 * x3 -0.0044365999999999997 * x4 +0.0086688100000000008 * x5 -0.083257200000000003 * x6 +0.0048110799999999997 * x7 +0.01020926 * x8 -0.014421 * x9 +0.00099840999999999992 * x10 -0.035645400000000001 * x11 -0.0263263 * x12 -0.0093082100000000008)**2 +((-0.0043531999999999998) * x1 -0.017691599999999998 * x2 -0.0112316 * x3 +0.00308721 * x4 -0.0102431 * x5 -0.018826499999999999 * x6 -0.016631300000000002 * x7 -0.0103614 * x8 -0.011717099999999999 * x9 -0.0012432999999999999 * x10 -0.040009999999999997 * x11 -0.038737500000000001 * x12 +0.0057093300000000003)**2 +(0.0084767100000000001 * x1 -0.0196384 * x2 +0.0073444000000000001 * x3 -0.0060155 * x4 +0.01153823 * x5 -0.018580300000000001 * x6 -0.0079725999999999998 * x7 +0.0088904299999999995 * x8 -0.0229678 * x9 -0.00074069999999999995 * x10 -0.0062248 * x11 -0.0066382000000000004 * x12 -0.03721348)**2 +(0.0083357599999999994 * x1 -0.0051548999999999996 * x2 +0.01560227 * x3 +0.028537739999999999 * x4 +0.011073110000000001 * x5 +0.027903299999999999 * x6 -0.0362028 * x7 +0.01081704 * x8 +0.0044096600000000001 * x9 +0.029115060000000002 * x10 +0.018714499999999998 * x11 -0.0019992 * x12 -0.026105630000000001)**2 +(0.0090700799999999995 * x1 +0.01001894 * x2 +0.012625279999999999 * x3 +0.01389078 * x4 +0.0049045099999999999 * x5 -0.0082345999999999999 * x6 +0.0055657600000000003 * x7 +0.0052654700000000004 * x8 -0.0035146000000000001 * x9 +0.0057945100000000001 * x10 -0.0014775999999999999 * x11 +0.020367610000000001 * x12 +0.0055999500000000002)**2 +(0.028021440000000002 * x1 +0.06839808 * x2 +0.030099850000000001 * x3 +0.027652590000000001 * x4 +0.01934344 * x5 +0.020265450000000001 * x6 +0.025753419999999999 * x7 +0.01944241 * x8 +0.03257355 * x9 +0.029362470000000002 * x10 +0.0142632 * x11 +0.049613320000000002 * x12 -0.019976279999999999)**2 +((-0.00023699999999999999) * x1 +0.11464542 * x2 +0.0011320200000000001 * x3 +0.00825095 * x4 -0.00018239999999999999 * x5 +0.024129250000000001 * x6 +0.047115379999999998 * x7 -0.00017990000000000001 * x8 +0.11882582999999999 * x9 +0.027287530000000001 * x10 +0.029135270000000001 * x11 +0.10977209 * x12 -0.03237346)**2 +(0.016358459999999998 * x1 +0.023911080000000001 * x2 +0.020141340000000001 * x3 +0.023002060000000001 * x4 +0.013687380000000001 * x5 +0.026702179999999999 * x6 +0.042138559999999999 * x7 +0.01340651 * x8 +0.020009800000000001 * x9 +0.018955240000000002 * x10 +0.00045297000000000002 * x11 +0.043999320000000001 * x12 -0.041060289999999999)**2 +(0.011196640000000001 * x1 +0.017309160000000001 * x2 +0.0060962899999999999 * x3 -0.0109541 * x4 -0.0011701999999999999 * x5 +0.0068511400000000004 * x6 +0.0015664800000000001 * x7 -0.0015981000000000001 * x8 +0.0099458099999999994 * x9 +0.024264290000000001 * x10 -0.0110172 * x11 -0.0011856 * x12 -0.01081711)**2 +((-0.0063052000000000004) * x1 +0.039854649999999998 * x2 +0.00041313999999999999 * x3 +0.0075050999999999998 * x4 +0.0063987000000000002 * x5 +0.00436018 * x6 +0.047018570000000003 * x7 +0.0084481999999999995 * x8 +0.047881010000000002 * x9 -0.0079571999999999993 * x10 +0.0061040699999999996 * x11 +0.047590779999999999 * x12 -0.02543629)**2 +(0.0016250100000000001 * x1 -0.0284541 * x2 -0.0022713 * x3 -0.0013018000000000001 * x4 -0.0012535999999999999 * x5 -0.00032880000000000002 * x6 -0.0128839 * x7 -0.00035270000000000001 * x8 -0.023203000000000001 * x9 -0.00079589999999999999 * x10 +0.02745336 * x11 -0.0030387999999999999 * x12 -0.0056193299999999996)**2 +(0.015064889999999999 * x1 +0.03014387 * x2 +0.016280349999999999 * x3 +0.020421459999999999 * x4 +0.01631848 * x5 +0.01644953 * x6 +0.02269933 * x7 +0.01270289 * x8 +0.02328976 * x9 +0.03278387 * x10 +0.01660762 * x11 +0.027691670000000002 * x12 +0.0047098299999999999)**2 +(0.012481920000000001 * x1 -0.0043781000000000002 * x2 +0.01568015 * x3 +0.010361220000000001 * x4 +0.0085575700000000005 * x5 +0.018319519999999999 * x6 +0.0026819600000000002 * x7 +0.0074912900000000003 * x8 -0.0285306 * x9 -0.0042126000000000004 * x10 +0.019748780000000001 * x11 -0.0027146000000000002 * x12 -0.0044914999999999998)**2 +(0.0081936400000000003 * x1 +0.043529079999999998 * x2 +0.0091559199999999997 * x3 +0.00786683 * x4 +0.00629811 * x5 +0.017163560000000001 * x6 +0.02979155 * x7 +0.0071762099999999997 * x8 +0.01515152 * x9 +0.016087710000000002 * x10 +0.0011391999999999999 * x11 +0.022078839999999999 * x12 -0.013174699999999999)**2 +(0.0046972899999999998 * x1 -0.031311600000000002 * x2 -0.00066220000000000005 * x3 -0.0013240999999999999 * x4 +0.0075625900000000001 * x5 -0.0061246 * x6 -0.015136500000000001 * x7 +0.0042922100000000003 * x8 -0.018738899999999999 * x9 -0.0134287 * x10 -0.0152905 * x11 -0.0142039 * x12 +0.0092205800000000008)**2 +(0.0141744 * x1 -0.060462500000000002 * x2 +0.017229950000000001 * x3 +0.022679689999999999 * x4 +0.017082219999999999 * x5 +0.010249640000000001 * x6 +0.00081848000000000001 * x7 +0.019317890000000001 * x8 -0.0351782 * x9 +0.012244410000000001 * x10 +0.00137224 * x11 -0.063788200000000003 * x12 +0.02131721)**2 +(0.021147369999999999 * x1 +0.037275820000000001 * x2 +0.017003259999999999 * x3 +0.01487547 * x4 +0.018915939999999999 * x5 +0.026266649999999999 * x6 +0.060699679999999999 * x7 +0.0208805 * x8 +0.043822489999999999 * x9 +0.027715799999999999 * x10 +0.040461589999999999 * x11 +0.015817879999999999 * x12 +0.0161736)**2 +(0.0056610499999999999 * x1 +0.01361736 * x2 +0.0063416799999999997 * x3 +0.0053116400000000003 * x4 +0.0052447600000000002 * x5 +0.0095827299999999994 * x6 -0.0102801 * x7 +0.0122392 * x8 +0.01976048 * x9 +0.011541539999999999 * x10 +0.01122972 * x11 +0.027618500000000001 * x12 -0.034448569999999998)**2 +((-0.0045602999999999998) * x1 -0.013824599999999999 * x2 -0.0091024000000000001 * x3 -0.0015382 * x4 -0.0021532000000000001 * x5 -0.001622 * x6 -0.0141954 * x7 -0.0060860999999999997 * x8 +6.5199999999999999e-05 * x9 -5.6499999999999998e-05 * x10 -0.030093200000000001 * x11 +0.039162490000000001 * x12 -0.011100459999999999)**2 +(0.01052255 * x1 +0.0056525899999999999 * x2 +0.0141967 * x3 +0.012325010000000001 * x4 +0.0043157100000000004 * x5 +0.015945600000000001 * x6 -0.0088681999999999997 * x7 +0.012328540000000001 * x8 +0.0097860099999999995 * x9 +0.017398179999999999 * x10 +0.071100430000000006 * x11 +0.015961380000000001 * x12 -0.0109786)**2 +(0.0070128200000000003 * x1 -0.0043280000000000002 * x2 +0.018051680000000001 * x3 +0.021637 * x4 +0.0098338999999999996 * x5 +0.0052712599999999998 * x6 +0.02879164 * x7 +0.0070166899999999999 * x8 -0.0084635999999999999 * x9 +0.01421354 * x10 +0.024018479999999998 * x11 -0.0065459999999999997 * x12 +0.0033593799999999999)**2 +(0.0049943699999999997 * x1 -0.024613300000000001 * x2 -0.0075903000000000003 * x3 -0.0068652000000000001 * x4 +0.0019639900000000001 * x5 -0.016673500000000001 * x6 -0.021699800000000002 * x7 +0.0044850200000000002 * x8 -0.037401400000000001 * x9 -0.024196599999999999 * x10 -0.016109200000000001 * x11 -0.038412700000000001 * x12 +0.00039194000000000002)**2 +(0.0052495299999999996 * x1 -0.051332599999999999 * x2 -0.0010204000000000001 * x3 -0.0011925 * x4 +0.014177459999999999 * x5 +0.0083020699999999999 * x6 -0.0087868000000000009 * x7 +0.01235355 * x8 -0.041499099999999997 * x9 -0.0282975 * x10 -0.026576499999999999 * x11 -0.12110600000000001 * x12 +0.01395125)**2 +(0.027642389999999999 * x1 -0.057852199999999999 * x2 +0.0119382 * x3 +0.036083839999999999 * x4 +0.027717519999999999 * x5 -0.1286899 * x6 +0.049118050000000003 * x7 +0.037159499999999998 * x8 +0.02509598 * x9 -0.083264000000000005 * x10 -0.060587299999999997 * x11 +0.018761179999999999 * x12 +0.0027646799999999998)**2 +(0.032861300000000003 * x1 +0.11776573 * x2 +0.047063279999999999 * x3 +0.03060179 * x4 +0.01993433 * x5 +0.068528629999999993 * x6 +0.066390759999999993 * x7 +0.022468499999999999 * x8 +0.067272349999999995 * x9 +0.03474878 * x10 +0.0085651500000000005 * x11 +0.065503169999999999 * x12 +0.04476517)**2 +(0.01121753 * x1 -0.029441599999999998 * x2 -0.0065674000000000001 * x3 -0.00012420000000000001 * x4 +0.0077412399999999999 * x5 -0.0098919000000000003 * x6 +0.03177555 * x7 +0.00853749 * x8 +0.033855349999999999 * x9 -0.0091473000000000006 * x10 -0.0087101000000000001 * x11 +0.01441183 * x12 -0.052496800000000003)**2 +(0.019980540000000001 * x1 +0.048465830000000001 * x2 +0.0053372100000000002 * x3 +0.012611829999999999 * x4 +0.01201704 * x5 -0.032684900000000003 * x6 +0.020061120000000002 * x7 +0.021641520000000001 * x8 +0.031803900000000003 * x9 +0.029212769999999999 * x10 +0.036757709999999999 * x11 +0.041887290000000001 * x12 +0.0085158200000000003)**2 +(0.01507346 * x1 +0.0021061999999999999 * x2 +0.0316723 * x3 +0.018221979999999999 * x4 +0.015256280000000001 * x5 +0.016826270000000001 * x6 +0.0097564699999999997 * x7 +0.014338210000000001 * x8 +0.018031189999999999 * x9 +0.033298519999999998 * x10 -0.0057913000000000001 * x11 +0.0032202899999999998 * x12 -0.019304700000000001)**2 +(0.0054511300000000002 * x1 +0.071128319999999995 * x2 -0.0015788 * x3 +0.0208484 * x4 +0.027019020000000001 * x5 -0.027579699999999999 * x6 +0.10423006999999999 * x7 +0.033953690000000002 * x8 +0.04092867 * x9 +0.00214044 * x10 +0.00028415 * x11 +0.083960279999999998 * x12 -0.023834359999999999)**2 +(0.01265034 * x1 -0.026179899999999999 * x2 +0.042345090000000002 * x3 +0.02921733 * x4 +0.0064148800000000004 * x5 -0.026079100000000001 * x6 -0.010196999999999999 * x7 +0.00054960000000000002 * x8 -0.0186249 * x9 +0.026994959999999998 * x10 +0.045522340000000001 * x11 +0.0056450099999999998 * x12 -0.026493180000000002)**2 +(0.00086154000000000005 * x1 -0.021740200000000001 * x2 +0.02123953 * x3 +0.01559901 * x4 -0.0007161 * x5 +0.080261379999999993 * x6 +0.015174719999999999 * x7 +0.0020598700000000001 * x8 -0.0076147999999999997 * x9 -0.021606 * x10 +0.011683199999999999 * x11 +0.0035888500000000002 * x12 +0.016493589999999999)**2 +(0.01629365 * x1 +0.01046127 * x2 +0.02167813 * x3 +0.00265402 * x4 +0.00121838 * x5 +0.045696630000000002 * x6 +0.040661000000000003 * x7 +0.00356311 * x8 -0.0016527 * x9 -0.031235200000000001 * x10 -0.0024169999999999999 * x11 -0.041765999999999998 * x12 -0.018633540000000001)**2 +(0.026740880000000002 * x1 +0.082180020000000006 * x2 +0.029296139999999998 * x3 +0.03300293 * x4 +0.01281317 * x5 +0.063443159999999998 * x6 +0.092047180000000006 * x7 +0.022395189999999999 * x8 +0.093177250000000003 * x9 +0.071128179999999999 * x10 +0.062188720000000003 * x11 +0.073824219999999996 * x12 -0.030716460000000001)**2 +((-0.0028283000000000002) * x1 +0.064042829999999995 * x2 -0.0015172 * x3 +0.01390252 * x4 +0.035691569999999999 * x5 +0.029799559999999999 * x6 +0.075358999999999995 * x7 +0.027581140000000001 * x8 +0.049702540000000003 * x9 -0.041709299999999998 * x10 +0.064440499999999998 * x11 +0.10782392 * x12 -0.052872879999999997)**2 +((-0.0120404) * x1 -0.030960000000000001 * x2 +0.038896260000000002 * x3 +0.02305596 * x4 +0.02476882 * x5 +0.010096549999999999 * x6 -0.0071032999999999999 * x7 +0.025450690000000002 * x8 -0.0077451000000000004 * x9 +0.0099669600000000004 * x10 -0.0056861000000000004 * x11 -0.055244000000000001 * x12 -0.0049012999999999999)**2 +(0.0242554 * x1 +0.068909059999999994 * x2 +0.020533249999999999 * x3 +0.0067609100000000002 * x4 +0.01933613 * x5 +0.015840070000000001 * x6 +0.02237111 * x7 +0.019465900000000001 * x8 +0.033824220000000002 * x9 +0.043496920000000001 * x10 +0.035726920000000002 * x11 +0.085996920000000004 * x12 -0.043027990000000002)**2 +(0.027130020000000001 * x1 +0.024704670000000001 * x2 +0.012577670000000001 * x3 +0.024953980000000001 * x4 -0.0032742000000000001 * x5 +0.044598100000000002 * x6 -0.015054400000000001 * x7 +0.0041192099999999999 * x8 -0.00030529999999999999 * x9 +0.0041928699999999996 * x10 +0.02731691 * x11 +0.039274919999999998 * x12 +0.0017619999999999999)**2 +(0.00382081 * x1 +0.010704969999999999 * x2 +0.0084129300000000008 * x3 -0.0082317999999999992 * x4 -0.0117874 * x5 +0.0096530399999999999 * x6 -0.018119099999999999 * x7 -0.0118846 * x8 +0.0046322200000000003 * x9 +0.026229860000000001 * x10 +0.0039151699999999999 * x11 +0.055192739999999997 * x12 -0.037697790000000002)**2 +((-0.0057825999999999997) * x1 -0.086781800000000006 * x2 -0.0102267 * x3 -0.012215699999999999 * x4 +0.00079792999999999997 * x5 +0.042514490000000002 * x6 -0.0015567999999999999 * x7 -0.0097792999999999995 * x8 -0.040046400000000003 * x9 -0.0030850000000000001 * x10 -0.053090699999999998 * x11 -0.066677100000000003 * x12 +0.051212769999999998)**2 +((-0.0075103000000000001) * x1 -0.0118189 * x2 -0.0044790000000000003 * x3 -0.013873699999999999 * x4 -0.0090358999999999995 * x5 +0.0028350200000000002 * x6 +0.0053461000000000003 * x7 -0.0127247 * x8 -0.016379000000000001 * x9 -0.0045062000000000001 * x10 +0.00024404 * x11 -0.0051390000000000003 * x12 +0.01676267)**2 +(0.0049036599999999998 * x1 -0.047458500000000001 * x2 -0.0043268999999999998 * x3 -0.0069588999999999996 * x4 +0.0058111999999999999 * x5 -0.047592299999999997 * x6 +0.00586828 * x7 +0.0042915699999999998 * x8 -0.032168799999999997 * x9 -0.0288991 * x10 -0.0034015 * x11 -0.070260600000000006 * x12 +0.049323350000000002)**2 +(0.0043056400000000003 * x1 +0.01299229 * x2 +0.019237899999999999 * x3 +0.018543469999999999 * x4 +0.0069868999999999999 * x5 -0.0070546000000000003 * x6 -0.0188615 * x7 +0.017869860000000001 * x8 +0.014811360000000001 * x9 +0.025401380000000001 * x10 +0.0077279799999999997 * x11 +0.02115788 * x12 +0.024712769999999998)**2 +((-0.0020909000000000001) * x1 +0.0093478699999999994 * x2 +0.0031107499999999998 * x3 -0.0026451999999999999 * x4 -0.011554399999999999 * x5 +0.01344507 * x6 +0.0093589999999999993 * x7 -0.0081542000000000003 * x8 -0.029224900000000002 * x9 +0.0041840999999999996 * x10 -0.0003191 * x11 -0.054288900000000001 * x12 +0.023266060000000002)**2 +(0.01344508 * x1 -0.039470699999999997 * x2 +0.010158800000000001 * x3 -0.0041136000000000002 * x4 +0.0068642099999999999 * x5 -0.013742600000000001 * x6 -0.0105551 * x7 +0.0059376200000000002 * x8 -0.028676799999999999 * x9 +0.0039383600000000001 * x10 +0.015896319999999999 * x11 -0.0285207 * x12 -0.013901409999999999)**2 +((-0.0014687999999999999) * x1 -0.030238600000000001 * x2 -0.017672500000000001 * x3 -0.019867200000000002 * x4 -0.0094319999999999994 * x5 -0.021955599999999999 * x6 -0.014338099999999999 * x7 -0.0106845 * x8 -0.0092613999999999995 * x9 -0.032394100000000002 * x10 -0.021153600000000002 * x11 +0.015654049999999999 * x12 +0.0010985000000000001)**2 +(0.011598300000000001 * x1 -0.022766499999999999 * x2 +0.01294056 * x3 +0.01392878 * x4 +0.02105545 * x5 +0.00705348 * x6 -0.0082625000000000007 * x7 +0.019853840000000001 * x8 -0.00083350000000000004 * x9 -0.0103458 * x10 +0.0098630499999999999 * x11 -0.045812499999999999 * x12 +0.015469210000000001)**2 +(0.016871339999999999 * x1 -0.072665300000000002 * x2 +0.0044991500000000004 * x3 +0.0097718100000000006 * x4 +0.017058400000000001 * x5 -0.090220499999999995 * x6 +0.088753940000000003 * x7 +0.019521690000000001 * x8 -0.062337499999999997 * x9 -0.056207399999999998 * x10 -0.026254599999999999 * x11 -0.063608399999999995 * x12 +0.054448870000000003)**2 +(0.03430532 * x1 +0.04080201 * x2 +0.068008650000000004 * x3 +0.0311986 * x4 +0.020528970000000001 * x5 +0.078881469999999995 * x6 +0.052033669999999997 * x7 +0.024734559999999999 * x8 +0.056292010000000003 * x9 +0.03905103 * x10 +0.04276746 * x11 +0.055001920000000003 * x12 -0.054569010000000001)**2 +(0.019571100000000001 * x1 -0.017438499999999999 * x2 +0.025156009999999999 * x3 +0.032213390000000001 * x4 +0.015586030000000001 * x5 +0.056183469999999999 * x6 -0.041913800000000001 * x7 +0.01671624 * x8 -0.0052960999999999998 * x9 +0.045891809999999998 * x10 +0.02436634 * x11 +0.036046679999999998 * x12 -0.020497169999999999)**2 +(0.01179293 * x1 +0.11707885 * x2 +0.02306449 * x3 +0.016100980000000001 * x4 +0.01086556 * x5 +0.061469549999999998 * x6 -0.0565902 * x7 +0.013515889999999999 * x8 +0.074782189999999998 * x9 +0.02250717 * x10 +0.044958869999999998 * x11 +0.1128135 * x12 -0.031623930000000001)**2 +(0.014609499999999999 * x1 +0.0097768300000000002 * x2 +0.015643029999999999 * x3 +0.011562680000000001 * x4 +0.015188810000000001 * x5 +0.01385571 * x6 -0.046088200000000003 * x7 +0.01487755 * x8 +0.0053007599999999998 * x9 +0.0114906 * x10 +0.0041144700000000003 * x11 -0.0038363 * x12 +0.021433799999999999)**2 +(0.01750579 * x1 +0.041201849999999998 * x2 +0.03084961 * x3 +0.031178560000000001 * x4 +0.020047309999999999 * x5 +0.042884070000000003 * x6 +0.043271440000000001 * x7 +0.026838069999999999 * x8 +0.039775329999999998 * x9 +0.048267200000000003 * x10 +0.02287322 * x11 +0.035653650000000002 * x12 -0.01360452)**2 +(0.021964819999999999 * x1 +0.045516889999999997 * x2 +0.014364450000000001 * x3 +0.018894749999999998 * x4 +0.01026376 * x5 +0.071491369999999999 * x6 -0.00096889999999999997 * x7 +0.012982779999999999 * x8 +0.046537149999999999 * x9 +0.024700340000000001 * x10 +0.01414485 * x11 +0.053725960000000003 * x12 -0.021255719999999999)**2 +((-0.0148144) * x1 -0.025217400000000001 * x2 -0.0139043 * x3 -0.0084618999999999996 * x4 -0.0163459 * x5 +0.0089235300000000007 * x6 -0.0056483999999999996 * x7 -0.022308000000000001 * x8 -0.030204499999999999 * x9 +0.0052566799999999997 * x10 -0.020834499999999999 * x11 -0.0050188000000000003 * x12 -0.017803389999999999)**2
#sol_portfl2 = np.array([0.064262, 1.45778e-20, 5.19581e-23, 0.0, 0.428405, 3.07019e-21, 0.0, 9.00344e-21, 1.15121e-20, 0.139985, 0.169474, 0.197874])
sol_portfl2 = np.array([0.064262, 0.0, 0.0, 0.0, 0.428405, 0.0, 0.0, 0.0, 0.0, 0.139985, 0.169474, 0.197874])
eq1_portfl2 =  x1 +x2 +x3 +x4 +x5 +x6 +x7 +x8 +x9 +x10 +x11 +x12 - 1
cons_portfl2 = [{'func':eq1_portfl2,'type': 'eq', 'prop': 'convex'}]
bnds_portfl2 = [np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1])]
vars_portfl2 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12]
portfl2 = OptimizationProblem("portfl2", sol_portfl2, symobj_portfl2, cons_portfl2, vars_portfl2, bnds_portfl2)

symobj_portfl3 =  (0.01485068 * x1 +0.064728949999999993 * x2 +0.0021268699999999999 * x4 +0.01658024 * x5 +0.049802829999999999 * x6 +0.057492219999999997 * x7 +0.020563970000000001 * x8 +0.026373480000000001 * x9 +0.058622399999999998 * x10 +0.01305068 * x11 +0.02148485 * x12 -0.0047591899999999999)**2 +(0.027144350000000001 * x2 -0.016989500000000001 * x3 -0.015651399999999999 * x4 +0.0023685099999999999 * x5 -0.025704000000000001 * x6 -0.0183082 * x7 +0.00039866000000000001 * x8 -0.0066337000000000002 * x9 -0.028555400000000002 * x10 -0.0216779 * x11 +0.00045682999999999997 * x12 +0.024507020000000001)**2 +(0.0060863899999999997 * x1 -0.030979199999999998 * x2 -0.0125235 * x3 +0.026187019999999998 * x4 +0.033165010000000002 * x5 +0.040649940000000002 * x6 -0.0047691000000000001 * x7 +0.041853509999999997 * x8 -0.0021638999999999999 * x9 +0.096193810000000005 * x10 +0.015477110000000001 * x11 -0.0317326 * x12 -0.034616269999999998)**2 +(0.02048871 * x1 -0.0099322000000000004 * x2 -0.0012011999999999999 * x3 -0.0050875 * x4 -0.015112199999999999 * x5 -0.066835099999999995 * x6 +0.01449517 * x7 -0.014977000000000001 * x8 -0.0108723 * x9 -0.0438425 * x10 +0.01895492 * x11 -0.021780399999999998 * x12 -0.01025355)**2 +((-0.017431599999999998) * x1 -0.064816899999999997 * x2 -0.025862400000000001 * x3 -0.019920500000000001 * x4 -0.019749699999999999 * x5 -0.038789299999999999 * x6 +0.01805729 * x7 -0.0260699 * x8 -0.039673600000000003 * x9 -0.036252600000000003 * x10 -0.0623984 * x11 -0.040078500000000003 * x12 +0.010823879999999999)**2 +((-0.0137687) * x1 -0.029230300000000001 * x2 -0.031085399999999999 * x3 -0.015649699999999999 * x4 -0.0077774000000000003 * x5 -0.0290312 * x6 -0.027751600000000001 * x7 -0.0138505 * x8 -0.0098904000000000006 * x9 -0.020560599999999998 * x10 -0.049649199999999998 * x11 +0.020238800000000001 * x12 +0.04013564)**2 +((-0.015834000000000001) * x1 +0.029029490000000002 * x2 -0.030522000000000001 * x3 -0.019634800000000001 * x4 -0.0068716999999999997 * x5 -0.017998799999999999 * x6 -0.019224100000000001 * x7 -0.017110799999999999 * x8 -0.0051139999999999996 * x9 -0.024380700000000002 * x10 +0.00134202 * x11 +0.01612974 * x12 -0.01625619)**2 +(0.016597750000000001 * x1 +0.026802110000000001 * x2 +0.024294710000000001 * x3 +0.023153429999999999 * x4 +0.0161998 * x5 +0.0055495199999999996 * x6 +0.027641889999999999 * x7 +0.013815920000000001 * x8 +0.038343750000000003 * x9 +0.010915909999999999 * x10 +0.02193175 * x11 +0.082783159999999995 * x12 -0.0083015199999999997)**2 +(0.01107383 * x1 +0.02188145 * x2 +0.0042064800000000003 * x3 -0.0044365999999999997 * x4 +0.0086688100000000008 * x5 -0.083257200000000003 * x6 +0.0048110799999999997 * x7 +0.01020926 * x8 -0.014421 * x9 +0.00099840999999999992 * x10 -0.035645400000000001 * x11 -0.0263263 * x12 -0.0037163399999999998)**2 +((-0.0043531999999999998) * x1 -0.017691599999999998 * x2 -0.0112316 * x3 +0.00308721 * x4 -0.0102431 * x5 -0.018826499999999999 * x6 -0.016631300000000002 * x7 -0.0103614 * x8 -0.011717099999999999 * x9 -0.0012432999999999999 * x10 -0.040009999999999997 * x11 -0.038737500000000001 * x12 +0.015168839999999999)**2 +(0.0084767100000000001 * x1 -0.0196384 * x2 +0.0073444000000000001 * x3 -0.0060155 * x4 +0.01153823 * x5 -0.018580300000000001 * x6 -0.0079725999999999998 * x7 +0.0088904299999999995 * x8 -0.0229678 * x9 -0.00074069999999999995 * x10 -0.0062248 * x11 -0.0066382000000000004 * x12 -0.050741559999999998)**2 +(0.0083357599999999994 * x1 -0.0051548999999999996 * x2 +0.01560227 * x3 +0.028537739999999999 * x4 +0.011073110000000001 * x5 +0.027903299999999999 * x6 -0.0362028 * x7 +0.01081704 * x8 +0.0044096600000000001 * x9 +0.029115060000000002 * x10 +0.018714499999999998 * x11 -0.0019992 * x12 -0.025274040000000001)**2 +(0.0090700799999999995 * x1 +0.01001894 * x2 +0.012625279999999999 * x3 +0.01389078 * x4 +0.0049045099999999999 * x5 -0.0082345999999999999 * x6 +0.0055657600000000003 * x7 +0.0052654700000000004 * x8 -0.0035146000000000001 * x9 +0.0057945100000000001 * x10 -0.0014775999999999999 * x11 +0.020367610000000001 * x12 +0.0077140000000000004)**2 +(0.028021440000000002 * x1 +0.06839808 * x2 +0.030099850000000001 * x3 +0.027652590000000001 * x4 +0.01934344 * x5 +0.020265450000000001 * x6 +0.025753419999999999 * x7 +0.01944241 * x8 +0.03257355 * x9 +0.029362470000000002 * x10 +0.0142632 * x11 +0.049613320000000002 * x12 -0.0036958799999999999)**2 +((-0.00023699999999999999) * x1 +0.11464542 * x2 +0.0011320200000000001 * x3 +0.00825095 * x4 -0.00018239999999999999 * x5 +0.024129250000000001 * x6 +0.047115379999999998 * x7 -0.00017990000000000001 * x8 +0.11882582999999999 * x9 +0.027287530000000001 * x10 +0.029135270000000001 * x11 +0.10977209 * x12 -0.039302620000000003)**2 +(0.016358459999999998 * x1 +0.023911080000000001 * x2 +0.020141340000000001 * x3 +0.023002060000000001 * x4 +0.013687380000000001 * x5 +0.026702179999999999 * x6 +0.042138559999999999 * x7 +0.01340651 * x8 +0.020009800000000001 * x9 +0.018955240000000002 * x10 +0.00045297000000000002 * x11 +0.043999320000000001 * x12 -0.036514820000000003)**2 +(0.011196640000000001 * x1 +0.017309160000000001 * x2 +0.0060962899999999999 * x3 -0.0109541 * x4 -0.0011701999999999999 * x5 +0.0068511400000000004 * x6 +0.0015664800000000001 * x7 -0.0015981000000000001 * x8 +0.0099458099999999994 * x9 +0.024264290000000001 * x10 -0.0110172 * x11 -0.0011856 * x12 -0.01053366)**2 +((-0.0063052000000000004) * x1 +0.039854649999999998 * x2 +0.00041313999999999999 * x3 +0.0075050999999999998 * x4 +0.0063987000000000002 * x5 +0.00436018 * x6 +0.047018570000000003 * x7 +0.0084481999999999995 * x8 +0.047881010000000002 * x9 -0.0079571999999999993 * x10 +0.0061040699999999996 * x11 +0.047590779999999999 * x12 -0.032859310000000003)**2 +(0.0016250100000000001 * x1 -0.0284541 * x2 -0.0022713 * x3 -0.0013018000000000001 * x4 -0.0012535999999999999 * x5 -0.00032880000000000002 * x6 -0.0128839 * x7 -0.00035270000000000001 * x8 -0.023203000000000001 * x9 -0.00079589999999999999 * x10 +0.02745336 * x11 -0.0030387999999999999 * x12 -0.00728512)**2 +(0.015064889999999999 * x1 +0.03014387 * x2 +0.016280349999999999 * x3 +0.020421459999999999 * x4 +0.01631848 * x5 +0.01644953 * x6 +0.02269933 * x7 +0.01270289 * x8 +0.02328976 * x9 +0.03278387 * x10 +0.01660762 * x11 +0.027691670000000002 * x12 +0.00696702)**2 +(0.012481920000000001 * x1 -0.0043781000000000002 * x2 +0.01568015 * x3 +0.010361220000000001 * x4 +0.0085575700000000005 * x5 +0.018319519999999999 * x6 +0.0026819600000000002 * x7 +0.0074912900000000003 * x8 -0.0285306 * x9 -0.0042126000000000004 * x10 +0.019748780000000001 * x11 -0.0027146000000000002 * x12 -0.010356809999999999)**2 +(0.0081936400000000003 * x1 +0.043529079999999998 * x2 +0.0091559199999999997 * x3 +0.00786683 * x4 +0.00629811 * x5 +0.017163560000000001 * x6 +0.02979155 * x7 +0.0071762099999999997 * x8 +0.01515152 * x9 +0.016087710000000002 * x10 +0.0011391999999999999 * x11 +0.022078839999999999 * x12 -0.02017062)**2 +(0.0046972899999999998 * x1 -0.031311600000000002 * x2 -0.00066220000000000005 * x3 -0.0013240999999999999 * x4 +0.0075625900000000001 * x5 -0.0061246 * x6 -0.015136500000000001 * x7 +0.0042922100000000003 * x8 -0.018738899999999999 * x9 -0.0134287 * x10 -0.0152905 * x11 -0.0142039 * x12 +0.0090755899999999997)**2 +(0.0141744 * x1 -0.060462500000000002 * x2 +0.017229950000000001 * x3 +0.022679689999999999 * x4 +0.017082219999999999 * x5 +0.010249640000000001 * x6 +0.00081848000000000001 * x7 +0.019317890000000001 * x8 -0.0351782 * x9 +0.012244410000000001 * x10 +0.00137224 * x11 -0.063788200000000003 * x12 +0.015700639999999998)**2 +(0.021147369999999999 * x1 +0.037275820000000001 * x2 +0.017003259999999999 * x3 +0.01487547 * x4 +0.018915939999999999 * x5 +0.026266649999999999 * x6 +0.060699679999999999 * x7 +0.0208805 * x8 +0.043822489999999999 * x9 +0.027715799999999999 * x10 +0.040461589999999999 * x11 +0.015817879999999999 * x12 +0.019340690000000001)**2 +(0.0056610499999999999 * x1 +0.01361736 * x2 +0.0063416799999999997 * x3 +0.0053116400000000003 * x4 +0.0052447600000000002 * x5 +0.0095827299999999994 * x6 -0.0102801 * x7 +0.0122392 * x8 +0.01976048 * x9 +0.011541539999999999 * x10 +0.01122972 * x11 +0.027618500000000001 * x12 -0.034835650000000003)**2 +((-0.0045602999999999998) * x1 -0.013824599999999999 * x2 -0.0091024000000000001 * x3 -0.0015382 * x4 -0.0021532000000000001 * x5 -0.001622 * x6 -0.0141954 * x7 -0.0060860999999999997 * x8 +6.5199999999999999e-05 * x9 -5.6499999999999998e-05 * x10 -0.030093200000000001 * x11 +0.039162490000000001 * x12 -0.015980089999999999)**2 +(0.01052255 * x1 +0.0056525899999999999 * x2 +0.0141967 * x3 +0.012325010000000001 * x4 +0.0043157100000000004 * x5 +0.015945600000000001 * x6 -0.0088681999999999997 * x7 +0.012328540000000001 * x8 +0.0097860099999999995 * x9 +0.017398179999999999 * x10 +0.071100430000000006 * x11 +0.015961380000000001 * x12 -0.016502289999999999)**2 +(0.0070128200000000003 * x1 -0.0043280000000000002 * x2 +0.018051680000000001 * x3 +0.021637 * x4 +0.0098338999999999996 * x5 +0.0052712599999999998 * x6 +0.02879164 * x7 +0.0070166899999999999 * x8 -0.0084635999999999999 * x9 +0.01421354 * x10 +0.024018479999999998 * x11 -0.0065459999999999997 * x12 -0.00145856)**2 +(0.0049943699999999997 * x1 -0.024613300000000001 * x2 -0.0075903000000000003 * x3 -0.0068652000000000001 * x4 +0.0019639900000000001 * x5 -0.016673500000000001 * x6 -0.021699800000000002 * x7 +0.0044850200000000002 * x8 -0.037401400000000001 * x9 -0.024196599999999999 * x10 -0.016109200000000001 * x11 -0.038412700000000001 * x12 -0.0051291799999999997)**2 +(0.0052495299999999996 * x1 -0.051332599999999999 * x2 -0.0010204000000000001 * x3 -0.0011925 * x4 +0.014177459999999999 * x5 +0.0083020699999999999 * x6 -0.0087868000000000009 * x7 +0.01235355 * x8 -0.041499099999999997 * x9 -0.0282975 * x10 -0.026576499999999999 * x11 -0.12110600000000001 * x12 +0.0023895600000000002)**2 +(0.027642389999999999 * x1 -0.057852199999999999 * x2 +0.0119382 * x3 +0.036083839999999999 * x4 +0.027717519999999999 * x5 -0.1286899 * x6 +0.049118050000000003 * x7 +0.037159499999999998 * x8 +0.02509598 * x9 -0.083264000000000005 * x10 -0.060587299999999997 * x11 +0.018761179999999999 * x12 +0.01948598)**2 +(0.032861300000000003 * x1 +0.11776573 * x2 +0.047063279999999999 * x3 +0.03060179 * x4 +0.01993433 * x5 +0.068528629999999993 * x6 +0.066390759999999993 * x7 +0.022468499999999999 * x8 +0.067272349999999995 * x9 +0.03474878 * x10 +0.0085651500000000005 * x11 +0.065503169999999999 * x12 +0.037105510000000001)**2 +(0.01121753 * x1 -0.029441599999999998 * x2 -0.0065674000000000001 * x3 -0.00012420000000000001 * x4 +0.0077412399999999999 * x5 -0.0098919000000000003 * x6 +0.03177555 * x7 +0.00853749 * x8 +0.033855349999999999 * x9 -0.0091473000000000006 * x10 -0.0087101000000000001 * x11 +0.01441183 * x12 -0.046420740000000002)**2 +(0.019980540000000001 * x1 +0.048465830000000001 * x2 +0.0053372100000000002 * x3 +0.012611829999999999 * x4 +0.01201704 * x5 -0.032684900000000003 * x6 +0.020061120000000002 * x7 +0.021641520000000001 * x8 +0.031803900000000003 * x9 +0.029212769999999999 * x10 +0.036757709999999999 * x11 +0.041887290000000001 * x12 +0.01552978)**2 +(0.01507346 * x1 +0.0021061999999999999 * x2 +0.0316723 * x3 +0.018221979999999999 * x4 +0.015256280000000001 * x5 +0.016826270000000001 * x6 +0.0097564699999999997 * x7 +0.014338210000000001 * x8 +0.018031189999999999 * x9 +0.033298519999999998 * x10 -0.0057913000000000001 * x11 +0.0032202899999999998 * x12 -0.0093849799999999994)**2 +(0.0054511300000000002 * x1 +0.071128319999999995 * x2 -0.0015788 * x3 +0.0208484 * x4 +0.027019020000000001 * x5 -0.027579699999999999 * x6 +0.10423006999999999 * x7 +0.033953690000000002 * x8 +0.04092867 * x9 +0.00214044 * x10 +0.00028415 * x11 +0.083960279999999998 * x12 -0.035608309999999997)**2 +(0.01265034 * x1 -0.026179899999999999 * x2 +0.042345090000000002 * x3 +0.02921733 * x4 +0.0064148800000000004 * x5 -0.026079100000000001 * x6 -0.010196999999999999 * x7 +0.00054960000000000002 * x8 -0.0186249 * x9 +0.026994959999999998 * x10 +0.045522340000000001 * x11 +0.0056450099999999998 * x12 -0.036867240000000003)**2 +(0.00086154000000000005 * x1 -0.021740200000000001 * x2 +0.02123953 * x3 +0.01559901 * x4 -0.0007161 * x5 +0.080261379999999993 * x6 +0.015174719999999999 * x7 +0.0020598700000000001 * x8 -0.0076147999999999997 * x9 -0.021606 * x10 +0.011683199999999999 * x11 +0.0035888500000000002 * x12 +0.0097027799999999994)**2 +(0.01629365 * x1 +0.01046127 * x2 +0.02167813 * x3 +0.00265402 * x4 +0.00121838 * x5 +0.045696630000000002 * x6 +0.040661000000000003 * x7 +0.00356311 * x8 -0.0016527 * x9 -0.031235200000000001 * x10 -0.0024169999999999999 * x11 -0.041765999999999998 * x12 -0.01240233)**2 +(0.026740880000000002 * x1 +0.082180020000000006 * x2 +0.029296139999999998 * x3 +0.03300293 * x4 +0.01281317 * x5 +0.063443159999999998 * x6 +0.092047180000000006 * x7 +0.022395189999999999 * x8 +0.093177250000000003 * x9 +0.071128179999999999 * x10 +0.062188720000000003 * x11 +0.073824219999999996 * x12 -0.0066764700000000003)**2 +((-0.0028283000000000002) * x1 +0.064042829999999995 * x2 -0.0015172 * x3 +0.01390252 * x4 +0.035691569999999999 * x5 +0.029799559999999999 * x6 +0.075358999999999995 * x7 +0.027581140000000001 * x8 +0.049702540000000003 * x9 -0.041709299999999998 * x10 +0.064440499999999998 * x11 +0.10782392 * x12 -0.052874959999999999)**2 +((-0.0120404) * x1 -0.030960000000000001 * x2 +0.038896260000000002 * x3 +0.02305596 * x4 +0.02476882 * x5 +0.010096549999999999 * x6 -0.0071032999999999999 * x7 +0.025450690000000002 * x8 -0.0077451000000000004 * x9 +0.0099669600000000004 * x10 -0.0056861000000000004 * x11 -0.055244000000000001 * x12 +0.027593139999999999)**2 +(0.0242554 * x1 +0.068909059999999994 * x2 +0.020533249999999999 * x3 +0.0067609100000000002 * x4 +0.01933613 * x5 +0.015840070000000001 * x6 +0.02237111 * x7 +0.019465900000000001 * x8 +0.033824220000000002 * x9 +0.043496920000000001 * x10 +0.035726920000000002 * x11 +0.085996920000000004 * x12 -0.030788670000000001)**2 +(0.027130020000000001 * x1 +0.024704670000000001 * x2 +0.012577670000000001 * x3 +0.024953980000000001 * x4 -0.0032742000000000001 * x5 +0.044598100000000002 * x6 -0.015054400000000001 * x7 +0.0041192099999999999 * x8 -0.00030529999999999999 * x9 +0.0041928699999999996 * x10 +0.02731691 * x11 +0.039274919999999998 * x12 -0.0054057000000000003)**2 +(0.00382081 * x1 +0.010704969999999999 * x2 +0.0084129300000000008 * x3 -0.0082317999999999992 * x4 -0.0117874 * x5 +0.0096530399999999999 * x6 -0.018119099999999999 * x7 -0.0118846 * x8 +0.0046322200000000003 * x9 +0.026229860000000001 * x10 +0.0039151699999999999 * x11 +0.055192739999999997 * x12 -0.044165250000000003)**2 +((-0.0057825999999999997) * x1 -0.086781800000000006 * x2 -0.0102267 * x3 -0.012215699999999999 * x4 +0.00079792999999999997 * x5 +0.042514490000000002 * x6 -0.0015567999999999999 * x7 -0.0097792999999999995 * x8 -0.040046400000000003 * x9 -0.0030850000000000001 * x10 -0.053090699999999998 * x11 -0.066677100000000003 * x12 +0.045150320000000001)**2 +((-0.0075103000000000001) * x1 -0.0118189 * x2 -0.0044790000000000003 * x3 -0.013873699999999999 * x4 -0.0090358999999999995 * x5 +0.0028350200000000002 * x6 +0.0053461000000000003 * x7 -0.0127247 * x8 -0.016379000000000001 * x9 -0.0045062000000000001 * x10 +0.00024404 * x11 -0.0051390000000000003 * x12 -0.00072318999999999997)**2 +(0.0049036599999999998 * x1 -0.047458500000000001 * x2 -0.0043268999999999998 * x3 -0.0069588999999999996 * x4 +0.0058111999999999999 * x5 -0.047592299999999997 * x6 +0.00586828 * x7 +0.0042915699999999998 * x8 -0.032168799999999997 * x9 -0.0288991 * x10 -0.0034015 * x11 -0.070260600000000006 * x12 +0.01279898)**2 +(0.0043056400000000003 * x1 +0.01299229 * x2 +0.019237899999999999 * x3 +0.018543469999999999 * x4 +0.0069868999999999999 * x5 -0.0070546000000000003 * x6 -0.0188615 * x7 +0.017869860000000001 * x8 +0.014811360000000001 * x9 +0.025401380000000001 * x10 +0.0077279799999999997 * x11 +0.02115788 * x12 +0.040068050000000001)**2 +((-0.0020909000000000001) * x1 +0.0093478699999999994 * x2 +0.0031107499999999998 * x3 -0.0026451999999999999 * x4 -0.011554399999999999 * x5 +0.01344507 * x6 +0.0093589999999999993 * x7 -0.0081542000000000003 * x8 -0.029224900000000002 * x9 +0.0041840999999999996 * x10 -0.0003191 * x11 -0.054288900000000001 * x12 +0.022731370000000001)**2 +(0.01344508 * x1 -0.039470699999999997 * x2 +0.010158800000000001 * x3 -0.0041136000000000002 * x4 +0.0068642099999999999 * x5 -0.013742600000000001 * x6 -0.0105551 * x7 +0.0059376200000000002 * x8 -0.028676799999999999 * x9 +0.0039383600000000001 * x10 +0.015896319999999999 * x11 -0.0285207 * x12 -0.01550674)**2 +((-0.0014687999999999999) * x1 -0.030238600000000001 * x2 -0.017672500000000001 * x3 -0.019867200000000002 * x4 -0.0094319999999999994 * x5 -0.021955599999999999 * x6 -0.014338099999999999 * x7 -0.0106845 * x8 -0.0092613999999999995 * x9 -0.032394100000000002 * x10 -0.021153600000000002 * x11 +0.015654049999999999 * x12 -0.0095552899999999993)**2 +(0.011598300000000001 * x1 -0.022766499999999999 * x2 +0.01294056 * x3 +0.01392878 * x4 +0.02105545 * x5 +0.00705348 * x6 -0.0082625000000000007 * x7 +0.019853840000000001 * x8 -0.00083350000000000004 * x9 -0.0103458 * x10 +0.0098630499999999999 * x11 -0.045812499999999999 * x12 +0.022918029999999999)**2 +(0.016871339999999999 * x1 -0.072665300000000002 * x2 +0.0044991500000000004 * x3 +0.0097718100000000006 * x4 +0.017058400000000001 * x5 -0.090220499999999995 * x6 +0.088753940000000003 * x7 +0.019521690000000001 * x8 -0.062337499999999997 * x9 -0.056207399999999998 * x10 -0.026254599999999999 * x11 -0.063608399999999995 * x12 +0.043459789999999998)**2 +(0.03430532 * x1 +0.04080201 * x2 +0.068008650000000004 * x3 +0.0311986 * x4 +0.020528970000000001 * x5 +0.078881469999999995 * x6 +0.052033669999999997 * x7 +0.024734559999999999 * x8 +0.056292010000000003 * x9 +0.03905103 * x10 +0.04276746 * x11 +0.055001920000000003 * x12 -0.049197930000000001)**2 +(0.019571100000000001 * x1 -0.017438499999999999 * x2 +0.025156009999999999 * x3 +0.032213390000000001 * x4 +0.015586030000000001 * x5 +0.056183469999999999 * x6 -0.041913800000000001 * x7 +0.01671624 * x8 -0.0052960999999999998 * x9 +0.045891809999999998 * x10 +0.02436634 * x11 +0.036046679999999998 * x12 -0.015524720000000001)**2 +(0.01179293 * x1 +0.11707885 * x2 +0.02306449 * x3 +0.016100980000000001 * x4 +0.01086556 * x5 +0.061469549999999998 * x6 -0.0565902 * x7 +0.013515889999999999 * x8 +0.074782189999999998 * x9 +0.02250717 * x10 +0.044958869999999998 * x11 +0.1128135 * x12 -0.030755339999999999)**2 +(0.014609499999999999 * x1 +0.0097768300000000002 * x2 +0.015643029999999999 * x3 +0.011562680000000001 * x4 +0.015188810000000001 * x5 +0.01385571 * x6 -0.046088200000000003 * x7 +0.01487755 * x8 +0.0053007599999999998 * x9 +0.0114906 * x10 +0.0041144700000000003 * x11 -0.0038363 * x12 +0.026229510000000001)**2 +(0.01750579 * x1 +0.041201849999999998 * x2 +0.03084961 * x3 +0.031178560000000001 * x4 +0.020047309999999999 * x5 +0.042884070000000003 * x6 +0.043271440000000001 * x7 +0.026838069999999999 * x8 +0.039775329999999998 * x9 +0.048267200000000003 * x10 +0.02287322 * x11 +0.035653650000000002 * x12 -0.0047936999999999997)**2 +(0.021964819999999999 * x1 +0.045516889999999997 * x2 +0.014364450000000001 * x3 +0.018894749999999998 * x4 +0.01026376 * x5 +0.071491369999999999 * x6 -0.00096889999999999997 * x7 +0.012982779999999999 * x8 +0.046537149999999999 * x9 +0.024700340000000001 * x10 +0.01414485 * x11 +0.053725960000000003 * x12 -0.02016397)**2 +((-0.0148144) * x1 -0.025217400000000001 * x2 -0.0139043 * x3 -0.0084618999999999996 * x4 -0.0163459 * x5 +0.0089235300000000007 * x6 -0.0056483999999999996 * x7 -0.022308000000000001 * x8 -0.030204499999999999 * x9 +0.0052566799999999997 * x10 -0.020834499999999999 * x11 -0.0050188000000000003 * x12 -0.02068853)**2
#sol_portfl3 = np.array([0.149284, 0.0, 0.0, 6.78217e-22, 0.394692, 0.00808081, 6.70259e-25, 0.0, 0.0, 0.0228577, 0.250215, 0.17487])
sol_portfl3 = np.array([0.149284, 0.0, 0.0, 0.0, 0.394692, 0.00808081, 0.0, 0.0, 0.0, 0.0228577, 0.250215, 0.17487])
eq1_portfl3 =  x1 +x2 +x3 +x4 +x5 +x6 +x7 +x8 +x9 +x10 +x11 +x12 - 1
cons_portfl3 = [{'func':eq1_portfl3,'type': 'eq', 'prop': 'convex'}]
bnds_portfl3 = [np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1])]
vars_portfl3 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12]
portfl3 = OptimizationProblem("portfl3", sol_portfl3, symobj_portfl3, cons_portfl3, vars_portfl3, bnds_portfl3)

symobj_portfl6 =  (0.01485068 * x1 +0.064728949999999993 * x2 +0.0021268699999999999 * x4 +0.01658024 * x5 +0.049802829999999999 * x6 +0.057492219999999997 * x7 +0.020563970000000001 * x8 +0.026373480000000001 * x9 +0.058622399999999998 * x10 +0.01305068 * x11 +0.02148485 * x12 -0.011986159999999999)**2 +(0.027144350000000001 * x2 -0.016989500000000001 * x3 -0.015651399999999999 * x4 +0.0023685099999999999 * x5 -0.025704000000000001 * x6 -0.0183082 * x7 +0.00039866000000000001 * x8 -0.0066337000000000002 * x9 -0.028555400000000002 * x10 -0.0216779 * x11 +0.00045682999999999997 * x12 +0.023205699999999999)**2 +(0.0060863899999999997 * x1 -0.030979199999999998 * x2 -0.0125235 * x3 +0.026187019999999998 * x4 +0.033165010000000002 * x5 +0.040649940000000002 * x6 -0.0047691000000000001 * x7 +0.041853509999999997 * x8 -0.0021638999999999999 * x9 +0.096193810000000005 * x10 +0.015477110000000001 * x11 -0.0317326 * x12 -0.035082549999999997)**2 +(0.02048871 * x1 -0.0099322000000000004 * x2 -0.0012011999999999999 * x3 -0.0050875 * x4 -0.015112199999999999 * x5 -0.066835099999999995 * x6 +0.01449517 * x7 -0.014977000000000001 * x8 -0.0108723 * x9 -0.0438425 * x10 +0.01895492 * x11 -0.021780399999999998 * x12 -0.0095064999999999993)**2 +((-0.017431599999999998) * x1 -0.064816899999999997 * x2 -0.025862400000000001 * x3 -0.019920500000000001 * x4 -0.019749699999999999 * x5 -0.038789299999999999 * x6 +0.01805729 * x7 -0.0260699 * x8 -0.039673600000000003 * x9 -0.036252600000000003 * x10 -0.0623984 * x11 -0.040078500000000003 * x12 +0.012278900000000001)**2 +((-0.0137687) * x1 -0.029230300000000001 * x2 -0.031085399999999999 * x3 -0.015649699999999999 * x4 -0.0077774000000000003 * x5 -0.0290312 * x6 -0.027751600000000001 * x7 -0.0138505 * x8 -0.0098904000000000006 * x9 -0.020560599999999998 * x10 -0.049649199999999998 * x11 +0.020238800000000001 * x12 +0.028073799999999999)**2 +((-0.015834000000000001) * x1 +0.029029490000000002 * x2 -0.030522000000000001 * x3 -0.019634800000000001 * x4 -0.0068716999999999997 * x5 -0.017998799999999999 * x6 -0.019224100000000001 * x7 -0.017110799999999999 * x8 -0.0051139999999999996 * x9 -0.024380700000000002 * x10 +0.00134202 * x11 +0.01612974 * x12 +0.0085527999999999993)**2 +(0.016597750000000001 * x1 +0.026802110000000001 * x2 +0.024294710000000001 * x3 +0.023153429999999999 * x4 +0.0161998 * x5 +0.0055495199999999996 * x6 +0.027641889999999999 * x7 +0.013815920000000001 * x8 +0.038343750000000003 * x9 +0.010915909999999999 * x10 +0.02193175 * x11 +0.082783159999999995 * x12 -0.022558100000000001)**2 +(0.01107383 * x1 +0.02188145 * x2 +0.0042064800000000003 * x3 -0.0044365999999999997 * x4 +0.0086688100000000008 * x5 -0.083257200000000003 * x6 +0.0048110799999999997 * x7 +0.01020926 * x8 -0.014421 * x9 +0.00099840999999999992 * x10 -0.035645400000000001 * x11 -0.0263263 * x12 -0.0049519999999999998)**2 +((-0.0043531999999999998) * x1 -0.017691599999999998 * x2 -0.0112316 * x3 +0.00308721 * x4 -0.0102431 * x5 -0.018826499999999999 * x6 -0.016631300000000002 * x7 -0.0103614 * x8 -0.011717099999999999 * x9 -0.0012432999999999999 * x10 -0.040009999999999997 * x11 -0.038737500000000001 * x12 +0.0087326000000000001)**2 +(0.0084767100000000001 * x1 -0.0196384 * x2 +0.0073444000000000001 * x3 -0.0060155 * x4 +0.01153823 * x5 -0.018580300000000001 * x6 -0.0079725999999999998 * x7 +0.0088904299999999995 * x8 -0.0229678 * x9 -0.00074069999999999995 * x10 -0.0062248 * x11 -0.0066382000000000004 * x12 -0.032402159999999999)**2 +(0.0083357599999999994 * x1 -0.0051548999999999996 * x2 +0.01560227 * x3 +0.028537739999999999 * x4 +0.011073110000000001 * x5 +0.027903299999999999 * x6 -0.0362028 * x7 +0.01081704 * x8 +0.0044096600000000001 * x9 +0.029115060000000002 * x10 +0.018714499999999998 * x11 -0.0019992 * x12 -0.034846139999999998)**2 +(0.0090700799999999995 * x1 +0.01001894 * x2 +0.012625279999999999 * x3 +0.01389078 * x4 +0.0049045099999999999 * x5 -0.0082345999999999999 * x6 +0.0055657600000000003 * x7 +0.0052654700000000004 * x8 -0.0035146000000000001 * x9 +0.0057945100000000001 * x10 -0.0014775999999999999 * x11 +0.020367610000000001 * x12 -0.0032126899999999998)**2 +(0.028021440000000002 * x1 +0.06839808 * x2 +0.030099850000000001 * x3 +0.027652590000000001 * x4 +0.01934344 * x5 +0.020265450000000001 * x6 +0.025753419999999999 * x7 +0.01944241 * x8 +0.03257355 * x9 +0.029362470000000002 * x10 +0.0142632 * x11 +0.049613320000000002 * x12 -0.012902)**2 +((-0.00023699999999999999) * x1 +0.11464542 * x2 +0.0011320200000000001 * x3 +0.00825095 * x4 -0.00018239999999999999 * x5 +0.024129250000000001 * x6 +0.047115379999999998 * x7 -0.00017990000000000001 * x8 +0.11882582999999999 * x9 +0.027287530000000001 * x10 +0.029135270000000001 * x11 +0.10977209 * x12 -0.021916270000000002)**2 +(0.016358459999999998 * x1 +0.023911080000000001 * x2 +0.020141340000000001 * x3 +0.023002060000000001 * x4 +0.013687380000000001 * x5 +0.026702179999999999 * x6 +0.042138559999999999 * x7 +0.01340651 * x8 +0.020009800000000001 * x9 +0.018955240000000002 * x10 +0.00045297000000000002 * x11 +0.043999320000000001 * x12 -0.02529557)**2 +(0.011196640000000001 * x1 +0.017309160000000001 * x2 +0.0060962899999999999 * x3 -0.0109541 * x4 -0.0011701999999999999 * x5 +0.0068511400000000004 * x6 +0.0015664800000000001 * x7 -0.0015981000000000001 * x8 +0.0099458099999999994 * x9 +0.024264290000000001 * x10 -0.0110172 * x11 -0.0011856 * x12 -0.016894610000000001)**2 +((-0.0063052000000000004) * x1 +0.039854649999999998 * x2 +0.00041313999999999999 * x3 +0.0075050999999999998 * x4 +0.0063987000000000002 * x5 +0.00436018 * x6 +0.047018570000000003 * x7 +0.0084481999999999995 * x8 +0.047881010000000002 * x9 -0.0079571999999999993 * x10 +0.0061040699999999996 * x11 +0.047590779999999999 * x12 -0.017668779999999999)**2 +(0.0016250100000000001 * x1 -0.0284541 * x2 -0.0022713 * x3 -0.0013018000000000001 * x4 -0.0012535999999999999 * x5 -0.00032880000000000002 * x6 -0.0128839 * x7 -0.00035270000000000001 * x8 -0.023203000000000001 * x9 -0.00079589999999999999 * x10 +0.02745336 * x11 -0.0030387999999999999 * x12 -0.0089833299999999994)**2 +(0.015064889999999999 * x1 +0.03014387 * x2 +0.016280349999999999 * x3 +0.020421459999999999 * x4 +0.01631848 * x5 +0.01644953 * x6 +0.02269933 * x7 +0.01270289 * x8 +0.02328976 * x9 +0.03278387 * x10 +0.01660762 * x11 +0.027691670000000002 * x12 +0.0095881999999999998)**2 +(0.012481920000000001 * x1 -0.0043781000000000002 * x2 +0.01568015 * x3 +0.010361220000000001 * x4 +0.0085575700000000005 * x5 +0.018319519999999999 * x6 +0.0026819600000000002 * x7 +0.0074912900000000003 * x8 -0.0285306 * x9 -0.0042126000000000004 * x10 +0.019748780000000001 * x11 -0.0027146000000000002 * x12 -0.010113230000000001)**2 +(0.0081936400000000003 * x1 +0.043529079999999998 * x2 +0.0091559199999999997 * x3 +0.00786683 * x4 +0.00629811 * x5 +0.017163560000000001 * x6 +0.02979155 * x7 +0.0071762099999999997 * x8 +0.01515152 * x9 +0.016087710000000002 * x10 +0.0011391999999999999 * x11 +0.022078839999999999 * x12 -0.016087629999999999)**2 +(0.0046972899999999998 * x1 -0.031311600000000002 * x2 -0.00066220000000000005 * x3 -0.0013240999999999999 * x4 +0.0075625900000000001 * x5 -0.0061246 * x6 -0.015136500000000001 * x7 +0.0042922100000000003 * x8 -0.018738899999999999 * x9 -0.0134287 * x10 -0.0152905 * x11 -0.0142039 * x12 +0.0054741)**2 +(0.0141744 * x1 -0.060462500000000002 * x2 +0.017229950000000001 * x3 +0.022679689999999999 * x4 +0.017082219999999999 * x5 +0.010249640000000001 * x6 +0.00081848000000000001 * x7 +0.019317890000000001 * x8 -0.0351782 * x9 +0.012244410000000001 * x10 +0.00137224 * x11 -0.063788200000000003 * x12 +0.015750699999999999)**2 +(0.021147369999999999 * x1 +0.037275820000000001 * x2 +0.017003259999999999 * x3 +0.01487547 * x4 +0.018915939999999999 * x5 +0.026266649999999999 * x6 +0.060699679999999999 * x7 +0.0208805 * x8 +0.043822489999999999 * x9 +0.027715799999999999 * x10 +0.040461589999999999 * x11 +0.015817879999999999 * x12 +0.0107545)**2 +(0.0056610499999999999 * x1 +0.01361736 * x2 +0.0063416799999999997 * x3 +0.0053116400000000003 * x4 +0.0052447600000000002 * x5 +0.0095827299999999994 * x6 -0.0102801 * x7 +0.0122392 * x8 +0.01976048 * x9 +0.011541539999999999 * x10 +0.01122972 * x11 +0.027618500000000001 * x12 -0.037310839999999998)**2 +((-0.0045602999999999998) * x1 -0.013824599999999999 * x2 -0.0091024000000000001 * x3 -0.0015382 * x4 -0.0021532000000000001 * x5 -0.001622 * x6 -0.0141954 * x7 -0.0060860999999999997 * x8 +6.5199999999999999e-05 * x9 -5.6499999999999998e-05 * x10 -0.030093200000000001 * x11 +0.039162490000000001 * x12 -0.012408819999999999)**2 +(0.01052255 * x1 +0.0056525899999999999 * x2 +0.0141967 * x3 +0.012325010000000001 * x4 +0.0043157100000000004 * x5 +0.015945600000000001 * x6 -0.0088681999999999997 * x7 +0.012328540000000001 * x8 +0.0097860099999999995 * x9 +0.017398179999999999 * x10 +0.071100430000000006 * x11 +0.015961380000000001 * x12 -0.01225673)**2 +(0.0070128200000000003 * x1 -0.0043280000000000002 * x2 +0.018051680000000001 * x3 +0.021637 * x4 +0.0098338999999999996 * x5 +0.0052712599999999998 * x6 +0.02879164 * x7 +0.0070166899999999999 * x8 -0.0084635999999999999 * x9 +0.01421354 * x10 +0.024018479999999998 * x11 -0.0065459999999999997 * x12 +0.0025362000000000002)**2 +(0.0049943699999999997 * x1 -0.024613300000000001 * x2 -0.0075903000000000003 * x3 -0.0068652000000000001 * x4 +0.0019639900000000001 * x5 -0.016673500000000001 * x6 -0.021699800000000002 * x7 +0.0044850200000000002 * x8 -0.037401400000000001 * x9 -0.024196599999999999 * x10 -0.016109200000000001 * x11 -0.038412700000000001 * x12 +0.010334599999999999)**2 +(0.0052495299999999996 * x1 -0.051332599999999999 * x2 -0.0010204000000000001 * x3 -0.0011925 * x4 +0.014177459999999999 * x5 +0.0083020699999999999 * x6 -0.0087868000000000009 * x7 +0.01235355 * x8 -0.041499099999999997 * x9 -0.0282975 * x10 -0.026576499999999999 * x11 -0.12110600000000001 * x12 +0.013320800000000001)**2 +(0.027642389999999999 * x1 -0.057852199999999999 * x2 +0.0119382 * x3 +0.036083839999999999 * x4 +0.027717519999999999 * x5 -0.1286899 * x6 +0.049118050000000003 * x7 +0.037159499999999998 * x8 +0.02509598 * x9 -0.083264000000000005 * x10 -0.060587299999999997 * x11 +0.018761179999999999 * x12 -0.0067073699999999998)**2 +(0.032861300000000003 * x1 +0.11776573 * x2 +0.047063279999999999 * x3 +0.03060179 * x4 +0.01993433 * x5 +0.068528629999999993 * x6 +0.066390759999999993 * x7 +0.022468499999999999 * x8 +0.067272349999999995 * x9 +0.03474878 * x10 +0.0085651500000000005 * x11 +0.065503169999999999 * x12 +0.0440761)**2 +(0.01121753 * x1 -0.029441599999999998 * x2 -0.0065674000000000001 * x3 -0.00012420000000000001 * x4 +0.0077412399999999999 * x5 -0.0098919000000000003 * x6 +0.03177555 * x7 +0.00853749 * x8 +0.033855349999999999 * x9 -0.0091473000000000006 * x10 -0.0087101000000000001 * x11 +0.01441183 * x12 -0.053703870000000001)**2 +(0.019980540000000001 * x1 +0.048465830000000001 * x2 +0.0053372100000000002 * x3 +0.012611829999999999 * x4 +0.01201704 * x5 -0.032684900000000003 * x6 +0.020061120000000002 * x7 +0.021641520000000001 * x8 +0.031803900000000003 * x9 +0.029212769999999999 * x10 +0.036757709999999999 * x11 +0.041887290000000001 * x12 +0.0092435)**2 +(0.01507346 * x1 +0.0021061999999999999 * x2 +0.0316723 * x3 +0.018221979999999999 * x4 +0.015256280000000001 * x5 +0.016826270000000001 * x6 +0.0097564699999999997 * x7 +0.014338210000000001 * x8 +0.018031189999999999 * x9 +0.033298519999999998 * x10 -0.0057913000000000001 * x11 +0.0032202899999999998 * x12 -0.011897629999999999)**2 +(0.0054511300000000002 * x1 +0.071128319999999995 * x2 -0.0015788 * x3 +0.0208484 * x4 +0.027019020000000001 * x5 -0.027579699999999999 * x6 +0.10423006999999999 * x7 +0.033953690000000002 * x8 +0.04092867 * x9 +0.00214044 * x10 +0.00028415 * x11 +0.083960279999999998 * x12 -0.030451700000000002)**2 +(0.01265034 * x1 -0.026179899999999999 * x2 +0.042345090000000002 * x3 +0.02921733 * x4 +0.0064148800000000004 * x5 -0.026079100000000001 * x6 -0.010196999999999999 * x7 +0.00054960000000000002 * x8 -0.0186249 * x9 +0.026994959999999998 * x10 +0.045522340000000001 * x11 +0.0056450099999999998 * x12 -0.026514530000000001)**2 +(0.00086154000000000005 * x1 -0.021740200000000001 * x2 +0.02123953 * x3 +0.01559901 * x4 -0.0007161 * x5 +0.080261379999999993 * x6 +0.015174719999999999 * x7 +0.0020598700000000001 * x8 -0.0076147999999999997 * x9 -0.021606 * x10 +0.011683199999999999 * x11 +0.0035888500000000002 * x12 +0.0029588000000000001)**2 +(0.01629365 * x1 +0.01046127 * x2 +0.02167813 * x3 +0.00265402 * x4 +0.00121838 * x5 +0.045696630000000002 * x6 +0.040661000000000003 * x7 +0.00356311 * x8 -0.0016527 * x9 -0.031235200000000001 * x10 -0.0024169999999999999 * x11 -0.041765999999999998 * x12 -0.021414820000000001)**2 +(0.026740880000000002 * x1 +0.082180020000000006 * x2 +0.029296139999999998 * x3 +0.03300293 * x4 +0.01281317 * x5 +0.063443159999999998 * x6 +0.092047180000000006 * x7 +0.022395189999999999 * x8 +0.093177250000000003 * x9 +0.071128179999999999 * x10 +0.062188720000000003 * x11 +0.073824219999999996 * x12 -0.026226929999999999)**2 +((-0.0028283000000000002) * x1 +0.064042829999999995 * x2 -0.0015172 * x3 +0.01390252 * x4 +0.035691569999999999 * x5 +0.029799559999999999 * x6 +0.075358999999999995 * x7 +0.027581140000000001 * x8 +0.049702540000000003 * x9 -0.041709299999999998 * x10 +0.064440499999999998 * x11 +0.10782392 * x12 -0.038181960000000001)**2 +((-0.0120404) * x1 -0.030960000000000001 * x2 +0.038896260000000002 * x3 +0.02305596 * x4 +0.02476882 * x5 +0.010096549999999999 * x6 -0.0071032999999999999 * x7 +0.025450690000000002 * x8 -0.0077451000000000004 * x9 +0.0099669600000000004 * x10 -0.0056861000000000004 * x11 -0.055244000000000001 * x12 +0.012888)**2 +(0.0242554 * x1 +0.068909059999999994 * x2 +0.020533249999999999 * x3 +0.0067609100000000002 * x4 +0.01933613 * x5 +0.015840070000000001 * x6 +0.02237111 * x7 +0.019465900000000001 * x8 +0.033824220000000002 * x9 +0.043496920000000001 * x10 +0.035726920000000002 * x11 +0.085996920000000004 * x12 -0.031955570000000003)**2 +(0.027130020000000001 * x1 +0.024704670000000001 * x2 +0.012577670000000001 * x3 +0.024953980000000001 * x4 -0.0032742000000000001 * x5 +0.044598100000000002 * x6 -0.015054400000000001 * x7 +0.0041192099999999999 * x8 -0.00030529999999999999 * x9 +0.0041928699999999996 * x10 +0.02731691 * x11 +0.039274919999999998 * x12 -0.0044315200000000004)**2 +(0.00382081 * x1 +0.010704969999999999 * x2 +0.0084129300000000008 * x3 -0.0082317999999999992 * x4 -0.0117874 * x5 +0.0096530399999999999 * x6 -0.018119099999999999 * x7 -0.0118846 * x8 +0.0046322200000000003 * x9 +0.026229860000000001 * x10 +0.0039151699999999999 * x11 +0.055192739999999997 * x12 -0.033020819999999999)**2 +((-0.0057825999999999997) * x1 -0.086781800000000006 * x2 -0.0102267 * x3 -0.012215699999999999 * x4 +0.00079792999999999997 * x5 +0.042514490000000002 * x6 -0.0015567999999999999 * x7 -0.0097792999999999995 * x8 -0.040046400000000003 * x9 -0.0030850000000000001 * x10 -0.053090699999999998 * x11 -0.066677100000000003 * x12 +0.031822099999999999)**2 +((-0.0075103000000000001) * x1 -0.0118189 * x2 -0.0044790000000000003 * x3 -0.013873699999999999 * x4 -0.0090358999999999995 * x5 +0.0028350200000000002 * x6 +0.0053461000000000003 * x7 -0.0127247 * x8 -0.016379000000000001 * x9 -0.0045062000000000001 * x10 +0.00024404 * x11 -0.0051390000000000003 * x12 -0.0017445900000000001)**2 +(0.0049036599999999998 * x1 -0.047458500000000001 * x2 -0.0043268999999999998 * x3 -0.0069588999999999996 * x4 +0.0058111999999999999 * x5 -0.047592299999999997 * x6 +0.00586828 * x7 +0.0042915699999999998 * x8 -0.032168799999999997 * x9 -0.0288991 * x10 -0.0034015 * x11 -0.070260600000000006 * x12 +0.025802700000000001)**2 +(0.0043056400000000003 * x1 +0.01299229 * x2 +0.019237899999999999 * x3 +0.018543469999999999 * x4 +0.0069868999999999999 * x5 -0.0070546000000000003 * x6 -0.0188615 * x7 +0.017869860000000001 * x8 +0.014811360000000001 * x9 +0.025401380000000001 * x10 +0.0077279799999999997 * x11 +0.02115788 * x12 +0.027957599999999999)**2 +((-0.0020909000000000001) * x1 +0.0093478699999999994 * x2 +0.0031107499999999998 * x3 -0.0026451999999999999 * x4 -0.011554399999999999 * x5 +0.01344507 * x6 +0.0093589999999999993 * x7 -0.0081542000000000003 * x8 -0.029224900000000002 * x9 +0.0041840999999999996 * x10 -0.0003191 * x11 -0.054288900000000001 * x12 +0.0051912)**2 +(0.01344508 * x1 -0.039470699999999997 * x2 +0.010158800000000001 * x3 -0.0041136000000000002 * x4 +0.0068642099999999999 * x5 -0.013742600000000001 * x6 -0.0105551 * x7 +0.0059376200000000002 * x8 -0.028676799999999999 * x9 +0.0039383600000000001 * x10 +0.015896319999999999 * x11 -0.0285207 * x12 -0.01035991)**2 +((-0.0014687999999999999) * x1 -0.030238600000000001 * x2 -0.017672500000000001 * x3 -0.019867200000000002 * x4 -0.0094319999999999994 * x5 -0.021955599999999999 * x6 -0.014338099999999999 * x7 -0.0106845 * x8 -0.0092613999999999995 * x9 -0.032394100000000002 * x10 -0.021153600000000002 * x11 +0.015654049999999999 * x12 +0.0040109000000000004)**2 +(0.011598300000000001 * x1 -0.022766499999999999 * x2 +0.01294056 * x3 +0.01392878 * x4 +0.02105545 * x5 +0.00705348 * x6 -0.0082625000000000007 * x7 +0.019853840000000001 * x8 -0.00083350000000000004 * x9 -0.0103458 * x10 +0.0098630499999999999 * x11 -0.045812499999999999 * x12 +0.021105200000000001)**2 +(0.016871339999999999 * x1 -0.072665300000000002 * x2 +0.0044991500000000004 * x3 +0.0097718100000000006 * x4 +0.017058400000000001 * x5 -0.090220499999999995 * x6 +0.088753940000000003 * x7 +0.019521690000000001 * x8 -0.062337499999999997 * x9 -0.056207399999999998 * x10 -0.026254599999999999 * x11 -0.063608399999999995 * x12 +0.057615)**2 +(0.03430532 * x1 +0.04080201 * x2 +0.068008650000000004 * x3 +0.0311986 * x4 +0.020528970000000001 * x5 +0.078881469999999995 * x6 +0.052033669999999997 * x7 +0.024734559999999999 * x8 +0.056292010000000003 * x9 +0.03905103 * x10 +0.04276746 * x11 +0.055001920000000003 * x12 -0.065023849999999994)**2 +(0.019571100000000001 * x1 -0.017438499999999999 * x2 +0.025156009999999999 * x3 +0.032213390000000001 * x4 +0.015586030000000001 * x5 +0.056183469999999999 * x6 -0.041913800000000001 * x7 +0.01671624 * x8 -0.0052960999999999998 * x9 +0.045891809999999998 * x10 +0.02436634 * x11 +0.036046679999999998 * x12 -0.01490852)**2 +(0.01179293 * x1 +0.11707885 * x2 +0.02306449 * x3 +0.016100980000000001 * x4 +0.01086556 * x5 +0.061469549999999998 * x6 -0.0565902 * x7 +0.013515889999999999 * x8 +0.074782189999999998 * x9 +0.02250717 * x10 +0.044958869999999998 * x11 +0.1128135 * x12 -0.04636842)**2 +(0.014609499999999999 * x1 +0.0097768300000000002 * x2 +0.015643029999999999 * x3 +0.011562680000000001 * x4 +0.015188810000000001 * x5 +0.01385571 * x6 -0.046088200000000003 * x7 +0.01487755 * x8 +0.0053007599999999998 * x9 +0.0114906 * x10 +0.0041144700000000003 * x11 -0.0038363 * x12 +0.025959699999999999)**2 +(0.01750579 * x1 +0.041201849999999998 * x2 +0.03084961 * x3 +0.031178560000000001 * x4 +0.020047309999999999 * x5 +0.042884070000000003 * x6 +0.043271440000000001 * x7 +0.026838069999999999 * x8 +0.039775329999999998 * x9 +0.048267200000000003 * x10 +0.02287322 * x11 +0.035653650000000002 * x12 -0.0035958499999999998)**2 +(0.021964819999999999 * x1 +0.045516889999999997 * x2 +0.014364450000000001 * x3 +0.018894749999999998 * x4 +0.01026376 * x5 +0.071491369999999999 * x6 -0.00096889999999999997 * x7 +0.012982779999999999 * x8 +0.046537149999999999 * x9 +0.024700340000000001 * x10 +0.01414485 * x11 +0.053725960000000003 * x12 -0.032043450000000001)**2 +((-0.0148144) * x1 -0.025217400000000001 * x2 -0.0139043 * x3 -0.0084618999999999996 * x4 -0.0163459 * x5 +0.0089235300000000007 * x6 -0.0056483999999999996 * x7 -0.022308000000000001 * x8 -0.030204499999999999 * x9 +0.0052566799999999997 * x10 -0.020834499999999999 * x11 -0.0050188000000000003 * x12 -0.00328904)**2
#sol_portfl6 = np.array([0.305019, 9.83047e-21, 3.53082e-21, 2.35611e-22, 0.265273, 0.0477643, 6.7188e-22, 1.03456e-22, 2.94426e-21, 0.0640939, 0.136266, 0.181583])
sol_portfl6 = np.array([0.305019, 0.0, 0.0, 0.0, 0.265273, 0.0477643, 0.0, 0.0, 0.0, 0.0640939, 0.136266, 0.181583])
eq1_portfl6 =  x1 +x2 +x3 +x4 +x5 +x6 +x7 +x8 +x9 +x10 +x11 +x12 - 1
cons_portfl6 = [{'func':eq1_portfl6,'type': 'eq', 'prop': 'convex'}]
bnds_portfl6 = [np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1])]
vars_portfl6 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12]
portfl6 = OptimizationProblem("portfl6", sol_portfl6, symobj_portfl6, cons_portfl6, vars_portfl6, bnds_portfl6)

symobj_lotschd =  (1.502 * x1)**2 + (1.1259999999999999 * x2)**2 + (0.81499999999999995 * x3)**2 + (1.268 * x4)**2 + (1.502 * x5)**2 + (0.73999999999999999 * x6)**2
sol_lotschd = np.array([6.1111111111, 23.4294181898, 27.4147492983, 22.2268318102, 8.3950617284, 17.3928571429, 0.0, 0.0, 21.1299707194, 0.0, 0.0, 0.0])
eq1_lotschd =  x1 +x2 +x3 +x4 +x5 +x6 +x7 +x8 +x9 +x10 +x11 +x12 - 126.09999999999999
eq2_lotschd =  -x1 -x2 -x3 -x4 -x5 +7.4000000000000004 * x6 -x7 -x8 -x9 -x10 -x11 -x12 - 20
eq3_lotschd =  -x1 +1.8 * x5 -x7 -x11 - 9
eq4_lotschd =  -x1 +2.2000000000000002 * x4 -x5 -x6 -x7 -2 * x10 -x11 -x12 - 17
eq5_lotschd =  -x1 -x2 +5.0999999999999996 * x3 -x4 -x5 -x6 -x7 -x8 -2 * x9 -x10 -x11 -x12 - 20
eq6_lotschd =  2.2000000000000002 * x2 -x3 -2 * x8 -x9 - 3
eq7_lotschd =  1.8 * x1 -x7 - 11
cons_lotschd = [{'func':eq1_lotschd,'type': 'eq', 'prop': 'convex'},{'func':eq2_lotschd,'type': 'eq', 'prop': 'convex'},{'func':eq3_lotschd,'type': 'eq', 'prop': 'convex'},{'func':eq4_lotschd,'type': 'eq', 'prop': 'convex'},{'func':eq5_lotschd,'type': 'eq', 'prop': 'convex'},{'func':eq6_lotschd,'type': 'eq', 'prop': 'convex'},{'func':eq7_lotschd,'type': 'eq', 'prop': 'convex'}]
bnds_lotschd = [np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000])]
vars_lotschd = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12]
lotschd = OptimizationProblem("lotschd", sol_lotschd, symobj_lotschd, cons_lotschd, vars_lotschd, bnds_lotschd)

symobj_ex9_1_1 =  (-3) * x11 + 2 * x12 - x13
sol_ex9_1_1 = sol_ex9_1_1 = np.array([14,0,0,4,9.68876e-18,0,1.50071e-19,4.56675e-16,1.4604e-16,1,4,2,5])
eq1_ex9_1_1 =  2 * x7 - 3 * x8 - 0
eq2_ex9_1_1 =  x6 + 3 * x7 + x8 - x9 + x10 - 1
eq3_ex9_1_1 =  x5 + x11 - 4
eq4_ex9_1_1 =  x4 - x11 - 0
eq5_ex9_1_1 =  x3 + x11 - 3 * x12 - 2 * x13 + 12
eq6_ex9_1_1 =  x2 + 3 * x11 - 2 * x12 + 8 * x13 - 48
eq7_ex9_1_1 =  x1 + x11 + 4 * x12 - 2 * x13 - 16
eq8_ex9_1_1 =  x1 * x6 - 0
eq9_ex9_1_1 =  x2 * x7 - 0
eq10_ex9_1_1 =  x3 * x8 - 0
eq11_ex9_1_1 =  x4 * x9 - 0
eq12_ex9_1_1 =  x5 * x10 - 0
cons_ex9_1_1 = [{'func':eq1_ex9_1_1,'type': 'eq', 'prop': 'convex'},{'func':eq2_ex9_1_1,'type': 'eq', 'prop': 'convex'},{'func':eq3_ex9_1_1,'type': 'eq', 'prop': 'convex'},{'func':eq4_ex9_1_1,'type': 'eq', 'prop': 'convex'},{'func':eq5_ex9_1_1,'type': 'eq', 'prop': 'convex'},{'func':eq6_ex9_1_1,'type': 'eq', 'prop': 'convex'},{'func':eq7_ex9_1_1,'type': 'eq', 'prop': 'convex'},{'func':eq8_ex9_1_1,'type': 'eq'},{'func':eq9_ex9_1_1,'type': 'eq'},{'func':eq10_ex9_1_1,'type': 'eq'},{'func':eq11_ex9_1_1,'type': 'eq'},{'func':eq12_ex9_1_1,'type': 'eq'}]
bnds_ex9_1_1 = [np.array([0,10000]), np.array([0,10000]), np.array([0,10000]), np.array([0,10000]), np.array([0,10000]), np.array([0,10000]), np.array([0,10000]), np.array([0,10000]), np.array([0,10000]), np.array([0,10000]), np.array([-10000,10000]), np.array([-10000,10000]), np.array([0,10000])]
vars_ex9_1_1 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13]
ex9_1_1 = OptimizationProblem("ex9_1_1", sol_ex9_1_1, symobj_ex9_1_1, cons_ex9_1_1, vars_ex9_1_1, bnds_ex9_1_1)

symobj_ex9_1_5 =  -x11 +10 * x12 -x13
#sol_ex9_1_5 = np.array([1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 6.15109e-16, 1.0, 0.0, 7.1155e-18, 0.0, 0.0, 1.0])
sol_ex9_1_5 = np.array([1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0])
eq1_ex9_1_5 =  x7 +x8 -x10 - 1
eq2_ex9_1_5 =  x6 +x8 -x9 - 1
eq3_ex9_1_5 =  x5 -x13 - 0
eq4_ex9_1_5 =  x4 -x12 - 0
eq5_ex9_1_5 =  x3 +x12 +x13 - 1
eq6_ex9_1_5 =  x2 +x11 +x13 - 1
eq7_ex9_1_5 =  x1 +x11 +x12 - 1
eq8_ex9_1_5 =  x1 * x6 - 0
eq9_ex9_1_5 =  x2 * x7 - 0
eq10_ex9_1_5 =  x3 * x8 - 0
eq11_ex9_1_5 =  x5 * x10 - 0
eq12_ex9_1_5 =  x4 * x9 - 0
cons_ex9_1_5 = [{'func':eq1_ex9_1_5,'type': 'eq', 'prop': 'convex'},{'func':eq2_ex9_1_5,'type': 'eq', 'prop': 'convex'},{'func':eq3_ex9_1_5,'type': 'eq', 'prop': 'convex'},{'func':eq4_ex9_1_5,'type': 'eq', 'prop': 'convex'},{'func':eq5_ex9_1_5,'type': 'eq', 'prop': 'convex'},{'func':eq6_ex9_1_5,'type': 'eq', 'prop': 'convex'},{'func':eq7_ex9_1_5,'type': 'eq', 'prop': 'convex'},{'func':eq8_ex9_1_5,'type': 'eq', 'prop': 'unknown'},{'func':eq9_ex9_1_5,'type': 'eq', 'prop': 'unknown'},{'func':eq10_ex9_1_5,'type': 'eq', 'prop': 'unknown'},{'func':eq11_ex9_1_5,'type': 'eq', 'prop': 'unknown'},{'func':eq12_ex9_1_5,'type': 'eq', 'prop': 'unknown'}]
bnds_ex9_1_5 = [np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000])]
vars_ex9_1_5 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13]
ex9_1_5 = OptimizationProblem("ex9_1_5", sol_ex9_1_5, symobj_ex9_1_5, cons_ex9_1_5, vars_ex9_1_5, bnds_ex9_1_5)

symobj_fredimage =  0
sol_fredimage = np.array([1.0, 0.8465, 0.8465, 0.8465, 0.8465, 0.0, 0.520349, 0.338601, -0.209896, 0.338601, 0.0, -0.112582, 0.410837, 0.489266, 0.410837, 0.307])
eq1_fredimage =  x2**2 + x7**2 + x12**2 - 1
eq2_fredimage =  x3**2 + x8**2 + x13**2 - 1
eq3_fredimage =  0.5 * x16 +x2 * x5 +x7 * x10 +x12 * x15 - 1
eq4_fredimage =  x4**2 + x9**2 + x14**2 - 1
eq5_fredimage =  0.5 * x16 +x4 * x5 +x9 * x10 +x14 * x15 - 1
eq6_fredimage =  x5**2 + x10**2 + x15**2 - 1
eq7_fredimage =  0.5 * x16 +x3 * x4 +x8 * x9 +x13 * x14 - 1
eq8_fredimage =  0.5 * x16 +x1 * x2 +x6 * x7 +x11 * x12 - 1
eq9_fredimage =  0.5 * x16 +x2 * x3 +x7 * x8 +x12 * x13 - 1
eq10_fredimage =  0.5 * x16 +x1 * x5 +x6 * x10 +x11 * x15 - 1
eq11_fredimage =  0.5 * x16 +x1 * x3 +x6 * x8 +x11 * x13 - 1
eq12_fredimage =  0.5 * x16 +x1 * x4 +x6 * x9 +x11 * x14 - 1
cons_fredimage = [{'func':eq1_fredimage,'type': 'eq', 'prop': 'unknown'},{'func':eq2_fredimage,'type': 'eq', 'prop': 'unknown'},{'func':eq3_fredimage,'type': 'eq', 'prop': 'unknown'},{'func':eq4_fredimage,'type': 'eq', 'prop': 'unknown'},{'func':eq5_fredimage,'type': 'eq', 'prop': 'unknown'},{'func':eq6_fredimage,'type': 'eq', 'prop': 'unknown'},{'func':eq7_fredimage,'type': 'eq', 'prop': 'unknown'},{'func':eq8_fredimage,'type': 'eq', 'prop': 'unknown'},{'func':eq9_fredimage,'type': 'eq', 'prop': 'unknown'},{'func':eq10_fredimage,'type': 'eq', 'prop': 'unknown'},{'func':eq11_fredimage,'type': 'eq', 'prop': 'unknown'},{'func':eq12_fredimage,'type': 'eq', 'prop': 'unknown'}]
bnds_fredimage = [np.array([1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([0, 0]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([0, 0]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([0.30499999999999999, 0.307])]
vars_fredimage = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16]
fredimage = OptimizationProblem("fredimage", sol_fredimage, symobj_fredimage, cons_fredimage, vars_fredimage, bnds_fredimage)

symobj_ex2_1_3 =  5 * x1 +5 * x2 +5 * x3 +5 * x4 -x5 -x6 -x7 -x8 -x9 -x10 -x11 -x12 -x13 -5 * x1**2 -5 * x2**2 -5 * x3**2 -5 * x4**2
sol_ex2_1_3 = np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 3.0, 3.0, 3.0, 1.0])
ineq1_ex2_1_3 = (-2) * x8 -x9 +x12 - 0
ineq2_ex2_1_3 = (-2) * x6 -x7 +x11 - 0
ineq3_ex2_1_3 = (-2) * x4 -x5 +x10 - 0
ineq4_ex2_1_3 = (-8) * x3 +x12 - 0
ineq5_ex2_1_3 = (-8) * x2 +x11 - 0
ineq6_ex2_1_3 = (-8) * x1 +x10 - 0
ineq7_ex2_1_3 = 2 * x2 +2 * x3 +x11 +x12 - 10
ineq8_ex2_1_3 = 2 * x1 +2 * x3 +x10 +x12 - 10
ineq9_ex2_1_3 = 2 * x1 +2 * x2 +x10 +x11 - 10
cons_ex2_1_3 = [{'func':ineq1_ex2_1_3,'type': 'ineq', 'prop': 'convex'},{'func':ineq2_ex2_1_3,'type': 'ineq', 'prop': 'convex'},{'func':ineq3_ex2_1_3,'type': 'ineq', 'prop': 'convex'},{'func':ineq4_ex2_1_3,'type': 'ineq', 'prop': 'convex'},{'func':ineq5_ex2_1_3,'type': 'ineq', 'prop': 'convex'},{'func':ineq6_ex2_1_3,'type': 'ineq', 'prop': 'convex'},{'func':ineq7_ex2_1_3,'type': 'ineq', 'prop': 'convex'},{'func':ineq8_ex2_1_3,'type': 'ineq', 'prop': 'convex'},{'func':ineq9_ex2_1_3,'type': 'ineq', 'prop': 'convex'}]
bnds_ex2_1_3 = [np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 1]),]
vars_ex2_1_3 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13]
ex2_1_3 = OptimizationProblem("ex2_1_3", sol_ex2_1_3, symobj_ex2_1_3, cons_ex2_1_3, vars_ex2_1_3, bnds_ex2_1_3)

symobj_ex9_1_10 =  (-2) * x11 +x12 +0.5 * x13
#sol_ex9_1_10 = np.array([0.0, 0.0, 1.5, 3.68214e-17, 0.161733, 4.0, 0.0, 0.0, 5.0, 2.35222e-06, 2.0, 0.0, 1.5, 9.23326e-17])
sol_ex9_1_10 = np.array([0.0, 0.0, 1.5, 0.0, 0.161733, 4.0, 0.0, 0.0, 5.0, 0.0, 2.0, 0.0, 1.5, 0.0])
eq1_ex9_1_10 =  x6 +x7 -x9 - -1
eq2_ex9_1_10 =  x6 -x8 - 4
eq3_ex9_1_10 =  x4 -x14 - 0
eq4_ex9_1_10 =  x3 -x13 - 0
eq5_ex9_1_10 =  x2 +x11 -3 * x12 +x14 - 2
eq6_ex9_1_10 =  x1 -2 * x11 +x13 -x14 - -2.5
eq7_ex9_1_10 =  x1 * x6 - 0
eq8_ex9_1_10 =  x2 * x7 - 0
eq9_ex9_1_10 =  x3 * x8 - 0
eq10_ex9_1_10 =  x5 * x10 - 0
eq11_ex9_1_10 =  x4 * x9 - 0
ineq1_ex9_1_10 = x11 +x12 - 2
cons_ex9_1_10 = [{'func':eq1_ex9_1_10,'type': 'eq', 'prop': 'convex'},{'func':eq2_ex9_1_10,'type': 'eq', 'prop': 'convex'},{'func':eq3_ex9_1_10,'type': 'eq', 'prop': 'convex'},{'func':eq4_ex9_1_10,'type': 'eq', 'prop': 'convex'},{'func':eq5_ex9_1_10,'type': 'eq', 'prop': 'convex'},{'func':eq6_ex9_1_10,'type': 'eq', 'prop': 'convex'},{'func':eq7_ex9_1_10,'type': 'eq', 'prop': 'unknown'},{'func':eq8_ex9_1_10,'type': 'eq', 'prop': 'unknown'},{'func':eq9_ex9_1_10,'type': 'eq', 'prop': 'unknown'},{'func':eq10_ex9_1_10,'type': 'eq', 'prop': 'unknown'},{'func':eq11_ex9_1_10,'type': 'eq', 'prop': 'unknown'},{'func':ineq1_ex9_1_10,'type': 'ineq', 'prop': 'unknown'}]
bnds_ex9_1_10 = [np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000])]
vars_ex9_1_10 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14]
ex9_1_10 = OptimizationProblem("ex9_1_10", sol_ex9_1_10, symobj_ex9_1_10, cons_ex9_1_10, vars_ex9_1_10, bnds_ex9_1_10)

symobj_ex9_1_8 =  (-2) * x11 +x12 +0.5 * x13
#sol_ex9_1_8 = np.array([0.0, 0.0, 1.5, 3.68214e-17, 0.161733, 4.0, 0.0, 0.0, 5.0, 2.35222e-06, 2.0, 0.0, 1.5, 9.23326e-17])
sol_ex9_1_8 = np.array([0.0, 0.0, 1.5, 0.0, 0.161733, 4.0, 0.0, 0.0, 5.0, 0.0, 2.0, 0.0, 1.5, 0.0])
eq1_ex9_1_8 =  x6 +x7 -x9 - -1
eq2_ex9_1_8 =  x6 -x8 - 4
eq3_ex9_1_8 =  x4 -x14 - 0
eq4_ex9_1_8 =  x3 -x13 - 0
eq5_ex9_1_8 =  x2 +x11 -3 * x12 +x14 - 2
eq6_ex9_1_8 =  x1 -2 * x11 +x13 -x14 - -2.5
eq7_ex9_1_8 =  x1 * x6 - 0
eq8_ex9_1_8 =  x2 * x7 - 0
eq9_ex9_1_8 =  x3 * x8 - 0
eq10_ex9_1_8 =  x5 * x10 - 0
eq11_ex9_1_8 =  x4 * x9 - 0
ineq1_ex9_1_8 = x11 +x12 - 2
cons_ex9_1_8 = [{'func':eq1_ex9_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq2_ex9_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq3_ex9_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq4_ex9_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq5_ex9_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq6_ex9_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq7_ex9_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq8_ex9_1_8,'type': 'eq', 'prop': 'unknown'},{'func':eq9_ex9_1_8,'type': 'eq', 'prop': 'unknown'},{'func':eq10_ex9_1_8,'type': 'eq', 'prop': 'unknown'},{'func':eq11_ex9_1_8,'type': 'eq', 'prop': 'unknown'},{'func':ineq1_ex9_1_8,'type': 'ineq', 'prop': 'unknown'}]
bnds_ex9_1_8 = [np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000])]
vars_ex9_1_8 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14]
ex9_1_8 = OptimizationProblem("ex9_1_8", sol_ex9_1_8, symobj_ex9_1_8, cons_ex9_1_8, vars_ex9_1_8, bnds_ex9_1_8)

symobj_hs118 =  2.2999999999999998 * x1 +1.7 * x2 +2.2000000000000002 * x3 +2.2999999999999998 * x4 +1.7 * x5 +2.2000000000000002 * x6 +2.2999999999999998 * x7 +1.7 * x8 +2.2000000000000002 * x9 +2.2999999999999998 * x10 +1.7 * x11 +2.2000000000000002 * x12 +2.2999999999999998 * x13 +1.7 * x14 +2.2000000000000002 * x15 +0.0001 * (x1)**2 +0.0001 * (x2)**2 +0.00014999999999999999 * (x3)**2 +0.0001 * (x4)**2 +0.0001 * (x5)**2 +0.00014999999999999999 * (x6)**2 +0.0001 * (x7)**2 +0.0001 * (x8)**2 +0.00014999999999999999 * (x9)**2 +0.0001 * (x10)**2 +0.0001 * (x11)**2 +0.00014999999999999999 * (x12)**2 +0.0001 * (x13)**2 +0.0001 * (x14)**2 +0.00014999999999999999 * (x15)**2
sol_hs118 = np.array([8.0, 49.0, 3.0, 1.0, 56.0, 0.0, 1.0, 63.0, 6.0, 3.0, 70.0, 12.0, 5.0, 77.0, 18.0])
#sol_hs118 = np.array([8.0, 49.0, 3.0, 1.0, 56.0, 2.40753e-16, 1.0, 63.0, 6.0, 3.0, 70.0, 12.0, 5.0, 77.0, 18.0])
ineq1_hs118 = -x13 -x14 -x15 + 100
ineq2_hs118 = -x10 -x11 -x12 + 85
ineq3_hs118 = -x7 -x8 -x9 + 70
ineq4_hs118 = -x4 -x5 -x6 + 50
ineq5_hs118 = -x1 -x2 -x3 + 60
ineq6_hs118 = x12 -x15 -7
ineq7_hs118 = -x12 +x15 - 6
ineq8_hs118 = x9 -x12 -7
ineq9_hs118 = -x9 +x12 - 6
ineq10_hs118 = x6 -x9 -7
ineq11_hs118 = -x6 +x9 - 6
ineq12_hs118 = x3 -x6 -7
ineq13_hs118 = -x3 +x6 - 6
ineq14_hs118 = x11 -x14 -7
ineq15_hs118 = -x11 +x14 - 7
ineq16_hs118 = x8 -x11 -7
ineq17_hs118 = -x8 +x11 - 7
ineq18_hs118 = x5 -x8 -7
ineq19_hs118 = -x5 +x8 - 7
ineq20_hs118 = x2 -x5 -7
ineq21_hs118 = -x2 +x5 - 7
ineq22_hs118 = x10 -x13 -7
ineq23_hs118 = -x10 +x13 - 6
ineq24_hs118 = x7 -x10 -7
ineq25_hs118 = -x7 +x10 - 6
ineq26_hs118 = x4 -x7 -7
ineq27_hs118 = -x4 +x7 - 6
ineq28_hs118 = x1 -x4 -7
ineq29_hs118 = -x1 +x4 - 6
cons_hs118 = [{'func':ineq1_hs118,'type': 'ineq', 'prop': 'convex'},{'func':ineq2_hs118,'type': 'ineq', 'prop': 'convex'},{'func':ineq3_hs118,'type': 'ineq', 'prop': 'convex'},{'func':ineq4_hs118,'type': 'ineq', 'prop': 'convex'},{'func':ineq5_hs118,'type': 'ineq', 'prop': 'convex'},{'func':ineq6_hs118,'type': 'ineq', 'prop': 'convex'},{'func':ineq7_hs118,'type': 'ineq', 'prop': 'convex'},{'func':ineq8_hs118,'type': 'ineq', 'prop': 'convex'},{'func':ineq9_hs118,'type': 'ineq', 'prop': 'convex'},{'func':ineq10_hs118,'type': 'ineq', 'prop': 'convex'},{'func':ineq11_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq12_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq13_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq14_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq15_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq16_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq17_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq18_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq19_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq20_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq21_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq22_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq23_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq24_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq25_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq26_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq27_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq28_hs118,'type': 'ineq', 'prop': 'unknown'},{'func':ineq29_hs118,'type': 'ineq', 'prop': 'unknown'}]
bnds_hs118 = [np.array([8, 21]), np.array([43, 57]), np.array([3, 16]), np.array([0, 90]), np.array([0, 120]), np.array([0, 60]), np.array([0, 90]), np.array([0, 120]), np.array([0, 60]), np.array([0, 90]), np.array([0, 120]), np.array([0, 60]), np.array([0, 90]), np.array([0, 120]), np.array([0, 60])]
vars_hs118 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15]
hs118 = OptimizationProblem("hs118", sol_hs118, symobj_hs118, cons_hs118, vars_hs118, bnds_hs118)

symobj_ex9_2_6 =  (-2) * x13 -2 * x14 + x13**2 + x14**2 + x15**2 + x16**2
#sol_ex9_2_6 = np.array([0.0, 3.69984e-18, 1.0, 1.0, 0.162391, 0.128596, 0.0, 1.99273e-41, 2.53305e-18, 0.0, 0.0, 3.13541e-18, 0.5, 0.5, 0.5, 0.5])
sol_ex9_2_6 = np.array([0.0, 0.0, 1.0, 1.0, 0.162391, 0.128596, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.5, 0.5])
eq1_ex9_2_6 =  -x8 +x10 -2 * x14 +2 * x16 - 0
eq2_ex9_2_6 =  -x7 +x9 -2 * x13 +2 * x15 - 0
eq3_ex9_2_6 =  x4 +x16 - 1.5
eq4_ex9_2_6 =  x3 +x15 - 1.5
eq5_ex9_2_6 =  x2 -x16 - -0.5
eq6_ex9_2_6 =  x1 -x15 - -0.5
eq7_ex9_2_6 =  x6 * x12 - 0
eq8_ex9_2_6 =  x1 * x7 - 0
eq9_ex9_2_6 =  x5 * x11 - 0
eq10_ex9_2_6 =  x4 * x10 - 0
eq11_ex9_2_6 =  x2 * x8 - 0
eq12_ex9_2_6 =  x3 * x9 - 0
cons_ex9_2_6 = [{'func':eq1_ex9_2_6,'type': 'eq', 'prop': 'convex'},{'func':eq2_ex9_2_6,'type': 'eq', 'prop': 'convex'},{'func':eq3_ex9_2_6,'type': 'eq', 'prop': 'convex'},{'func':eq4_ex9_2_6,'type': 'eq', 'prop': 'convex'},{'func':eq5_ex9_2_6,'type': 'eq', 'prop': 'convex'},{'func':eq6_ex9_2_6,'type': 'eq', 'prop': 'convex'},{'func':eq7_ex9_2_6,'type': 'eq', 'prop': 'unknown'},{'func':eq8_ex9_2_6,'type': 'eq', 'prop': 'unknown'},{'func':eq9_ex9_2_6,'type': 'eq', 'prop': 'unknown'},{'func':eq10_ex9_2_6,'type': 'eq', 'prop': 'unknown'},{'func':eq11_ex9_2_6,'type': 'eq', 'prop': 'unknown'},{'func':eq12_ex9_2_6,'type': 'eq', 'prop': 'unknown'}]
bnds_ex9_2_6 = [np.array([0, 200]),np.array([0, 200]),np.array([0, 200]),np.array([0, 200]),np.array([0, 200]),np.array([0, 200]),np.array([0, 200]),np.array([0, 200]),np.array([0, 200]),np.array([0, 200]),np.array([0, 200]),np.array([0, 200]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000])]
vars_ex9_2_6 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16]
ex9_2_6 = OptimizationProblem("ex9_2_6", sol_ex9_2_6, symobj_ex9_2_6, cons_ex9_2_6, vars_ex9_2_6, bnds_ex9_2_6)

symobj_degenlpa =  0.01 * x2 +33.332999999999998 * x3 +100 * x4 +0.01 * x5 +33.343000000000004 * x6 +100.01000000000001 * x7 +33.332999999999998 * x8 +133.33000000000001 * x9 +100 * x10
sol_degenlpa = np.array([0.5596867605, 0.0018242777, 0.0619727561, 0.0091951242, 0.0000088763, 0.0003001378, 0.0000445238, 0.0011692968, 0.0001480033, 0.0000154205, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])
eq1_degenlpa =  0.0084100000000000008 * x12 -0.084059999999999996 * x13 -0.20666999999999999 * x14 +20.658000000000001 * x16 +1.0700000000000001 * x18 -10.5 * x19 - 0
eq2_degenlpa =  0.0062899999999999996 * x11 -0.20555000000000001 * x12 -4.1105999999999998 * x13 +101.04000000000001 * x15 +505.10000000000002 * x16 -256.72000000000003 * x19 - 0
eq3_degenlpa =  (-0.0025699999999999998) * x11 +0.25220999999999999 * x12 -6.2000000000000002 * x14 +1.0900000000000001 * x17 - 0
eq4_degenlpa =  (-2.5741999999999998e-06) * x11 +0.0025200000000000001 * x13 -0.61975000000000002 * x16 +1.03 * x20 - 0
eq5_degenlpa =  0.002 * x4 -1.02 * x10 +100 * x16 +0.029999999999999999 * x19 +0.01 * x20 - 0
eq6_degenlpa =  0.02 * x3 -1.0600000000000001 * x8 +100 * x14 +0.029999999999999999 * x17 +0.01 * x19 - 0
eq7_degenlpa =  0.001 * x3 +0.01 * x4 -1.04 * x9 +100 * x15 +0.029999999999999999 * x18 +0.01 * x19 - 0
eq8_degenlpa =  0.001 * x2 +0.48899999999999999 * x4 -101.03 * x7 +100 * x13 +0.029999999999999999 * x15 +0.01 * x16 - 0
eq9_degenlpa =  0.01 * x2 +0.48899999999999999 * x3 -101.03 * x6 +100 * x12 +0.029999999999999999 * x14 +0.01 * x15 - 0
eq10_degenlpa =  x1 +2 * x2 +2 * x3 +2 * x4 +x5 +2 * x6 +2 * x7 +x8 +2 * x9 +x10 - 0.70784999999999998
eq11_degenlpa =  0.97799999999999998 * x2 -201 * x5 +100 * x11 +0.029999999999999999 * x12 +0.01 * x13 - 0
eq12_degenlpa =  0.00066666999999999996 * x1 -1.01 * x4 +200 * x7 +0.059999999999999998 * x9 +0.02 * x10 - 0
eq13_degenlpa =  0.0066667000000000002 * x1 -1.03 * x3 +200 * x6 +0.059999999999999998 * x8 +0.02 * x9 - 0
eq14_degenlpa =  0.32600000000000001 * x1 -101 * x2 +200 * x5 +0.059999999999999998 * x6 +0.02 * x7 - 0
cons_degenlpa = [{'func':eq1_degenlpa,'type': 'eq', 'prop': 'convex'},{'func':eq2_degenlpa,'type': 'eq', 'prop': 'convex'},{'func':eq3_degenlpa,'type': 'eq', 'prop': 'convex'},{'func':eq4_degenlpa,'type': 'eq', 'prop': 'convex'},{'func':eq5_degenlpa,'type': 'eq', 'prop': 'convex'},{'func':eq6_degenlpa,'type': 'eq', 'prop': 'convex'},{'func':eq7_degenlpa,'type': 'eq', 'prop': 'convex'},{'func':eq8_degenlpa,'type': 'eq', 'prop': 'convex'},{'func':eq9_degenlpa,'type': 'eq', 'prop': 'convex'},{'func':eq10_degenlpa,'type': 'eq', 'prop': 'convex'},{'func':eq11_degenlpa,'type': 'eq', 'prop': 'convex'},{'func':eq12_degenlpa,'type': 'eq', 'prop': 'convex'},{'func':eq13_degenlpa,'type': 'eq', 'prop': 'convex'},{'func':eq14_degenlpa,'type': 'eq', 'prop': 'convex'}]
bnds_degenlpa = [np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1])]
vars_degenlpa = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20]
degenlpa = OptimizationProblem("degenlpa", sol_degenlpa, symobj_degenlpa, cons_degenlpa, vars_degenlpa, bnds_degenlpa)

symobj_ex2_1_10 =  (-31.5) * (x1+19)**2 -7.5 * (x2+27)**2 -22 * (x3+23)**2 -45.5 * (x4+53)**2 -22.5 * (x1+42)**2 -25 * (x6-26)**2 -44.5 * (x7+33)**2 -29 * (x8+23)**2 -43 * (x9-41)**2 -41 * (x10-19)**2 +21 * (x11+52)**2 +49 * (x12+3)**2 +24 * (x13-81)**2 +45.5 * (x14-30)**2 +5.5 * (x15+85)**2 +31.5 * (x16-68)**2 +30.5 * (x17-27)**2 +30.5 * (x18+81)**2 +19 * (x19-97)**2 +13 * (x20+73)**2
sol_ex2_1_10 = np.array([0.0, 0.0, 0.0, 62.6086956522, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.3478260870, 0.0, 0.0, 0.0, 0.0])
ineq1_ex2_1_10 = x1 +x2 +x3 +x4 +x5 +x6 +x7 +x8 +x9 +x10 +x11 +x12 +x13 +x14 +x15 +x16 +x17 +x18 +x19 +x20 - 200
ineq2_ex2_1_10 = 8 * x1 +5 * x2 +2 * x3 +5 * x4 +3 * x5 +8 * x6 +x7 +3 * x8 +3 * x9 +5 * x10 +4 * x11 +5 * x12 +5 * x13 +6 * x14 +x15 +7 * x16 +x17 +2 * x18 +2 * x19 +4 * x20 - 400
ineq3_ex2_1_10 = x1 +2 * x2 +x3 +7 * x4 +8 * x5 +7 * x6 +6 * x7 +5 * x8 +8 * x9 +7 * x10 +2 * x11 +3 * x12 +5 * x13 +5 * x14 +4 * x15 +5 * x16 +4 * x17 +2 * x18 +2 * x19 +8 * x20 - 460
ineq4_ex2_1_10 = 3 * x1 +6 * x2 +6 * x3 +3 * x4 +x5 +6 * x6 +x7 +6 * x8 +7 * x9 +x10 +4 * x11 +3 * x12 +x13 +4 * x14 +3 * x15 +6 * x16 +4 * x17 +6 * x18 +5 * x19 +4 * x20 - 400
ineq5_ex2_1_10 = 5 * x1 +5 * x2 +2 * x3 +x4 +3 * x5 +5 * x6 +5 * x7 +7 * x8 +4 * x9 +3 * x10 +4 * x11 +x12 +7 * x13 +3 * x14 +8 * x15 +3 * x16 +x17 +6 * x18 +2 * x19 +8 * x20 - 415
ineq6_ex2_1_10 = 6 * x1 +6 * x2 +6 * x3 +4 * x4 +5 * x5 +2 * x6 +2 * x7 +4 * x8 +3 * x9 +2 * x10 +7 * x11 +5 * x12 +3 * x13 +6 * x14 +7 * x15 +5 * x16 +8 * x17 +4 * x18 +6 * x19 +3 * x20 - 470
ineq7_ex2_1_10 = 3 * x1 +2 * x2 +6 * x3 +3 * x4 +2 * x5 +x6 +6 * x7 +x8 +7 * x9 +3 * x10 +7 * x11 +7 * x12 +8 * x13 +2 * x14 +3 * x15 +4 * x16 +5 * x17 +8 * x18 +x19 +2 * x20 - 405
ineq8_ex2_1_10 = x1 +5 * x2 +2 * x3 +4 * x4 +7 * x5 +3 * x6 +x7 +5 * x8 +7 * x9 +6 * x10 +x11 +7 * x12 +2 * x13 +4 * x14 +7 * x15 +5 * x16 +3 * x17 +4 * x18 +x19 +2 * x20 - 385
ineq9_ex2_1_10 = 5 * x1 +4 * x2 +5 * x3 +4 * x4 +x5 +4 * x6 +4 * x7 +2 * x8 +5 * x9 +2 * x10 +3 * x11 +6 * x12 +x13 +7 * x14 +7 * x15 +5 * x16 +8 * x17 +7 * x18 +2 * x19 +x20 - 415
ineq10_ex2_1_10 = 3 * x1 +5 * x2 +5 * x3 +6 * x4 +4 * x5 +4 * x6 +5 * x7 +6 * x8 +4 * x9 +4 * x10 +8 * x11 +4 * x12 +2 * x13 +x14 +x15 +x16 +2 * x17 +x18 +7 * x19 +3 * x20 - 380
cons_ex2_1_10 = [{'func':ineq1_ex2_1_10,'type': 'ineq', 'prop': 'convex'},{'func':ineq2_ex2_1_10,'type': 'ineq', 'prop': 'convex'},{'func':ineq3_ex2_1_10,'type': 'ineq', 'prop': 'convex'},{'func':ineq4_ex2_1_10,'type': 'ineq', 'prop': 'convex'},{'func':ineq5_ex2_1_10,'type': 'ineq', 'prop': 'convex'},{'func':ineq6_ex2_1_10,'type': 'ineq', 'prop': 'convex'},{'func':ineq7_ex2_1_10,'type': 'ineq', 'prop': 'convex'},{'func':ineq8_ex2_1_10,'type': 'ineq', 'prop': 'convex'},{'func':ineq9_ex2_1_10,'type': 'ineq', 'prop': 'convex'},{'func':ineq10_ex2_1_10,'type': 'ineq', 'prop': 'convex'}]
bnds_ex2_1_10 = [np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),]
vars_ex2_1_10 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20]
ex2_1_10 = OptimizationProblem("ex2_1_10", sol_ex2_1_10, symobj_ex2_1_10, cons_ex2_1_10, vars_ex2_1_10, bnds_ex2_1_10)

symobj_ex2_1_7 =  5 * x1 +5 * x2 +5 * x3 +5 * x4 -x5 -x6 -x7 -x8 -x9 -x10 -x11 -x12 -x13 -5 * x1**2 -5 * x2**2 -5 * x3**2 -5 * x4**2
sol_ex2_1_7 = np.array([0.0, 0.0, 1.0428999241, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.7467437901, 0.0, 0.4314708838, 0.0, 0.0, 4.4330502738, 0.0, 15.858931758, 0.0, 16.48690337])
ineq1_ex2_1_7 = (-2) * x8 -x9 +x12 - 0
ineq2_ex2_1_7 = (-2) * x6 -x7 +x11 - 0
ineq3_ex2_1_7 = (-2) * x4 -x5 +x10 - 0
ineq4_ex2_1_7 = (-8) * x3 +x12 - 0
ineq5_ex2_1_7 = (-8) * x2 +x11 - 0
ineq6_ex2_1_7 = (-8) * x1 +x10 - 0
ineq7_ex2_1_7 = 2 * x2 +2 * x3 +x11 +x12 - 10
ineq8_ex2_1_7 = 2 * x1 +2 * x3 +x10 +x12 - 10
ineq9_ex2_1_7 = 2 * x1 +2 * x2 +x10 +x11 - 10
cons_ex2_1_7 = [{'func':ineq1_ex2_1_7,'type': 'ineq', 'prop': 'convex'},{'func':ineq2_ex2_1_7,'type': 'ineq', 'prop': 'convex'},{'func':ineq3_ex2_1_7,'type': 'ineq', 'prop': 'convex'},{'func':ineq4_ex2_1_7,'type': 'ineq', 'prop': 'convex'},{'func':ineq5_ex2_1_7,'type': 'ineq', 'prop': 'convex'},{'func':ineq6_ex2_1_7,'type': 'ineq', 'prop': 'convex'},{'func':ineq7_ex2_1_7,'type': 'ineq', 'prop': 'convex'},{'func':ineq8_ex2_1_7,'type': 'ineq', 'prop': 'convex'},{'func':ineq9_ex2_1_7,'type': 'ineq', 'prop': 'convex'}]
bnds_ex2_1_7 = [np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000])]
vars_ex2_1_7 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20]
ex2_1_7 = OptimizationProblem("ex2_1_7", sol_ex2_1_7, symobj_ex2_1_7, cons_ex2_1_7, vars_ex2_1_7, bnds_ex2_1_7)

symobj_makela3 =  x21
sol_makela3 = np.array([3.87598e-06,-7.17846e-05,5.92386e-05,-6.98932e-05,-5.79689e-05,-3.27271e-06,5.65857e-05,2.16738e-06,6.93024e-05,-0.000217264,-6.89381e-05,-3.4998e-06,5.56201e-05,-5.56194e-05,5.56147e-05,6.15904e-05,-3.72071e-05,-6.087e-05,-5.6071e-05,-6.10402e-05,3.08455e-09])
ineq1_makela3 = -x21 +(x1)**2 - 0
ineq2_makela3 = -x21 +(x2)**2 - 0
ineq3_makela3 = -x21 +(x20)**2 - 0
ineq4_makela3 = -x21 +(x3)**2 - 0
ineq5_makela3 = -x21 +(x4)**2 - 0
ineq6_makela3 = -x21 +(x5)**2 - 0
ineq7_makela3 = -x21 +(x19)**2 - 0
ineq8_makela3 = -x21 +(x6)**2 - 0
ineq9_makela3 = -x21 +(x7)**2 - 0
ineq10_makela3 = -x21 +(x8)**2 - 0
ineq11_makela3 = -x21 +(x18)**2 - 0
ineq12_makela3 = -x21 +(x9)**2 - 0
ineq13_makela3 = -x21 +(x10)**2 - 0
ineq14_makela3 = -x21 +(x11)**2 - 0
ineq15_makela3 = -x21 +(x17)**2 - 0
ineq16_makela3 = -x21 +(x12)**2 - 0
ineq17_makela3 = -x21 +(x13)**2 - 0
ineq18_makela3 = -x21 +(x14)**2 - 0
ineq19_makela3 = -x21 +(x16)**2 - 0
ineq20_makela3 = -x21 +(x15)**2 - 0
cons_makela3 = [{'func':ineq1_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq2_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq3_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq4_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq5_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq6_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq7_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq8_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq9_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq10_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq11_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq12_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq13_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq14_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq15_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq16_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq17_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq18_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq19_makela3,'type': 'ineq', 'prop': 'unknown'},{'func':ineq20_makela3,'type': 'ineq', 'prop': 'unknown'}]
bnds_makela3 = [np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000])]
vars_makela3 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21]
makela3 = OptimizationProblem("makela3", sol_makela3, symobj_makela3, cons_makela3, vars_makela3, bnds_makela3)

symobj_makela4 =  x21
sol_makela4 = np.array([5.55112e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17, 8.32667e-17])
#sol_makela4 = np.array([5.55112e-17, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])
ineq1_makela4 = -x20 -x21 - 0
ineq2_makela4 = x1 -x21 - 0
ineq3_makela4 = -x19 -x21 - 0
ineq4_makela4 = x2 -x21 - 0
ineq5_makela4 = -x18 -x21 - 0
ineq6_makela4 = x3 -x21 - 0
ineq7_makela4 = -x17 -x21 - 0
ineq8_makela4 = x4 -x21 - 0
ineq9_makela4 = -x16 -x21 - 0
ineq10_makela4 = x5 -x21 - 0
ineq11_makela4 = -x15 -x21 - 0
ineq12_makela4 = x6 -x21 - 0
ineq13_makela4 = -x14 -x21 - 0
ineq14_makela4 = x7 -x21 - 0
ineq15_makela4 = -x13 -x21 - 0
ineq16_makela4 = x8 -x21 - 0
ineq17_makela4 = -x12 -x21 - 0
ineq18_makela4 = x9 -x21 - 0
ineq19_makela4 = -x11 -x21 - 0
ineq20_makela4 = x10 -x21 - 0
ineq21_makela4 = -x10 -x21 - 0
ineq22_makela4 = x11 -x21 - 0
ineq23_makela4 = -x9 -x21 - 0
ineq24_makela4 = x12 -x21 - 0
ineq25_makela4 = -x8 -x21 - 0
ineq26_makela4 = x13 -x21 - 0
ineq27_makela4 = -x7 -x21 - 0
ineq28_makela4 = x14 -x21 - 0
ineq29_makela4 = -x6 -x21 - 0
ineq30_makela4 = x15 -x21 - 0
ineq31_makela4 = -x5 -x21 - 0
ineq32_makela4 = x16 -x21 - 0
ineq33_makela4 = -x4 -x21 - 0
ineq34_makela4 = x17 -x21 - 0
ineq35_makela4 = -x3 -x21 - 0
ineq36_makela4 = x18 -x21 - 0
ineq37_makela4 = -x2 -x21 - 0
ineq38_makela4 = x19 -x21 - 0
ineq39_makela4 = -x1 -x21 - 0
ineq40_makela4 = x20 -x21 - 0
cons_makela4 = [{'func':ineq1_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq2_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq3_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq4_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq5_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq6_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq7_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq8_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq9_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq10_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq11_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq12_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq13_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq14_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq15_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq16_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq17_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq18_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq19_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq20_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq21_makela4,'type': 'ineq', 'prop': 'convex'},{'func':ineq22_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq23_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq24_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq25_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq26_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq27_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq28_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq29_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq30_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq31_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq32_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq33_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq34_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq35_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq36_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq37_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq38_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq39_makela4,'type': 'ineq', 'prop': 'unknown'},{'func':ineq40_makela4,'type': 'ineq', 'prop': 'unknown'}]
bnds_makela4 = [np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000])]
vars_makela4 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21]
makela4 = OptimizationProblem("makela4", sol_makela4, symobj_makela4, cons_makela4, vars_makela4, bnds_makela4)

symobj_eigmaxc =  -(x1)
sol_eigmaxc = np.array([10.7461941804, 0.7770030680, 0.5797951662, 0.2354318782, 0.0667464929, 0.0146134585, 0.0026118646, 0.0003948311, 0.0000517439, 0.0000059871, 0.0000006203, 0.0000000582, 0.0000000050, 0.0000000004, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])
eq1_eigmaxc =  (x2)**2 +(x3)**2 +(x4)**2 +(x5)**2 +(x6)**2 +(x7)**2 +(x8)**2 +(x9)**2 +(x10)**2 +(x11)**2 +(x12)**2 +(x13)**2 +(x14)**2 +(x15)**2 +(x16)**2 +(x17)**2 +(x18)**2 +(x19)**2 +(x20)**2 +(x21)**2 +(x22)**2 - 1
eq2_eigmaxc =  -x21 +10 * x22 +x1 * x22 - 0
eq3_eigmaxc =  -x20 +9 * x21 -x22 +x1 * x21 - 0
eq4_eigmaxc =  -x19 +8 * x20 -x21 +x1 * x20 - 0
eq5_eigmaxc =  -x18 +7 * x19 -x20 +x1 * x19 - 0
eq6_eigmaxc =  -x17 +6 * x18 -x19 +x1 * x18 - 0
eq7_eigmaxc =  -x16 +5 * x17 -x18 +x1 * x17 - 0
eq8_eigmaxc =  -x15 +4 * x16 -x17 +x1 * x16 - 0
eq9_eigmaxc =  -x14 +3 * x15 -x16 +x1 * x15 - 0
eq10_eigmaxc =  -x13 +2 * x14 -x15 +x1 * x14 - 0
eq11_eigmaxc =  -x12 +x13 -x14 +x1 * x13 - 0
eq12_eigmaxc =  -x11 -x13 +x1 * x12 - 0
eq13_eigmaxc =  (-10) * x2 -x3 +x1 * x2 - 0
eq14_eigmaxc =  -x10 -x11 -x12 +x1 * x11 - 0
eq15_eigmaxc =  -x9 -2 * x10 -x11 +x1 * x10 - 0
eq16_eigmaxc =  -x2 -9 * x3 -x4 +x1 * x3 - 0
eq17_eigmaxc =  -x8 -3 * x9 -x10 +x1 * x9 - 0
eq18_eigmaxc =  -x7 -4 * x8 -x9 +x1 * x8 - 0
eq19_eigmaxc =  -x3 -8 * x4 -x5 +x1 * x4 - 0
eq20_eigmaxc =  -x6 -5 * x7 -x8 +x1 * x7 - 0
eq21_eigmaxc =  -x5 -6 * x6 -x7 +x1 * x6 - 0
eq22_eigmaxc =  -x4 -7 * x5 -x6 +x1 * x5 - 0
cons_eigmaxc = [{'func':eq1_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq2_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq3_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq4_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq5_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq6_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq7_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq8_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq9_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq10_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq11_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq12_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq13_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq14_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq15_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq16_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq17_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq18_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq19_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq20_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq21_eigmaxc,'type': 'eq', 'prop': 'unknown'},{'func':eq22_eigmaxc,'type': 'eq', 'prop': 'unknown'}]
bnds_eigmaxc = [np.array([-10000, 10000]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1]),np.array([-1, 1])]
vars_eigmaxc = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22]
eigmaxc = OptimizationProblem("eigmaxc", sol_eigmaxc, symobj_eigmaxc, cons_eigmaxc, vars_eigmaxc, bnds_eigmaxc)

symobj_eigminc = x1
sol_eigminc = np.array([-1, -0.0000000229, 0.0000002515, -0.0000024923, 0.0000221796, -0.0001749441, 0.0012024290, -0.0070396298, 0.0339957198, -0.1289432495, 0.3528340288, -0.5767248080, 0.2238907793, 0.5767248080, 0.3528340288, 0.1289432495,0.0339957198, 0.0070396297, 0.0012024289, 0.0001749435, 0.0000221759, 0.0000024640])
eq1_eigminc = -x21 + 10 * x22 + x1 * x22
eq2_eigminc = x2**2 + x3**2 + x4**2+ x5**2 + x6**2 + x7**2 + x8**2 + x9**2 + x10**2 + x11**2 + x12**2 + x13**2 + x14**2 + x15**2 + x16**2 + x17**2 + x18**2 + x19**2 + x20**2 + x21**2 + x22**2 - 1
eq3_eigminc = -x20 + 9*x21 - x22 + x1 * x21
eq4_eigminc = -x19 + 8 * x20 - x21 + x1 * x20
eq5_eigminc = -x18 + 7 * x19 - x20 + x1 * x19
eq6_eigminc = -x17 + 6 * x18 - x19 + x1 * x18
eq7_eigminc = -x16 + 5 * x17 - x18 + x1 * x17
eq8_eigminc = -x15 + 4 * x16 - x17 + x1 * x16
eq9_eigminc = -x14 + 3 * x15 - x16 + x1 * x15
eq10_eigminc = -x13 + 2 * x14 - x15 + x1 * x14
eq11_eigminc = -x12 + x13 - x14 + x1 * x13
eq12_eigminc = -x11 - x13 + x1 * x12
eq13_eigminc = (-10) * x2 - x3 + x1 * x2
eq14_eigminc = -x10 - x11 - x12 + x1 * x11
eq15_eigminc = -x9 - 2 * x10 - x11 + x1 * x10
eq16_eigminc = -x2 - 9 * x3 - x4 + x1 * x3
eq17_eigminc = -x8 - 3 * x9 - x10 + x1 * x9
eq18_eigminc = -x7 - 4 * x8 - x9 + x1 * x8
eq19_eigminc = -x6 - 5 * x7 - x8 + x1 * x7
eq20_eigminc = -x3 - 8 * x4 - x5 + x1 * x4
eq21_eigminc = -x5 - 6 * x6 - x7 + x1 * x6
eq22_eigminc = -x4 - 7 * x5 - x6 + x1 * x5
cons_eigminc = [{'func':eq1_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq2_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq3_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq4_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq5_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq6_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq7_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq8_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq9_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq10_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq11_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq12_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq13_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq14_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq15_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq16_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq17_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq18_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq19_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq20_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq21_eigminc, 'type':'eq', 'prop':'unknown'},{'func':eq22_eigminc, 'type':'eq', 'prop':'unknown'}]
bnds_eigminc = [np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1]), np.array([-1, 1])]
vars_eigminc = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22]
eigminc = OptimizationProblem('eigminc', sol_eigminc, symobj_eigminc, cons_eigminc, vars_eigminc, bnds_eigminc)

symobj_ex2_1_8 =  300 * x1 +270 * x2 +460 * x3 +800 * x4 +740 * x5 +600 * x6 +540 * x7 +380 * x8 +300 * x9 +490 * x10 +380 * x11 +760 * x12 +430 * x13 +250 * x14 +390 * x15 +600 * x16 +210 * x17 +830 * x18 +470 * x19 +680 * x20 +360 * x21 +290 * x22 +400 * x23 +310 * x24 -4 * x2**2 -6 * x3**2 -8 * x4**2 -12 * x5**2 -9 * x6**2 -14 * x7**2 -7 * x8**2 -13 * x9**2 -12 * x10**2 -8 * x11**2 -4 * x12**2 -7 * x13**2 -9 * x14**2 -16 * x15**2 -8 * x16**2 -4 * x17**2 -10 * x18**2 -21 * x19**2 -13 * x20**2 -17 * x21**2 -9 * x22**2 -8 * x23**2 -4 * x24**2 -7 * x1**2
sol_ex2_1_8 = np.array([6.0, 2.0, 0.0, 0.0, 0.0, 3.0, 0.0, 21.0, 20.0, 0.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0, 3.0, 0.0, 13.0, 0.0, 0.0, 12.0, 0.0, 0.0])
eq1_ex2_1_8 =  x4 +x8 +x12 +x16 +x20 +x24 - 21
eq2_ex2_1_8 =  x3 +x7 +x11 +x15 +x19 +x23 - 13
eq3_ex2_1_8 =  x2 +x6 +x10 +x14 +x18 +x22 - 41
eq4_ex2_1_8 =  x1 +x5 +x9 +x13 +x17 +x21 - 29
eq5_ex2_1_8 =  x21 +x22 +x23 +x24 - 12
eq6_ex2_1_8 =  x17 +x18 +x19 +x20 - 16
eq7_ex2_1_8 =  x13 +x14 +x15 +x16 - 24
eq8_ex2_1_8 =  x9 +x10 +x11 +x12 - 20
eq9_ex2_1_8 =  x5 +x6 +x7 +x8 - 24
eq10_ex2_1_8 =  x1 +x2 +x3 +x4 - 8
cons_ex2_1_8 = [{'func':eq1_ex2_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq2_ex2_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq3_ex2_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq4_ex2_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq5_ex2_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq6_ex2_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq7_ex2_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq8_ex2_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq9_ex2_1_8,'type': 'eq', 'prop': 'convex'},{'func':eq10_ex2_1_8,'type': 'eq', 'prop': 'convex'}]
bnds_ex2_1_8 = [np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100]),np.array([0, 100])]
vars_ex2_1_8 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24]
ex2_1_8 = OptimizationProblem("ex2_1_8", sol_ex2_1_8, symobj_ex2_1_8, cons_ex2_1_8, vars_ex2_1_8, bnds_ex2_1_8)

symobj_himmelbk = 0.0693 * x1 + 0.057700000000000001 * x2 + 0.050000000000000003 * x3 + 0.20000000000000001 * x4 + 0.26000000000000001 * x5 + 0.55000000000000004 * x6 + 0.059999999999999998 * x7 + 0.10000000000000001 * x8 + 0.12 * x9 + 0.17999999999999999 * x10 + 0.10000000000000001 * x11 + 0.089999999999999997 * x12 + 0.0693 * x13 + 0.057700000000000001 * x14 + 0.050000000000000003 * x15 + 0.20000000000000001 * x16 + 0.26000000000000001 * x17 + 0.55000000000000004 * x18 + 0.059999999999999998 * x19 + 0.10000000000000001 * x20 + 0.12 * x21 + 0.17999999999999999 * x22 + 0.10000000000000001 * x23 + 0.089999999999999997 * x24
sol_himmelbk = np.array([0.0000000000,0.0000000000,0.3021163061,0.0000000000,0.0000000000,0.0000000000,0.0000000000,0.0000000000,0.0000000000,0.0000000000,0.0348666211,0.0000000000,0.0000000000,0.0000000000,0.6615969304,0.0000000000,0.0000000000,0.0000000000,0.0000000000,0.0000000000,0.0000000000,0.0000000000,0.0014201424,0.0000000000])
eq1_himmelbk = 0.0080840743734842367 * x1 + 0.031545741324921134 * x2 + 0.021881838074398249 * x3 + 0.068027210884353748 * x4 + 0.011806375442739079 * x5 + 0.036101083032490974 * x6 + 0.020120724346076459 * x7 + 0.14084507042253522 * x8 + 0.47619047619047616 * x9 + 0.056497175141242938 * x10 + 1.1764705882352942 * x11 + 1.5625 * x12 + 3.2254889554134349 * x13 + 2.4470872333103921 * x14 + 2.4470872333103921 * x15 + 1.0351143377001455 * x16 + 1.1763830438378824 * x17 + 0.83221012287887641 * x18 + 2.2755589510567829 * x19 + 1.6744138215210735 * x20 + 1.0659524826681654 * x21 + 1.7237896178506065 * x22 + 3.0871436943781201 * x23 + 2.3665858528711912 * x24 - 1.671
eq2_himmelbk = x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 + x12 + x13 + x14 + x15 + x16 + x17 + x18 + x19 + x20 + x21 + x22 + x23 + x24 - 1
eq3_himmelbk = 52.178858259170831 * x11 * x24 - 0.83486173214673332 * x12 * x23 + 54.517167868644265 * x1 * x24 + 41.360633172746041 * x2 * x24 + 41.360633172746041 * x3 * x24 + 17.495487627365357 * x4 * x24 + 19.883209263854425 * x5 * x24 + 14.066003510825045 * x6 * x24 + 38.46146461656614 * x7 * x24 + 28.300918295267245 * x8 * x24 + 18.016713509462242 * x9 * x24 + 29.135467293684172 * x10 * x24 - 0.87227468589830826 * x12 * x13 - 0.66177013076393665 * x12 * x14 - 0.66177013076393665 * x12 * x15 - 0.27992780203784567 * x12 * x16 - 0.31813134822167083 * x12 * x17 - 0.22505605617320071 * x12 * x18 - 0.61538343386505823 * x12 * x19 - 0.45281469272427594 * x12 * x20 - 0.28826741615139589 * x12 * x21 - 0.46616747669894681 * x12 * x22 + 39.359999999999999 * x12 * x24
eq4_himmelbk = (-83.700000000000003) * x1 * x13 - 93.847690984170683 * x1 * x14 - 93.847690984170683 * x1 * x15 - 39.697436681222712 * x1 * x16 - 45.115200992555835 * x1 * x17 - 31.915902867173788 * x1 * x18 - 87.269448488824182 * x1 * x19 - 64.215067106192606 * x1 * x20 - 40.880103428892639 * x1 * x21 - 66.108667143393887 * x1 * x22 - 118.39435207293251 * x1 * x23 - 90.760400685558352 * x1 * x24 + 30.34686854783207 * x2 * x13 + 30.34686854783207 * x3 * x13 + 12.836681222707425 * x4 * x13 + 14.588585607940448 * x5 * x13 + 10.320421299005266 * x6 * x13 + 28.219708484664245 * x7 * x13 + 20.764775135389687 * x8 * x13 + 13.21911186059584 * x9 * x13 + 21.377095276764393 * x10 * x13 + 38.284349902322553 * x11 * x13 + 29.348553172371332 * x12 * x13
eq5_himmelbk = 41.792534131627889 * x1 * x23 + 31.706813489332415 * x2 * x23 + 31.706813489332415 * x3 * x23 + 13.41193595342067 * x4 * x23 + 15.24234904880066 * x5 * x23 + 10.782913984786424 * x6 * x23 + 29.484328250747993 * x7 * x23 + 21.695314339533788 * x8 * x23 + 13.811504590593966 * x9 * x23 + 22.335074599730934 * x10 * x23 - 0.88809135029709252 * x11 * x13 - 0.67376978664831377 * x11 * x14 - 0.67376978664831377 * x11 * x15 - 0.28500363901018927 * x11 * x16 - 0.32389991728701401 * x11 * x17 - 0.2291369221767115 * x11 * x18 - 0.62654197532839484 * x11 * x19 - 0.46102542971509297 * x11 * x20 - 0.29349447255012179 * x11 * x21 - 0.47462033524428232 * x11 * x22 + 39.149999999999999 * x11 * x23 - 0.65160490540293192 * x11 * x24 + 30.663760254255621 * x12 * x23
eq6_himmelbk = 74.846464371569837 * x1 * x22 + 56.783895388850652 * x2 * x22 + 56.783895388850652 * x3 * x22 + 24.019505094614267 * x4 * x22 + 27.297601323407775 * x5 * x22 + 19.311176126389704 * x6 * x22 + 52.803635141837731 * x7 * x22 + 38.854250058865084 * x8 * x22 + 24.735094622447068 * x9 * x22 - 33.119560484419651 * x10 * x13 - 25.126873709566414 * x10 * x14 - 25.126873709566414 * x10 * x15 - 10.628631004366813 * x10 * x16 - 12.079188585607941 * x10 * x17 - 8.5451954359274431 * x10 * x18 - 23.365608550263197 * x10 * x19 - 17.193005651047798 * x10 * x20 - 10.945279370432827 * x10 * x21 + 22.300000000000001 * x10 * x22 - 31.699021054916432 * x10 * x23 - 24.300279548063962 * x10 * x24 + 71.636205773822454 * x11 * x22 + 54.915885984325342 * x12 * x22
eq7_himmelbk = 121.03687576541027 * x1 * x21 + 91.82725395732966 * x2 * x21 + 91.82725395732966 * x3 * x21 + 38.842794759825331 * x4 * x21 + 44.143920595533501 * x5 * x21 + 31.228788765359859 * x6 * x21 + 85.390633749860015 * x7 * x21 + 62.832587708971047 * x8 * x21 - 6.35443597768404 * x9 * x13 - 4.8209308327598075 * x9 * x14 - 4.8209308327598075 * x9 * x15 - 2.0392467248908299 * x9 * x16 - 2.3175558312655089 * x9 * x17 - 1.6395114101813928 * x9 * x18 - 4.4830082718676509 * x9 * x19 - 3.29871085472098 * x9 * x20 + 37.899999999999999 * x9 * x21 - 3.3959845831262805 * x9 * x22 - 6.081886260039072 * x9 * x23 - 4.6623375542872356 * x9 * x24 + 64.685420630976765 * x10 * x21 + 115.84545257217279 * x11 * x21 + 88.806429605471152 * x12 * x21
eq8_himmelbk = 52.723726584115752 * x1 * x14 - 41.783553317911732 * x2 * x13 + 8.2999999999999972 * x2 * x14 - 31.699999999999996 * x2 * x15 - 13.409053857350798 * x2 * x16 - 15.239073614557485 * x2 * x17 - 10.780596840257461 * x2 * x18 - 29.477992352122364 * x2 * x19 - 21.690652225100067 * x2 * x20 - 13.80853663106614 * x2 * x21 - 22.330275006969103 * x2 * x22 - 39.991404384632077 * x2 * x23 - 30.657170907033628 * x2 * x24 + 39.999999999999993 * x3 * x14 + 16.919941775836971 * x4 * x14 + 19.229114971050453 * x5 * x14 + 13.60327677004096 * x6 * x14 + 37.196204860722226 * x7 * x14 + 27.369908170473273 * x8 * x14 + 17.424020985572419 * x9 * x14 + 28.177003163367953 * x10 * x14 + 50.462339917516815 * x11 * x14 + 38.684127327487225 * x12 * x14
eq9_himmelbk = 77.053567378781693 * x1 * x20 + 58.458362009635238 * x2 * x20 + 58.458362009635238 * x3 * x20 + 24.727802037845702 * x4 * x20 + 28.102564102564102 * x5 * x20 + 19.880631948507897 * x6 * x20 + 54.360730228316349 * x7 * x20 - 13.677008209733749 * x8 * x13 - 10.376359256710254 * x8 * x14 - 10.376359256710254 * x8 * x15 - 4.3891848617176121 * x8 * x16 - 4.9882051282051272 * x8 * x17 - 3.5288121708601516 * x8 * x18 - 9.6490296155261515 * x8 * x19 + 32.899999999999999 * x8 * x20 - 4.5199475360689521 * x8 * x21 - 7.30936769001418 * x8 * x22 - 13.090384197959626 * x8 * x23 - 10.035010067058256 * x8 * x24 + 25.464493160951843 * x9 * x20 + 41.179536281770027 * x10 * x20 + 73.748643368786617 * x11 * x20 + 56.535267983426792 * x12 * x20
eq10_himmelbk = 56.697963441738104 * x1 * x19 + 43.015141087405368 * x2 * x19 + 43.015141087405368 * x3 * x19 + 18.195342066957785 * x4 * x19 + 20.678577336641851 * x5 * x19 + 14.628671737858397 * x6 * x19 - 70.447219576359601 * x7 * x13 - 53.446312801101172 * x7 * x14 - 53.446312801101172 * x7 * x15 - 22.607712518195051 * x7 * x16 - 25.693132340777499 * x7 * x17 - 18.17612463428906 * x7 * x18 - 9.7000000000000028 * x7 * x19 - 36.570516835413237 * x7 * x20 - 23.281241896196363 * x7 * x21 - 37.648923121674528 * x7 * x22 - 67.425650097677448 * x7 * x23 - 51.68809923956271 * x7 * x24 + 29.43301153755592 * x8 * x19 + 18.737418025107736 * x9 * x19 + 30.300944162313499 * x10 * x19 + 54.266116778814848 * x11 * x19 + 41.600079870875419 * x12 * x19
eq11_himmelbk = 155.03243071619724 * x1 * x18 + 117.61871988988301 * x2 * x18 + 117.61871988988301 * x3 * x18 + 49.75254730713246 * x4 * x18 + 56.542597187758481 * x5 * x18 - 107.35995827096657 * x6 * x13 - 81.45096352374398 * x6 * x14 - 81.45096352374398 * x6 * x15 - 34.453639010189228 * x6 * x16 - 39.155748552522752 * x6 * x17 + 12.300000000000001 * x6 * x18 - 75.741668133309872 * x6 * x19 - 55.732634801036028 * x6 * x20 - 35.480082443320214 * x6 * x21 - 57.376101421697548 * x6 * x22 - 102.75515519861082 * x6 * x23 - 78.771486097475744 * x6 * x24 + 109.37425001199982 * x7 * x18 + 80.480339062867913 * x8 * x18 + 51.234776091437134 * x9 * x18 + 82.853576060213072 * x10 * x18 + 148.38289559366183 * x11 * x18 + 113.74943840790722 * x12 * x18
eq12_himmelbk = 52.723726584115752 * x1 * x15 + 39.999999999999993 * x2 * x15 - 60.236857622352247 * x3 * x13 - 45.699999999999996 * x3 * x14 - 5.7000000000000028 * x3 * x15 - 19.33103347889374 * x3 * x16 - 21.969263854425144 * x3 * x17 - 15.541743709771797 * x3 * x18 - 42.496664053375149 * x3 * x19 - 31.270120084765715 * x3 * x20 - 19.906943976016489 * x3 * x21 - 32.192226114147886 * x3 * x22 - 57.653223355762968 * x3 * x23 - 44.196615471654162 * x3 * x24 + 16.919941775836971 * x4 * x15 + 19.229114971050453 * x5 * x15 + 13.60327677004096 * x6 * x15 + 37.196204860722226 * x7 * x15 + 27.369908170473273 * x8 * x15 + 17.424020985572419 * x9 * x15 + 28.177003163367953 * x10 * x15 + 50.462339917516815 * x11 * x15 + 38.684127327487225 * x12 * x15
eq13_himmelbk = 109.67478568512723 * x1 * x17 + 83.207157604955256 * x2 * x17 + 83.207157604955256 * x3 * x17 + 35.196506550218338 * x4 * x17 - 232.23635868825693 * x5 * x13 - 176.19115622849276 * x5 * x14 - 176.19115622849276 * x5 * x15 - 74.528602620087341 * x5 * x16 - 44.700000000000003 * x5 * x17 - 59.91942656524283 * x5 * x18 - 163.84105854306333 * x5 * x19 - 120.55839416058394 * x5 * x20 - 76.748960089938166 * x5 * x21 - 124.11346916019248 * x5 * x22 - 222.27545040156286 * x5 * x23 - 170.39502803800525 * x5 * x24 + 28.297249853715623 * x6 * x17 + 77.374762003807945 * x7 * x17 + 56.934306569343065 * x8 * x17 + 36.245081506464302 * x9 * x17 + 58.613208576242016 * x10 * x17 + 104.97069676579119 * x11 * x17 + 80.469906983709677 * x12 * x17
eq14_himmelbk = 124.64280854538033 * x1 * x16 + 94.562973158981421 * x2 * x16 + 94.562973158981421 * x3 * x16 - 45.806232140427269 * x4 * x13 - 34.751892635925671 * x4 * x14 - 34.751892635925671 * x4 * x15 + 25.300000000000001 * x4 * x16 - 16.706203473945411 * x4 * x17 - 11.81849034523113 * x4 * x18 - 32.31596294459289 * x4 * x19 - 23.778902754885802 * x4 * x20 - 15.13794266441821 * x4 * x21 - 24.48010471838753 * x4 * x22 - 43.841545474278277 * x4 * x23 - 33.60866598998286 * x4 * x24 + 45.459057071960302 * x5 * x16 + 32.159157401989468 * x6 * x16 + 87.934593046511253 * x7 * x16 + 64.70449729220627 * x8 * x16 + 41.191680719505335 * x9 * x16 + 66.612529845952466 * x10 * x16 + 119.29672237898851 * x11 * x16 + 91.452152353694856 * x12 * x16
cons_himmelbk = [{'func':eq1_himmelbk, 'type':'eq', 'prop': 'convex'}, {'func':eq2_himmelbk, 'type':'eq', 'prop': 'convex'}, {'func':eq3_himmelbk, 'type':'eq'}, {'func':eq4_himmelbk, 'type':'eq'}, {'func':eq5_himmelbk, 'type':'eq'}, {'func':eq6_himmelbk, 'type':'eq'}, {'func':eq7_himmelbk, 'type':'eq'}, {'func':eq8_himmelbk, 'type':'eq'}, {'func':eq9_himmelbk, 'type':'eq'}, {'func':eq10_himmelbk, 'type':'eq'}, {'func':eq11_himmelbk, 'type':'eq'}, {'func':eq12_himmelbk, 'type':'eq'}, {'func':eq13_himmelbk, 'type':'eq'}, {'func':eq14_himmelbk, 'type':'eq'}]
bnds_himmelbk = [np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000]),np.array([0, 10000])]
vars_himmelbk = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24]
himmelbk = OptimizationProblem('himmelbk', sol_himmelbk, symobj_himmelbk, cons_himmelbk, vars_himmelbk, bnds_himmelbk)

symobj_hatfldg = 0
sol_hatfldg = np.array([-5.8195380834, 0.5913764787,-0.7984107149,-1.3870406436,-1.5128522885,-1.9589060278,-1.7267952292,-2.3360236522,-1.7447644358, -2.6989584387, -1.6258451185, -3.1615824714, -1.3780001438, -3.8872718006, -0.9897402705, -5.2899224907, -0.4392742944, -9.7033968822,  0.3156568732, -1.1698997670, -0.7169960180, -3.4865153187, -0.3990524343, -8.4456323152,  0.3193818930])
eq1_hatfldg = x2 - x13 + x2 * (x1 - x3) + 1
eq2_hatfldg = x3 - x13 + x3 * (x2 - x4) + 1
eq3_hatfldg = -x13 + x25 + x24 * x25 + 1
eq4_hatfldg = x1 - x13 - x1 * x2 + 1
eq5_hatfldg = x4 - x13 + x4 * (x3 - x5) + 1
eq6_hatfldg =  -x13 + x24 + x24 * (x23 - x25) + 1
eq7_hatfldg = x5 - x13 + x5 * (x4 - x6) + 1
eq8_hatfldg = -x13 + x23 + x23 * (x22 - x24) + 1
eq9_hatfldg = x6 - x13 + x6 * (x5 - x7) + 1
eq10_hatfldg = -x13 + x22 + x22 * (x21 - x23) + 1
eq11_hatfldg = x7 - x13 + x7 * (x6 - x8) + 1
eq12_hatfldg = -x13 + x21 + x21 * (x20 - x22) + 1
eq13_hatfldg = x8 - x13 + x8 * (x7 - x9) + 1
eq14_hatfldg = -x13 + x20 + x20 * (x19 - x21) + 1
eq15_hatfldg = x9 - x13 + x9 * (x8 - x10) + 1
eq16_hatfldg = -x13 + x19 + x19 * (x18 - x20) + 1
eq17_hatfldg = x10 - x13 + x10 * (x9 - x11) + 1
eq18_hatfldg = -x13 + x18 + x18 * (x17 - x19) + 1
eq19_hatfldg = x11 - x13 + x11 * (x10 - x12) + 1
eq20_hatfldg = -x13 + x17 + x17 * (x16 - x18) + 1
eq21_hatfldg = x12 - x13 + x12 * (x11 - x13) + 1
eq22_hatfldg = -x13 + x16 + x16 * (x15 - x17) + 1
eq23_hatfldg = x13 * (x12 - x14) + 1
eq24_hatfldg = -x13 + x15 + x15 * (x14 - x16) + 1
eq25_hatfldg = -x13 + x14 + x14 * (x13 - x15) + 1
cons_hatfldg = [{'func':eq1_hatfldg, 'type':'eq'}, {'func':eq2_hatfldg, 'type':'eq'}, {'func':eq3_hatfldg, 'type':'eq'}, {'func':eq4_hatfldg, 'type':'eq'}, {'func':eq5_hatfldg, 'type':'eq'}, {'func':eq6_hatfldg, 'type':'eq'}, {'func':eq7_hatfldg, 'type':'eq'}, {'func':eq8_hatfldg, 'type':'eq'}, {'func':eq9_hatfldg, 'type':'eq'}, {'func':eq10_hatfldg, 'type':'eq'}, {'func':eq11_hatfldg, 'type':'eq'}, {'func':eq12_hatfldg, 'type':'eq'}, {'func':eq13_hatfldg, 'type':'eq'}, {'func':eq14_hatfldg, 'type':'eq'}, {'func':eq15_hatfldg, 'type':'eq'}, {'func':eq16_hatfldg, 'type':'eq'}, {'func':eq17_hatfldg, 'type':'eq'}, {'func':eq18_hatfldg, 'type':'eq'}, {'func':eq19_hatfldg, 'type':'eq'}, {'func':eq20_hatfldg, 'type':'eq'}, {'func':eq21_hatfldg, 'type':'eq'}, {'func':eq22_hatfldg, 'type':'eq'}, {'func':eq23_hatfldg, 'type':'eq'}, {'func':eq24_hatfldg, 'type':'eq'}, {'func':eq25_hatfldg, 'type':'eq'}]
bnds_hatfldg = [np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10])]
vars_hatfldg = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25]
hatfldg = OptimizationProblem('hatfldg', sol_hatfldg, symobj_hatfldg, cons_hatfldg, vars_hatfldg, bnds_hatfldg)

symobj_optcntrl =  0.5 * (x1)**2 +0.5 * (x2)**2 +0.5 * (x3)**2 +0.5 * (x4)**2 +0.5 * (x5)**2 +0.5 * (x6)**2 +0.5 * (x7)**2 +0.5 * (x8)**2 +0.5 * (x9)**2 +0.5 * (x10)**2 +0.5 * (x11)**2
sol_optcntrl = np.array([10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 0.0, -4.16761e-11, -2.95939e-13, -2.51405e-13, -2.13748e-13, -1.81191e-13, -1.45115e-13, -1.06187e-13, -6.88435e-14, -3.55388e-14, 0.0, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2])
eq1_optcntrl =  -x10 +x11 -0.20000000000000001 * x21 - 0
eq2_optcntrl =  -x9 +x10 -0.20000000000000001 * x20 - 0
eq3_optcntrl =  -x8 +x9 -0.20000000000000001 * x19 - 0
eq4_optcntrl =  -x7 +x8 -0.20000000000000001 * x18 - 0
eq5_optcntrl =  -x6 +x7 -0.20000000000000001 * x17 - 0
eq6_optcntrl =  -x5 +x6 -0.20000000000000001 * x16 - 0
eq7_optcntrl =  -x4 +x5 -0.20000000000000001 * x15 - 0
eq8_optcntrl =  -x3 +x4 -0.20000000000000001 * x14 - 0
eq9_optcntrl =  -x2 +x3 -0.20000000000000001 * x13 - 0
eq10_optcntrl =  -x1 +x2 -0.20000000000000001 * x12 - 0
eq11_optcntrl =  0.0040000000000000001 * x10 -x21 +x22 -0.20000000000000001 * x32 +0.01 * (x21)**2 - 0
eq12_optcntrl =  0.0040000000000000001 * x9 -x20 +x21 -0.20000000000000001 * x31 +0.01 * (x20)**2 - 0
eq13_optcntrl =  0.0040000000000000001 * x8 -x19 +x20 -0.20000000000000001 * x30 +0.01 * (x19)**2 - 0
eq14_optcntrl =  0.0040000000000000001 * x7 -x18 +x19 -0.20000000000000001 * x29 +0.01 * (x18)**2 - 0
eq15_optcntrl =  0.0040000000000000001 * x6 -x17 +x18 -0.20000000000000001 * x28 +0.01 * (x17)**2 - 0
eq16_optcntrl =  0.0040000000000000001 * x5 -x16 +x17 -0.20000000000000001 * x27 +0.01 * (x16)**2 - 0
eq17_optcntrl =  0.0040000000000000001 * x4 -x15 +x16 -0.20000000000000001 * x26 +0.01 * (x15)**2 - 0
eq18_optcntrl =  0.0040000000000000001 * x3 -x14 +x15 -0.20000000000000001 * x25 +0.01 * (x14)**2 - 0
eq19_optcntrl =  0.0040000000000000001 * x2 -x13 +x14 -0.20000000000000001 * x24 +0.01 * (x13)**2 - 0
eq20_optcntrl =  0.0040000000000000001 * x1 -x12 +x13 -0.20000000000000001 * x23 +0.01 * (x12)**2 - 0
ineq1_optcntrl = -0.5 * x1**2 -0.5 * x2**2 -0.5 * x3**2 -0.5 * x4**2 -0.5 * x5**2 -0.5 * x6**2 -0.5 * x7**2 -0.5 * x8**2 -0.5 * x9**2 -0.5 * x10**2 -0.5 * x11**2
cons_optcntrl = [{'func':eq1_optcntrl,'type': 'eq', 'prop': 'convex'},{'func':eq2_optcntrl,'type': 'eq', 'prop': 'convex'},{'func':eq3_optcntrl,'type': 'eq', 'prop': 'convex'},{'func':eq4_optcntrl,'type': 'eq', 'prop': 'convex'},{'func':eq5_optcntrl,'type': 'eq', 'prop': 'convex'},{'func':eq6_optcntrl,'type': 'eq', 'prop': 'convex'},{'func':eq7_optcntrl,'type': 'eq', 'prop': 'convex'},{'func':eq8_optcntrl,'type': 'eq', 'prop': 'convex'},{'func':eq9_optcntrl,'type': 'eq', 'prop': 'convex'},{'func':eq10_optcntrl,'type': 'eq', 'prop': 'convex'},{'func':eq11_optcntrl,'type': 'eq', 'prop': 'unknown'},{'func':eq12_optcntrl,'type': 'eq', 'prop': 'unknown'},{'func':eq13_optcntrl,'type': 'eq', 'prop': 'unknown'},{'func':eq14_optcntrl,'type': 'eq', 'prop': 'unknown'},{'func':eq15_optcntrl,'type': 'eq', 'prop': 'unknown'},{'func':eq16_optcntrl,'type': 'eq', 'prop': 'unknown'},{'func':eq17_optcntrl,'type': 'eq', 'prop': 'unknown'},{'func':eq18_optcntrl,'type': 'eq', 'prop': 'unknown'},{'func':eq19_optcntrl,'type': 'eq', 'prop': 'unknown'},{'func':eq20_optcntrl,'type': 'eq', 'prop': 'unknown'},{'func':ineq1_optcntrl,'type': 'ineq', 'prop': 'convex'}]
bnds_optcntrl = [np.array([10, 10]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([0, 0]),np.array([-1, 10000]),np.array([-1, 10000]),np.array([-1, 10000]),np.array([-1, 10000]),np.array([-1, 10000]),np.array([-1, 10000]),np.array([-1, 10000]),np.array([-1, 10000]),np.array([-1, 10000]),np.array([0, 0]),np.array([-0.20000000000000001, 0.20000000000000001]), np.array([-0.20000000000000001, 0.20000000000000001]), np.array([-0.20000000000000001, 0.20000000000000001]), np.array([-0.20000000000000001, 0.20000000000000001]), np.array([-0.20000000000000001, 0.20000000000000001]), np.array([-0.20000000000000001, 0.20000000000000001]), np.array([-0.20000000000000001, 0.20000000000000001]), np.array([-0.20000000000000001, 0.20000000000000001]), np.array([-0.20000000000000001, 0.20000000000000001]), np.array([-0.20000000000000001, 0.20000000000000001])]
vars_optcntrl = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32]
optcntrl = OptimizationProblem("optcntrl", sol_optcntrl, symobj_optcntrl, cons_optcntrl, vars_optcntrl, bnds_optcntrl)

symobj_abel = 0.5 * (0.0625 * x1 - 24.243749999999999) * (x1 - 387.89999999999998) + 0.5 * (0.0625 * x2 - 24.425578125000001) * (x2 - 390.80925000000002) + 0.5 * (0.0625 * x3 - 24.608769960937501) * (x3 - 393.74031937500001) + 0.5 * (0.0625 * x4 - 24.793335735644501) * (x4 - 396.69337177031298) + 0.5 * (0.0625 * x5 - 24.979285753661902) * (x5 - 399.66857205858997) + 0.5 * (0.0625 * x6 - 25.166630396814298) * (x6 - 402.666086349029) + 0.5 * (0.0625 * x7 - 25.3553801247904) * (x7 - 405.68608199664698) + 0.5 * (6.25 * x8 - 2554.5545475726399) * (x8 - 408.72872761162199) + 0.5 * (x9 - 85.299999999999997) * (x9 - 85.299999999999997) + 0.5 * (x10 - 85.939750000000004) * (x10 - 85.939750000000004) + 0.5 * (x11 - 86.584298125000004) * (x11 - 86.584298125000004) + 0.5 * (x12 - 87.233680360937498) * (x12 - 87.233680360937498) + 0.5 * (x13 - 87.887932963644502) * (x13 - 87.887932963644502) + 0.5 * (x14 - 88.547092460871895) * (x14 - 88.547092460871895) + 0.5 * (x15 - 89.211195654328407) * (x15 - 89.211195654328407) + 0.5 * (100 * x16 - 8988.0279621735899) * (x16 - 89.880279621735895) + 0.5 * (x17 - 110.5) * (x17 - 110.5) + 0.5 * (x18 - 111.32875) * (x18 - 111.32875) + 0.5 * (x19 - 112.16371562499999) * (x19 - 112.16371562499999) + 0.5 * (x20 - 113.004943492188) * (x20 - 113.004943492188) + 0.5 * (x21 - 113.85248056837899) * (x21 - 113.85248056837899) + 0.5 * (x22 - 114.706374172642) * (x22 - 114.706374172642) + 0.5 * (x23 - 115.56667197893699) * (x23 - 115.56667197893699) + 0.5 * (0.44400000000000001 * x24 - 65.312399999999997) * (x24 - 147.09999999999999) + 0.5 * (0.44400000000000001 * x25 - 65.802243000000004) * (x25 - 148.20325) + 0.5 * (0.44400000000000001 * x26 - 66.295759822500003) * (x26 - 149.31477437500001) + 0.5 * (0.44400000000000001 * x27 - 66.792978021168807) * (x27 - 150.434635182813) + 0.5 * (0.44400000000000001 * x28 - 67.293925356327506) * (x28 - 151.562894946684) + 0.5 * (0.44400000000000001 * x29 - 67.798629796499995) * (x29 - 152.69961665878401) + 0.5 * (0.44400000000000001 * x30 - 68.307119519973796) * (x30 - 153.844863783725)
sol_abel = np.array([387.90000,389.58516,391.49449,393.77661,396.42579,399.42800,402.71365,405.36581,85.30000,87.67516,88.73644,89.72262,90.72781,91.74714,92.55437,89.97405,113.95054,115.26304,116.61483,118.02902,119.52218,121.11805,122.92438,143.99634,144.01232,144.34647,144.69501,145.02877,145.19670,143.1001652208])
eq1_abel = (-0.097000000000000003) * x7 - 0.42399999999999999 * x15 + x16 + 0.10100000000000001 * x23 - 1.4590000000000001 * x30 + 184.69999999999999
eq2_abel = (-0.097000000000000003) * x6 - 0.42399999999999999 * x14 + x15 + 0.10100000000000001 * x22 - 1.4590000000000001 * x29 + 184.69999999999999
eq3_abel = (-0.097000000000000003) * x5 - 0.42399999999999999 * x13 + x14 + 0.10100000000000001 * x21 - 1.4590000000000001 * x28 + 184.69999999999999
eq4_abel = (-0.097000000000000003) * x4 - 0.42399999999999999 * x12 + x13 + 0.10100000000000001 * x20 - 1.4590000000000001 * x27 + 184.69999999999999
eq5_abel = (-0.097000000000000003) * x3 - 0.42399999999999999 * x11 + x12 + 0.10100000000000001 * x19 - 1.4590000000000001 * x26 + 184.69999999999999
eq6_abel = (-0.097000000000000003) * x2 - 0.42399999999999999 * x10 + x11 + 0.10100000000000001 * x18 - 1.4590000000000001 * x25 + 184.69999999999999
eq7_abel =(-0.097000000000000003) * x1 - 0.42399999999999999 * x9 + x10 + 0.10100000000000001 * x17 - 1.4590000000000001 * x24 + 184.69999999999999
eq8_abel = (-0.91400000000000003) * x7 + x8 + 0.016 * x15 - 0.30499999999999999 * x23 - 0.42399999999999999 * x30 + 59.399999999999999
eq9_abel = (-0.91400000000000003) * x6 + x7 + 0.016 * x14 - 0.30499999999999999 * x22 - 0.42399999999999999 * x29 + 59.399999999999999
eq10_abel = (-0.91400000000000003) * x5 + x6 + 0.016 * x13 - 0.30499999999999999 * x21 - 0.42399999999999999 * x28 + 59.399999999999999
eq11_abel = (-0.91400000000000003) * x4 + x5 + 0.016 * x12 - 0.30499999999999999 * x20 - 0.42399999999999999 * x27 + 59.399999999999999
eq12_abel = (-0.91400000000000003) * x3 + x4 + 0.016 * x11 - 0.30499999999999999 * x19 - 0.42399999999999999 * x26 + 59.399999999999999
eq13_abel = (-0.91400000000000003) * x2 + x3 + 0.016 * x10 - 0.30499999999999999 * x18 - 0.42399999999999999 * x25 + 59.399999999999999
eq14_abel = (-0.91400000000000003) * x1 + x2 + 0.016 * x9 - 0.30499999999999999 * x17 - 0.42399999999999999 * x24 + 59.399999999999999
cons_abel = [{'func':eq1_abel, 'type':'eq', 'prop': 'convex'}, {'func':eq2_abel, 'type':'eq', 'prop': 'convex'}, {'func':eq3_abel, 'type':'eq', 'prop': 'convex'}, {'func':eq4_abel, 'type':'eq', 'prop': 'convex'}, {'func':eq5_abel, 'type':'eq', 'prop': 'convex'}, {'func':eq6_abel, 'type':'eq', 'prop': 'convex'}, {'func':eq7_abel, 'type':'eq', 'prop': 'convex'}, {'func':eq8_abel, 'type':'eq', 'prop': 'convex'}, {'func':eq9_abel, 'type':'eq', 'prop': 'convex'}, {'func':eq10_abel, 'type':'eq', 'prop': 'convex'}, {'func':eq11_abel, 'type':'eq', 'prop': 'convex'}, {'func':eq12_abel, 'type':'eq', 'prop': 'convex'}, {'func':eq13_abel, 'type':'eq', 'prop': 'convex'}, {'func':eq14_abel, 'type':'eq', 'prop': 'convex'}]
bnds_abel = [np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500])]
vars_abel = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30]
abel = OptimizationProblem('abel', sol_abel, symobj_abel, cons_abel, vars_abel, bnds_abel)

symobj_dual4 =  0.83197128850000002 * x1 +0.78215567370000005 * x2 +0.908518889 * x3 +0.67931053890000004 * x4 +0.96583105950000003 * x5 +0.75990261520000002 * x6 +0.82898335519999999 * x7 +0.80719225890000001 * x8 +0.91249719019999997 * x9 +0.71568978240000003 * x10 +0.54961872349999996 * x11 +0.4416244614 * x12 +0.62559537600000004 * x13 +0.65226134840000005 * x14 +0.66018853560000001 * x15 +0.6003936017 * x16 +0.54929493470000001 * x17 +0.61691634939999995 * x18 +0.5737799455 * x19 +0.62917930740000005 * x20 +0.5772455997 * x21 +0.51970493979999999 * x22 +0.39527469840000001 * x23 +0.39789009619999999 * x24 +0.29727995839999999 * x25 +0.2430443545 * x26 +0.74113463700000004 * x28 +0.74113463700000004 * x29 +0.74113463700000004 * x30 +0.74113463700000004 * x31 +0.74113463700000004 * x32 +0.74113463700000004 * x33 +0.74113463700000004 * x34 +0.74113463700000004 * x35 +0.74113463700000004 * x36 +0.74113463700000004 * x37 +0.74113463700000004 * x38 +0.74113463700000004 * x39 +0.74113463700000004 * x40 +0.74113463700000004 * x41 +0.74113463700000004 * x42 +0.74113463700000004 * x43 +0.74113463700000004 * x44 +0.74113463700000004 * x45 +0.74113463700000004 * x46 +0.74113463700000004 * x47 +0.74113463700000004 * x48 +0.74113463700000004 * x49 +0.74113463700000004 * x50 +0.74113463700000004 * x51 +0.74113463700000004 * x52 +0.74113463700000004 * x53 +0.74113463700000004 * x54 +0.74113463700000004 * x55 +0.81561684860000006 * x56 +0.91058267640000001 * x57 +0.95807403430000004 * x58 +0.83827765840000001 * x59 +1.0064412817999999 * x60 +0.91454639209999999 * x61 +0.89076442420000002 * x62 +0.93563246499999997 * x63 +1.0469476122000001 * x64 +0.99383303209999996 * x65 +1.0440301863999999 * x66 +0.77810389219999998 * x67 +0.95038324289999998 * x68 +0.93330773160000002 * x69 +0.96709305300000004 * x70 +1.0500250367999999 * x71 +0.81605754620000004 * x72 +1.0364734174000001 * x73 +1.0782957195 * x74 +0.87240138950000001 * x75 +102 * (x2)**2 +111 * (x3)**2 +103 * (x4)**2 +117 * (x5)**2 +115 * (x6)**2 +107 * (x7)**2 +106 * (x8)**2 +110 * (x9)**2 +112 * (x10)**2 +110 * (x11)**2 +108 * (x12)**2 +94 * (x13)**2 +89 * (x14)**2 +109 * (x15)**2 +105 * (x16)**2 +96 * (x17)**2 +104 * (x18)**2 +104 * (x19)**2 +116 * (x20)**2 +111 * (x21)**2 +109 * (x22)**2 +103 * (x23)**2 +101 * (x24)**2 +103 * (x25)**2 +105 * (x26)**2 +99 * (x27)**2 +108 * (x28)**2 +112 * (x29)**2 +111 * (x30)**2 +99 * (x31)**2 +108 * (x32)**2 +115 * (x33)**2 +107 * (x34)**2 +96 * (x35)**2 +112 * (x36)**2 +112 * (x37)**2 +111 * (x38)**2 +101 * (x39)**2 +117 * (x40)**2 +100 * (x41)**2 +107 * (x42)**2 +101 * (x43)**2 +106 * (x44)**2 +98 * (x45)**2 +107 * (x46)**2 +105 * (x47)**2 +94 * (x48)**2 +104 * (x49)**2 +102 * (x50)**2 +93 * (x51)**2 +104 * (x52)**2 +100 * (x53)**2 +113 * (x54)**2 +98 * (x55)**2 +108 * (x56)**2 +106 * (x57)**2 +119 * (x58)**2 +108 * (x59)**2 +104 * (x60)**2 +110 * (x61)**2 +111 * (x62)**2 +111 * (x63)**2 +115 * (x64)**2 +105 * (x65)**2 +104 * (x66)**2 +106 * (x67)**2 +105 * (x68)**2 +110 * (x69)**2 +117 * (x70)**2 +111 * (x71)**2 +106 * (x72)**2 +108 * (x73)**2 +101 * (x74)**2 +110 * (x75)**2 +113 * (x1)**2 -36 * x1 * x2 -8 * x1 * x3 -16 * x1 * x4 -5 * x1 * x5 +28 * x1 * x6 +22 * x1 * x7 -26 * x1 * x8 +24 * x1 * x9 -16 * x1 * x10 -14 * x1 * x11 -28 * x1 * x12 -8 * x1 * x13 +26 * x1 * x14 -4 * x1 * x15 +19 * x1 * x16 -9 * x1 * x17 +10 * x1 * x18 -4 * x1 * x21 +20 * x1 * x22 -19 * x1 * x23 +12 * x1 * x24 -21 * x1 * x25 -13 * x1 * x26 -17 * x1 * x27 +23 * x1 * x28 +48 * x1 * x29 -32 * x1 * x30 +31 * x1 * x31 +30 * x1 * x32 -37 * x1 * x33 +22 * x1 * x34 -13 * x1 * x35 -21 * x1 * x36 -9 * x1 * x37 -3 * x1 * x38 +16 * x1 * x39 -4 * x1 * x40 +16 * x1 * x41 +11 * x1 * x42 -29 * x1 * x43 -32 * x1 * x44 -11 * x1 * x45 +34 * x1 * x46 +11 * x1 * x47 -32 * x1 * x48 +35 * x1 * x49 -26 * x1 * x50 +16 * x1 * x51 +6 * x1 * x52 +7 * x1 * x53 +x1 * x54 -16 * x1 * x55 -32 * x1 * x56 +4 * x1 * x57 +9 * x1 * x58 -9 * x1 * x59 +44 * x1 * x60 +2 * x1 * x61 -19 * x1 * x62 -5 * x1 * x63 +44 * x1 * x64 +19 * x1 * x65 +31 * x1 * x66 -x1 * x67 -x1 * x68 +31 * x1 * x69 +6 * x1 * x70 -24 * x1 * x71 -6 * x1 * x72 +5 * x1 * x73 -25 * x1 * x74 -20 * x1 * x75 -27 * x2 * x3 -15 * x2 * x4 -8 * x2 * x5 -36 * x2 * x6 -21 * x2 * x7 +4 * x2 * x8 +14 * x2 * x9 -2 * x2 * x10 -x2 * x11 -3 * x2 * x12 +5 * x2 * x13 -4 * x2 * x14 +11 * x2 * x15 -2 * x2 * x16 +14 * x2 * x17 -33 * x2 * x18 +32 * x2 * x19 -18 * x2 * x20 +15 * x2 * x21 -5 * x2 * x22 -20 * x2 * x23 -2 * x2 * x24 +30 * x2 * x25 -16 * x2 * x26 -15 * x2 * x27 -36 * x2 * x28 -21 * x2 * x29 +40 * x2 * x30 -17 * x2 * x31 -7 * x2 * x32 +20 * x2 * x33 -12 * x2 * x34 +11 * x2 * x35 +9 * x2 * x36 +12 * x2 * x37 -20 * x2 * x38 +9 * x2 * x39 +8 * x2 * x40 +32 * x2 * x41 -35 * x2 * x42 -7 * x2 * x43 +9 * x2 * x44 +15 * x2 * x45 -27 * x2 * x46 -14 * x2 * x47 +11 * x2 * x48 +4 * x2 * x49 +5 * x2 * x50 -6 * x2 * x51 -23 * x2 * x52 +25 * x2 * x53 +22 * x2 * x54 -4 * x2 * x55 +25 * x2 * x56 +26 * x2 * x57 -5 * x2 * x58 +16 * x2 * x59 -11 * x2 * x60 -29 * x2 * x61 +28 * x2 * x62 -6 * x2 * x63 +12 * x2 * x64 +8 * x2 * x65 -x2 * x66 -23 * x2 * x67 -7 * x2 * x68 +12 * x2 * x69 +5 * x2 * x70 -27 * x2 * x71 +29 * x2 * x72 +8 * x2 * x73 -6 * x2 * x74 +29 * x2 * x75 -32 * x3 * x4 -10 * x3 * x5 -10 * x3 * x6 -3 * x3 * x7 -x3 * x8 -25 * x3 * x9 +31 * x3 * x10 -17 * x3 * x11 -13 * x3 * x12 +2 * x3 * x13 +10 * x3 * x14 -22 * x3 * x15 +16 * x3 * x16 +x3 * x17 +40 * x3 * x18 -6 * x3 * x19 +18 * x3 * x20 +12 * x3 * x21 +18 * x3 * x22 -20 * x3 * x23 -21 * x3 * x24 -12 * x3 * x25 -22 * x3 * x26 +4 * x3 * x27 +20 * x3 * x28 +25 * x3 * x29 -19 * x3 * x30 +9 * x3 * x31 -13 * x3 * x32 -10 * x3 * x33 +x3 * x34 +2 * x3 * x35 +5 * x3 * x36 +8 * x3 * x37 +20 * x3 * x38 -18 * x3 * x39 +2 * x3 * x40 +3 * x3 * x41 -8 * x3 * x42 -21 * x3 * x43 -14 * x3 * x45 +8 * x3 * x46 +7 * x3 * x47 +7 * x3 * x48 -2 * x3 * x49 -2 * x3 * x50 -x3 * x51 +10 * x3 * x52 +9 * x3 * x53 -12 * x3 * x54 -9 * x3 * x55 -9 * x3 * x56 -2 * x3 * x57 +48 * x3 * x58 -x3 * x59 +37 * x3 * x60 -13 * x3 * x61 -9 * x3 * x62 -24 * x3 * x63 -17 * x3 * x64 +20 * x3 * x65 +24 * x3 * x66 +x3 * x67 -8 * x3 * x68 -9 * x3 * x69 +10 * x3 * x70 +13 * x3 * x71 +8 * x3 * x72 +11 * x3 * x73 +3 * x3 * x74 -15 * x3 * x75 -40 * x4 * x5 -11 * x4 * x6 -5 * x4 * x7 -5 * x4 * x8 -6 * x4 * x9 -17 * x4 * x10 -33 * x4 * x11 +36 * x4 * x12 -2 * x4 * x13 -31 * x4 * x14 +14 * x4 * x15 -23 * x4 * x16 +8 * x4 * x17 +14 * x4 * x18 +8 * x4 * x19 +2 * x4 * x20 -16 * x4 * x21 +16 * x4 * x22 -20 * x4 * x23 -19 * x4 * x24 -10 * x4 * x25 +23 * x4 * x26 +27 * x4 * x27 -19 * x4 * x28 +24 * x4 * x29 -31 * x4 * x30 +23 * x4 * x31 +4 * x4 * x32 -3 * x4 * x33 +15 * x4 * x34 -16 * x4 * x35 -19 * x4 * x36 -25 * x4 * x37 +50 * x4 * x38 -6 * x4 * x39 +19 * x4 * x40 -13 * x4 * x41 -2 * x4 * x42 +10 * x4 * x43 -12 * x4 * x44 -2 * x4 * x45 -18 * x4 * x46 -4 * x4 * x47 -21 * x4 * x48 +25 * x4 * x49 -19 * x4 * x50 +13 * x4 * x51 -13 * x4 * x52 -30 * x4 * x53 -20 * x4 * x54 +63 * x4 * x55 -11 * x4 * x56 -19 * x4 * x57 +x4 * x58 -6 * x4 * x59 +2 * x4 * x60 +17 * x4 * x61 +2 * x4 * x62 +15 * x4 * x63 +7 * x4 * x64 -31 * x4 * x65 -12 * x4 * x66 -25 * x4 * x67 -12 * x4 * x68 -24 * x4 * x69 -20 * x4 * x71 -43 * x4 * x72 -36 * x4 * x73 +25 * x4 * x74 -36 * x4 * x75 -32 * x5 * x6 +13 * x5 * x7 -31 * x5 * x8 +13 * x5 * x9 -25 * x5 * x10 +19 * x5 * x11 -27 * x5 * x12 -15 * x5 * x13 -17 * x5 * x14 +34 * x5 * x15 -27 * x5 * x16 -20 * x5 * x17 +22 * x5 * x18 +9 * x5 * x19 -13 * x5 * x20 -16 * x5 * x21 -14 * x5 * x22 +5 * x5 * x23 +25 * x5 * x24 -9 * x5 * x25 -3 * x5 * x26 -10 * x5 * x27 +5 * x5 * x28 -16 * x5 * x29 +6 * x5 * x30 -20 * x5 * x31 +31 * x5 * x32 -10 * x5 * x33 -29 * x5 * x34 +6 * x5 * x35 +25 * x5 * x36 +16 * x5 * x37 +7 * x5 * x38 -21 * x5 * x39 +11 * x5 * x41 +16 * x5 * x42 -2 * x5 * x43 -6 * x5 * x44 -5 * x5 * x45 +46 * x5 * x46 -23 * x5 * x47 +x5 * x48 -5 * x5 * x49 +13 * x5 * x50 -12 * x5 * x51 -6 * x5 * x52 +30 * x5 * x53 -23 * x5 * x54 -33 * x5 * x55 -9 * x5 * x56 -14 * x5 * x57 -40 * x5 * x58 -6 * x5 * x59 -10 * x5 * x60 +28 * x5 * x61 -19 * x5 * x62 -26 * x5 * x64 +21 * x5 * x65 +16 * x5 * x66 -23 * x5 * x67 +47 * x5 * x68 -5 * x5 * x69 +20 * x5 * x70 +28 * x5 * x71 +28 * x5 * x72 +2 * x5 * x73 -12 * x5 * x74 +18 * x5 * x75 -21 * x6 * x7 -24 * x6 * x8 +13 * x6 * x9 -25 * x6 * x10 +4 * x6 * x11 -23 * x6 * x12 +15 * x6 * x13 +12 * x6 * x14 -22 * x6 * x15 +9 * x6 * x17 -14 * x6 * x18 +4 * x6 * x19 +48 * x6 * x20 -13 * x6 * x21 -6 * x6 * x23 -6 * x6 * x24 -17 * x6 * x25 +8 * x6 * x26 -2 * x6 * x27 +36 * x6 * x28 +21 * x6 * x29 -42 * x6 * x30 +7 * x6 * x31 +22 * x6 * x32 -16 * x6 * x33 +17 * x6 * x34 -29 * x6 * x35 -16 * x6 * x37 +14 * x6 * x38 +x6 * x39 -19 * x6 * x40 -9 * x6 * x41 +59 * x6 * x42 -14 * x6 * x43 -13 * x6 * x44 -17 * x6 * x45 +9 * x6 * x46 +8 * x6 * x47 -8 * x6 * x48 -19 * x6 * x49 -27 * x6 * x50 -2 * x6 * x51 +37 * x6 * x52 -9 * x6 * x53 +6 * x6 * x54 +10 * x6 * x55 -20 * x6 * x56 +2 * x6 * x57 +18 * x6 * x58 +4 * x6 * x59 -6 * x6 * x60 -x6 * x61 -3 * x6 * x62 -8 * x6 * x63 -15 * x6 * x64 +3 * x6 * x65 +8 * x6 * x66 +3 * x6 * x67 -14 * x6 * x68 +15 * x6 * x69 -x6 * x70 -6 * x6 * x71 -30 * x6 * x72 +11 * x6 * x73 -14 * x6 * x74 -45 * x6 * x75 -28 * x7 * x8 +14 * x7 * x9 -20 * x7 * x10 -15 * x7 * x11 -9 * x7 * x12 -18 * x7 * x13 -3 * x7 * x14 -19 * x7 * x16 +7 * x7 * x17 +21 * x7 * x18 -22 * x7 * x19 +3 * x7 * x20 -27 * x7 * x21 +20 * x7 * x22 -5 * x7 * x23 +16 * x7 * x24 -2 * x7 * x25 -18 * x7 * x26 -2 * x7 * x27 +12 * x7 * x28 +10 * x7 * x29 +7 * x7 * x30 -13 * x7 * x31 +24 * x7 * x32 -16 * x7 * x33 -19 * x7 * x34 +14 * x7 * x35 -10 * x7 * x36 -3 * x7 * x37 -23 * x7 * x38 +12 * x7 * x39 +31 * x7 * x40 -7 * x7 * x41 -8 * x7 * x42 -21 * x7 * x43 -13 * x7 * x44 +29 * x7 * x45 +7 * x7 * x46 +7 * x7 * x47 -31 * x7 * x48 +44 * x7 * x49 -10 * x7 * x50 +15 * x7 * x51 -10 * x7 * x52 +18 * x7 * x53 -9 * x7 * x54 -26 * x7 * x55 +2 * x7 * x56 +2 * x7 * x57 -9 * x7 * x58 -14 * x7 * x59 +12 * x7 * x60 +44 * x7 * x61 +3 * x7 * x62 +3 * x7 * x63 +41 * x7 * x64 -x7 * x65 +24 * x7 * x66 -15 * x7 * x67 +14 * x7 * x68 -2 * x7 * x69 +7 * x7 * x70 -20 * x7 * x71 +21 * x7 * x72 -3 * x7 * x73 -18 * x7 * x74 +17 * x7 * x75 -36 * x8 * x9 -16 * x8 * x10 +5 * x8 * x11 -4 * x8 * x12 +3 * x8 * x13 -7 * x8 * x14 +8 * x8 * x15 -x8 * x16 +32 * x8 * x17 -24 * x8 * x18 +16 * x8 * x19 -17 * x8 * x20 +28 * x8 * x21 -12 * x8 * x22 -15 * x8 * x23 -15 * x8 * x24 +20 * x8 * x25 -3 * x8 * x26 +21 * x8 * x27 -22 * x8 * x28 -19 * x8 * x29 +22 * x8 * x30 +20 * x8 * x31 -42 * x8 * x32 +19 * x8 * x33 -5 * x8 * x34 -16 * x8 * x35 +2 * x8 * x36 -11 * x8 * x37 -26 * x8 * x38 +44 * x8 * x39 +21 * x8 * x40 -8 * x8 * x41 +21 * x8 * x43 +7 * x8 * x44 +10 * x8 * x45 -16 * x8 * x46 -5 * x8 * x47 +4 * x8 * x48 +8 * x8 * x49 +2 * x8 * x50 -25 * x8 * x51 -5 * x8 * x52 -7 * x8 * x53 +21 * x8 * x54 +3 * x8 * x55 +7 * x8 * x56 -3 * x8 * x57 +2 * x8 * x58 +8 * x8 * x59 -2 * x8 * x60 -26 * x8 * x61 +15 * x8 * x62 -23 * x8 * x63 -6 * x8 * x64 -14 * x8 * x65 -14 * x8 * x66 -8 * x8 * x67 -38 * x8 * x68 -11 * x8 * x69 -7 * x8 * x70 +5 * x8 * x71 +6 * x8 * x72 +21 * x8 * x73 +10 * x8 * x74 +3 * x8 * x75 -8 * x9 * x10 -38 * x9 * x11 -24 * x9 * x12 -7 * x9 * x13 -8 * x9 * x14 -9 * x9 * x15 -4 * x9 * x16 +5 * x9 * x17 +x9 * x18 -22 * x9 * x19 +20 * x9 * x20 -17 * x9 * x21 +10 * x9 * x22 -17 * x9 * x23 +15 * x9 * x24 -33 * x9 * x25 -10 * x9 * x26 -26 * x9 * x27 +20 * x9 * x28 +8 * x9 * x29 +4 * x9 * x30 -13 * x9 * x31 +35 * x9 * x32 -11 * x9 * x33 -4 * x9 * x34 +13 * x9 * x35 -30 * x9 * x36 +30 * x9 * x37 +16 * x9 * x40 -2 * x9 * x41 -x9 * x42 -27 * x9 * x43 -11 * x9 * x44 -7 * x9 * x45 +19 * x9 * x46 -3 * x9 * x47 -12 * x9 * x48 +21 * x9 * x49 -15 * x9 * x50 +10 * x9 * x51 -25 * x9 * x52 +12 * x9 * x53 -10 * x9 * x54 +7 * x9 * x55 -23 * x9 * x56 +20 * x9 * x57 -7 * x9 * x58 +18 * x9 * x59 -2 * x9 * x60 +5 * x9 * x61 -14 * x9 * x62 +21 * x9 * x63 +26 * x9 * x64 +x9 * x65 +36 * x9 * x66 +7 * x9 * x67 +31 * x9 * x68 +5 * x9 * x69 +3 * x9 * x70 -29 * x9 * x71 +32 * x9 * x72 -16 * x9 * x73 -4 * x9 * x74 +22 * x9 * x75 -29 * x10 * x11 -13 * x10 * x12 -10 * x10 * x13 -x10 * x14 -29 * x10 * x15 +28 * x10 * x16 +5 * x10 * x17 +10 * x10 * x18 -33 * x10 * x19 +40 * x10 * x20 -4 * x10 * x21 -14 * x10 * x22 -12 * x10 * x23 +6 * x10 * x24 -9 * x10 * x25 -31 * x10 * x26 +23 * x10 * x27 +28 * x10 * x28 -13 * x10 * x29 -4 * x10 * x30 -9 * x10 * x31 -33 * x10 * x32 -3 * x10 * x33 -5 * x10 * x34 +28 * x10 * x35 +2 * x10 * x37 -10 * x10 * x38 -6 * x10 * x39 -5 * x10 * x40 +27 * x10 * x41 -24 * x10 * x42 -23 * x10 * x43 +37 * x10 * x44 -7 * x10 * x45 -22 * x10 * x46 +6 * x10 * x47 +29 * x10 * x48 -3 * x10 * x49 +16 * x10 * x50 -11 * x10 * x51 -28 * x10 * x52 -17 * x10 * x53 +2 * x10 * x54 +19 * x10 * x55 +28 * x10 * x56 +14 * x10 * x57 +24 * x10 * x58 -4 * x10 * x59 +18 * x10 * x60 -14 * x10 * x61 -18 * x10 * x62 +x10 * x63 -6 * x10 * x64 +6 * x10 * x65 +17 * x10 * x66 +35 * x10 * x67 -21 * x10 * x68 -11 * x10 * x69 -17 * x10 * x70 +27 * x10 * x71 -x10 * x72 -11 * x10 * x73 +11 * x10 * x75 -30 * x11 * x12 -12 * x11 * x13 -13 * x11 * x14 +43 * x11 * x15 -21 * x11 * x16 -22 * x11 * x17 -29 * x11 * x18 -27 * x11 * x20 +18 * x11 * x21 -22 * x11 * x22 +27 * x11 * x23 -x11 * x24 +40 * x11 * x25 +3 * x11 * x26 +26 * x11 * x27 -13 * x11 * x28 -5 * x11 * x29 -4 * x11 * x30 -10 * x11 * x31 -15 * x11 * x32 +27 * x11 * x33 -19 * x11 * x34 -10 * x11 * x35 +22 * x11 * x36 +8 * x11 * x37 -17 * x11 * x38 +8 * x11 * x39 -32 * x11 * x40 -9 * x11 * x41 +2 * x11 * x42 +40 * x11 * x43 +13 * x11 * x44 +x11 * x45 +3 * x11 * x46 -13 * x11 * x47 +4 * x11 * x48 -30 * x11 * x49 +55 * x11 * x50 -37 * x11 * x51 +35 * x11 * x52 -12 * x11 * x53 +26 * x11 * x54 -28 * x11 * x55 -10 * x11 * x56 +11 * x11 * x57 -32 * x11 * x58 +9 * x11 * x59 -19 * x11 * x60 -9 * x11 * x61 +16 * x11 * x62 -7 * x11 * x63 -37 * x11 * x64 -2 * x11 * x65 -15 * x11 * x66 +19 * x11 * x67 +4 * x11 * x68 +24 * x11 * x69 +2 * x11 * x70 +6 * x11 * x71 -10 * x11 * x72 +37 * x11 * x73 -4 * x11 * x74 +9 * x11 * x75 -55 * x12 * x13 -27 * x12 * x14 -2 * x12 * x15 +8 * x12 * x16 -6 * x12 * x17 -12 * x12 * x18 +25 * x12 * x19 -22 * x12 * x20 +27 * x12 * x21 +3 * x12 * x22 -12 * x12 * x23 -14 * x12 * x24 -2 * x12 * x25 +3 * x12 * x26 +52 * x12 * x27 -18 * x12 * x28 -x12 * x29 -28 * x12 * x30 +19 * x12 * x31 +3 * x12 * x32 -26 * x12 * x33 -3 * x12 * x34 -15 * x12 * x35 -11 * x12 * x36 +17 * x12 * x38 -11 * x12 * x39 -2 * x12 * x40 -x12 * x41 +x12 * x42 +18 * x12 * x43 +3 * x12 * x44 -x12 * x45 -4 * x12 * x46 +21 * x12 * x47 +24 * x12 * x48 -9 * x12 * x49 -29 * x12 * x50 -4 * x12 * x51 -17 * x12 * x52 -18 * x12 * x53 +18 * x12 * x54 +26 * x12 * x55 +35 * x12 * x56 -10 * x12 * x57 +10 * x12 * x58 -4 * x12 * x59 -13 * x12 * x60 +8 * x12 * x61 +15 * x12 * x62 -15 * x12 * x63 -9 * x12 * x64 -6 * x12 * x65 -25 * x12 * x66 -9 * x12 * x67 -31 * x12 * x68 -32 * x12 * x69 -9 * x12 * x70 -7 * x12 * x71 -10 * x12 * x72 -21 * x12 * x73 -19 * x12 * x74 -11 * x12 * x75 -17 * x13 * x14 -3 * x13 * x15 -31 * x13 * x16 +4 * x13 * x17 -19 * x13 * x18 -11 * x13 * x19 +46 * x13 * x20 -10 * x13 * x21 -x13 * x22 +13 * x13 * x23 -16 * x13 * x24 +21 * x13 * x25 -25 * x13 * x26 -12 * x13 * x27 +5 * x13 * x28 +6 * x13 * x29 +25 * x13 * x30 -27 * x13 * x31 -20 * x13 * x32 +27 * x13 * x33 +10 * x13 * x34 -6 * x13 * x35 +12 * x13 * x36 -25 * x13 * x37 -14 * x13 * x38 +26 * x13 * x39 -15 * x13 * x40 -8 * x13 * x41 +11 * x13 * x42 +15 * x13 * x43 -19 * x13 * x44 +5 * x13 * x45 -2 * x13 * x46 -x13 * x47 +2 * x13 * x48 -5 * x13 * x49 +10 * x13 * x50 -16 * x13 * x51 +24 * x13 * x52 +2 * x13 * x53 -11 * x13 * x54 -9 * x13 * x55 -6 * x13 * x56 +17 * x13 * x57 +4 * x13 * x58 +3 * x13 * x59 -8 * x13 * x60 -27 * x13 * x61 -4 * x13 * x62 +7 * x13 * x63 +3 * x13 * x64 -19 * x13 * x65 +12 * x13 * x66 -9 * x13 * x67 -x13 * x68 +37 * x13 * x69 +9 * x13 * x70 +4 * x13 * x71 -5 * x13 * x72 +29 * x13 * x73 +40 * x13 * x74 +7 * x13 * x75 -34 * x14 * x15 -5 * x14 * x16 -9 * x14 * x17 -2 * x14 * x18 +10 * x14 * x19 +6 * x14 * x20 +7 * x14 * x21 -2 * x14 * x22 -4 * x14 * x23 -16 * x14 * x24 -7 * x14 * x25 +7 * x14 * x26 -22 * x14 * x27 -6 * x14 * x29 -5 * x14 * x30 +6 * x14 * x31 +19 * x14 * x33 +14 * x14 * x34 -9 * x14 * x35 -5 * x14 * x36 -7 * x14 * x37 -11 * x14 * x38 +10 * x14 * x39 -13 * x14 * x40 +8 * x14 * x41 +10 * x14 * x42 -27 * x14 * x43 -2 * x14 * x44 +3 * x14 * x45 -10 * x14 * x46 +12 * x14 * x47 +6 * x14 * x48 +18 * x14 * x49 +3 * x14 * x50 -16 * x14 * x51 +18 * x14 * x52 +17 * x14 * x53 -6 * x14 * x54 -24 * x14 * x55 -7 * x14 * x56 -x14 * x57 +24 * x14 * x58 -21 * x14 * x59 +38 * x14 * x60 -10 * x14 * x61 +27 * x14 * x62 +4 * x14 * x63 +21 * x14 * x64 +7 * x14 * x65 +16 * x14 * x66 +11 * x14 * x67 +2 * x14 * x68 +10 * x14 * x69 -17 * x14 * x70 -18 * x14 * x71 -14 * x14 * x72 +9 * x14 * x73 -22 * x14 * x74 -4 * x14 * x75 -43 * x15 * x16 -9 * x15 * x18 -35 * x15 * x20 -9 * x15 * x21 +11 * x15 * x22 +4 * x15 * x23 -7 * x15 * x24 +2 * x15 * x26 +28 * x15 * x27 -17 * x15 * x28 -5 * x15 * x29 +2 * x15 * x30 -7 * x15 * x31 +9 * x15 * x32 +25 * x15 * x33 -20 * x15 * x34 -19 * x15 * x35 +3 * x15 * x36 +9 * x15 * x37 -7 * x15 * x38 -14 * x15 * x39 +13 * x15 * x40 +19 * x15 * x41 -27 * x15 * x42 +38 * x15 * x43 -15 * x15 * x44 +2 * x15 * x45 +28 * x15 * x46 -23 * x15 * x47 -24 * x15 * x48 -3 * x15 * x49 +5 * x15 * x50 -17 * x15 * x51 +26 * x15 * x52 -x15 * x53 +12 * x15 * x54 +8 * x15 * x55 -17 * x15 * x56 +10 * x15 * x57 -28 * x15 * x58 +5 * x15 * x59 -7 * x15 * x60 -15 * x15 * x61 +14 * x15 * x62 -26 * x15 * x63 -11 * x15 * x64 -14 * x15 * x65 -15 * x15 * x66 -34 * x15 * x67 +27 * x15 * x68 -32 * x15 * x69 +45 * x15 * x70 +3 * x15 * x71 -10 * x15 * x72 +10 * x15 * x73 +24 * x15 * x74 -4 * x15 * x75 -29 * x16 * x17 -10 * x16 * x18 -15 * x16 * x19 -7 * x16 * x20 +24 * x16 * x21 +4 * x16 * x22 -19 * x16 * x23 +3 * x16 * x24 -8 * x16 * x25 -3 * x16 * x26 -8 * x16 * x27 +10 * x16 * x28 +4 * x16 * x29 -26 * x16 * x30 +4 * x16 * x31 -22 * x16 * x32 -24 * x16 * x33 +36 * x16 * x34 +33 * x16 * x35 -19 * x16 * x36 +x16 * x37 -6 * x16 * x38 -2 * x16 * x39 -12 * x16 * x40 +6 * x16 * x41 -23 * x16 * x42 -17 * x16 * x43 +8 * x16 * x44 -15 * x16 * x45 -6 * x16 * x46 +44 * x16 * x47 +26 * x16 * x48 -15 * x16 * x49 +5 * x16 * x50 +7 * x16 * x51 -26 * x16 * x52 -31 * x16 * x53 +40 * x16 * x54 +6 * x16 * x55 -6 * x16 * x56 +13 * x16 * x57 +10 * x16 * x58 -6 * x16 * x59 +25 * x16 * x60 -9 * x16 * x61 -14 * x16 * x62 -21 * x16 * x63 -8 * x16 * x64 +21 * x16 * x65 -11 * x16 * x66 +43 * x16 * x67 -33 * x16 * x68 -18 * x16 * x69 -21 * x16 * x70 +20 * x16 * x71 -12 * x16 * x72 -24 * x16 * x73 -23 * x16 * x74 +13 * x16 * x75 -17 * x17 * x18 -2 * x17 * x19 -3 * x17 * x20 +13 * x17 * x21 +11 * x17 * x22 -19 * x17 * x23 -x17 * x24 -11 * x17 * x25 -17 * x17 * x26 -7 * x17 * x27 +23 * x17 * x28 +4 * x17 * x29 +5 * x17 * x30 +x17 * x31 -14 * x17 * x32 +2 * x17 * x33 +5 * x17 * x34 -18 * x17 * x35 +7 * x17 * x36 -6 * x17 * x37 -18 * x17 * x38 +x17 * x39 +36 * x17 * x40 -3 * x17 * x41 -3 * x17 * x42 -x17 * x43 +7 * x17 * x44 -10 * x17 * x45 +19 * x17 * x46 -8 * x17 * x47 -18 * x17 * x48 +20 * x17 * x49 -31 * x17 * x50 -7 * x17 * x51 +17 * x17 * x52 -10 * x17 * x53 +17 * x17 * x54 +9 * x17 * x55 -9 * x17 * x56 +6 * x17 * x57 +23 * x17 * x58 +2 * x17 * x59 +26 * x17 * x60 -12 * x17 * x61 -9 * x17 * x62 -4 * x17 * x63 -x17 * x64 -31 * x17 * x65 +18 * x17 * x66 +7 * x17 * x67 -13 * x17 * x68 -9 * x17 * x69 +5 * x17 * x70 -8 * x17 * x71 -6 * x17 * x72 +4 * x17 * x73 +8 * x17 * x74 -12 * x17 * x75 -20 * x18 * x19 -10 * x18 * x20 -4 * x18 * x21 +11 * x18 * x22 -34 * x18 * x23 +x18 * x24 -24 * x18 * x25 -2 * x18 * x26 -6 * x18 * x27 +22 * x18 * x28 +31 * x18 * x29 -28 * x18 * x30 -8 * x18 * x31 +9 * x18 * x32 -14 * x18 * x33 -10 * x18 * x34 +19 * x18 * x35 -21 * x18 * x36 +12 * x18 * x37 +32 * x18 * x38 -29 * x18 * x39 +19 * x18 * x40 -4 * x18 * x41 -11 * x18 * x42 -9 * x18 * x43 -13 * x18 * x44 -3 * x18 * x45 +26 * x18 * x46 -7 * x18 * x47 -22 * x18 * x48 +16 * x18 * x49 -11 * x18 * x50 +28 * x18 * x51 -6 * x18 * x52 +4 * x18 * x53 -33 * x18 * x54 -3 * x18 * x55 -10 * x18 * x56 +x18 * x57 +12 * x18 * x58 +20 * x18 * x59 +12 * x18 * x60 +54 * x18 * x61 -23 * x18 * x62 +15 * x18 * x63 +19 * x18 * x64 +3 * x18 * x65 +33 * x18 * x66 -10 * x18 * x67 +20 * x18 * x68 -17 * x18 * x69 +26 * x18 * x70 +3 * x18 * x71 -3 * x18 * x72 -16 * x18 * x73 +36 * x18 * x74 -27 * x18 * x75 -7 * x19 * x20 -22 * x19 * x21 -22 * x19 * x22 -30 * x19 * x23 -22 * x19 * x24 -7 * x19 * x25 +8 * x19 * x26 +13 * x19 * x27 -4 * x19 * x28 -8 * x19 * x29 -14 * x19 * x30 +22 * x19 * x31 +x19 * x32 -17 * x19 * x33 +9 * x19 * x34 -20 * x19 * x35 +12 * x19 * x36 -x19 * x37 +19 * x19 * x38 +21 * x19 * x39 -44 * x19 * x40 -5 * x19 * x41 +26 * x19 * x42 +7 * x19 * x43 -4 * x19 * x44 -15 * x19 * x45 -16 * x19 * x46 +9 * x19 * x47 +15 * x19 * x48 +10 * x19 * x49 -27 * x19 * x50 -23 * x19 * x51 +7 * x19 * x52 +29 * x19 * x53 -8 * x19 * x54 -4 * x19 * x55 -10 * x19 * x56 -3 * x19 * x57 +2 * x19 * x58 -18 * x19 * x59 +3 * x19 * x60 -3 * x19 * x61 +5 * x19 * x62 +7 * x19 * x63 -9 * x19 * x64 -11 * x19 * x65 -8 * x19 * x66 -33 * x19 * x67 -8 * x19 * x68 -7 * x19 * x69 -25 * x19 * x70 -4 * x19 * x71 -13 * x19 * x72 +41 * x19 * x73 -21 * x19 * x74 -23 * x19 * x75 -14 * x20 * x21 -29 * x20 * x22 -22 * x20 * x23 +x20 * x24 -14 * x20 * x25 -7 * x20 * x26 -12 * x20 * x27 +48 * x20 * x28 +11 * x20 * x29 -35 * x20 * x30 -x20 * x31 -4 * x20 * x32 -11 * x20 * x33 +11 * x20 * x34 -13 * x20 * x35 -7 * x20 * x36 -6 * x20 * x37 +24 * x20 * x38 +5 * x20 * x39 -24 * x20 * x40 -35 * x20 * x41 +32 * x20 * x42 -9 * x20 * x43 -6 * x20 * x44 +5 * x20 * x45 -10 * x20 * x46 +29 * x20 * x47 -19 * x20 * x50 +9 * x20 * x51 +10 * x20 * x52 -22 * x20 * x53 -33 * x20 * x54 +5 * x20 * x55 +10 * x20 * x56 -13 * x20 * x57 +54 * x20 * x58 -18 * x20 * x59 +17 * x20 * x60 +6 * x20 * x61 -10 * x20 * x62 +2 * x20 * x63 -15 * x20 * x64 -12 * x20 * x65 +12 * x20 * x66 -4 * x20 * x67 +15 * x20 * x68 +8 * x20 * x69 -11 * x20 * x70 +12 * x20 * x71 -15 * x20 * x72 +9 * x20 * x73 -7 * x20 * x74 -29 * x20 * x75 -34 * x21 * x22 -6 * x21 * x23 -27 * x21 * x24 +21 * x21 * x25 -10 * x21 * x26 -4 * x21 * x27 -9 * x21 * x28 +8 * x21 * x29 -20 * x21 * x30 -2 * x21 * x31 -16 * x21 * x32 +17 * x21 * x33 +11 * x21 * x34 -11 * x21 * x35 +4 * x21 * x36 +7 * x21 * x37 -14 * x21 * x38 -7 * x21 * x39 -10 * x21 * x40 +x21 * x41 -3 * x21 * x42 -4 * x21 * x43 +47 * x21 * x44 -3 * x21 * x45 -11 * x21 * x46 -x21 * x47 -6 * x21 * x48 -18 * x21 * x49 +43 * x21 * x50 -10 * x21 * x51 +4 * x21 * x52 -20 * x21 * x53 +32 * x21 * x54 -15 * x21 * x55 -7 * x21 * x56 +28 * x21 * x57 +8 * x21 * x58 -4 * x21 * x59 +6 * x21 * x60 -14 * x21 * x61 -24 * x21 * x62 -15 * x21 * x63 -27 * x21 * x64 -5 * x21 * x65 +7 * x21 * x66 +15 * x21 * x67 -16 * x21 * x68 +11 * x21 * x69 +17 * x21 * x70 +7 * x21 * x71 -20 * x21 * x72 -8 * x21 * x73 +12 * x21 * x74 -17 * x21 * x75 -25 * x22 * x23 -10 * x22 * x24 -19 * x22 * x25 -6 * x22 * x26 -23 * x22 * x27 -6 * x22 * x28 +12 * x22 * x29 -8 * x22 * x30 -15 * x22 * x31 +13 * x22 * x32 +2 * x22 * x33 +5 * x22 * x34 +16 * x22 * x35 -14 * x22 * x36 +2 * x22 * x37 -7 * x22 * x38 -10 * x22 * x39 +27 * x22 * x40 -x22 * x41 -19 * x22 * x42 -8 * x22 * x43 -17 * x22 * x44 -4 * x22 * x45 +28 * x22 * x46 +8 * x22 * x47 -23 * x22 * x48 +38 * x22 * x49 -37 * x22 * x50 +11 * x22 * x51 -13 * x22 * x52 +x22 * x53 +12 * x22 * x54 -5 * x22 * x55 -16 * x22 * x56 -20 * x22 * x57 -4 * x22 * x58 +43 * x22 * x59 +18 * x22 * x60 -17 * x22 * x61 -5 * x22 * x62 -9 * x22 * x63 +58 * x22 * x64 +18 * x22 * x65 +29 * x22 * x66 +12 * x22 * x67 -21 * x22 * x68 -12 * x22 * x69 +28 * x22 * x70 +12 * x22 * x71 +9 * x22 * x72 -23 * x22 * x73 +9 * x22 * x74 -x22 * x75 -26 * x23 * x24 +3 * x23 * x25 -11 * x23 * x26 +7 * x23 * x27 -13 * x23 * x28 -23 * x23 * x29 +16 * x23 * x30 -3 * x23 * x31 -24 * x23 * x32 +7 * x23 * x33 +3 * x23 * x34 -7 * x23 * x35 -3 * x23 * x36 -3 * x23 * x37 -18 * x23 * x38 +4 * x23 * x39 -2 * x23 * x40 -8 * x23 * x41 +30 * x23 * x43 +5 * x23 * x44 -2 * x23 * x45 +15 * x23 * x46 -26 * x23 * x47 +8 * x23 * x48 -10 * x23 * x49 +28 * x23 * x50 -18 * x23 * x51 -5 * x23 * x52 -9 * x23 * x53 +18 * x23 * x54 -4 * x23 * x55 +6 * x23 * x56 -12 * x23 * x57 -14 * x23 * x58 -17 * x23 * x59 -11 * x23 * x60 +8 * x23 * x61 +19 * x23 * x62 +11 * x23 * x63 -18 * x23 * x64 +x23 * x65 -30 * x23 * x66 -11 * x23 * x68 +27 * x23 * x69 -22 * x23 * x70 -22 * x23 * x71 -4 * x23 * x72 +6 * x23 * x73 +14 * x23 * x74 +2 * x23 * x75 -5 * x24 * x25 -24 * x24 * x26 -12 * x24 * x27 -4 * x24 * x28 -22 * x24 * x29 -14 * x24 * x30 -14 * x24 * x31 +12 * x24 * x32 -13 * x24 * x33 -20 * x24 * x34 +31 * x24 * x35 -9 * x24 * x36 -14 * x24 * x37 -7 * x24 * x38 -14 * x24 * x39 +25 * x24 * x40 +x24 * x41 -14 * x24 * x42 +18 * x24 * x43 -17 * x24 * x44 +24 * x24 * x45 +x24 * x46 +13 * x24 * x47 -5 * x24 * x48 +19 * x24 * x49 -8 * x24 * x50 -5 * x24 * x51 -27 * x24 * x52 -x24 * x53 +19 * x24 * x54 -10 * x24 * x55 +10 * x24 * x56 -16 * x24 * x57 -25 * x24 * x58 +33 * x24 * x59 -28 * x24 * x60 +23 * x24 * x61 -29 * x24 * x62 +3 * x24 * x63 +32 * x24 * x64 +4 * x24 * x65 +16 * x24 * x66 +16 * x24 * x67 +23 * x24 * x68 +18 * x24 * x69 -9 * x24 * x70 +18 * x24 * x71 +33 * x24 * x72 -11 * x24 * x73 -16 * x24 * x74 +40 * x24 * x75 -26 * x25 * x26 -7 * x25 * x27 -36 * x25 * x28 -30 * x25 * x29 +23 * x25 * x30 -16 * x25 * x31 -17 * x25 * x32 +33 * x25 * x33 -14 * x25 * x34 -4 * x25 * x35 +17 * x25 * x36 -18 * x25 * x37 -2 * x25 * x38 +10 * x25 * x39 -7 * x25 * x40 +7 * x25 * x41 -17 * x25 * x42 +20 * x25 * x43 -5 * x25 * x44 +22 * x25 * x45 -9 * x25 * x46 -10 * x25 * x47 +12 * x25 * x48 -29 * x25 * x49 +18 * x25 * x50 -15 * x25 * x51 +14 * x25 * x52 +4 * x25 * x53 +21 * x25 * x54 -29 * x25 * x55 +43 * x25 * x56 -2 * x25 * x57 -4 * x25 * x58 +9 * x25 * x59 -26 * x25 * x60 -20 * x25 * x61 +39 * x25 * x62 -6 * x25 * x63 -21 * x25 * x64 +3 * x25 * x65 -22 * x25 * x66 +8 * x25 * x67 -17 * x25 * x68 +12 * x25 * x69 -13 * x25 * x70 -x25 * x71 +17 * x25 * x72 +27 * x25 * x73 +7 * x25 * x74 +23 * x25 * x75 -30 * x26 * x27 -7 * x26 * x28 -12 * x26 * x29 -45 * x26 * x30 +6 * x26 * x31 +x26 * x32 +32 * x26 * x33 -6 * x26 * x34 -23 * x26 * x35 +7 * x26 * x36 -12 * x26 * x37 +33 * x26 * x38 -29 * x26 * x39 -22 * x26 * x40 -13 * x26 * x41 +4 * x26 * x42 +6 * x26 * x43 +15 * x26 * x44 +18 * x26 * x45 +15 * x26 * x46 -2 * x26 * x47 -14 * x26 * x48 -15 * x26 * x49 +6 * x26 * x50 +x26 * x51 -3 * x26 * x52 -14 * x26 * x53 -3 * x26 * x54 +2 * x26 * x55 +x26 * x56 +3 * x26 * x57 -9 * x26 * x58 -18 * x26 * x59 -15 * x26 * x60 +34 * x26 * x61 +34 * x26 * x62 +25 * x26 * x63 -16 * x26 * x64 -16 * x26 * x65 -32 * x26 * x66 -8 * x26 * x67 +36 * x26 * x68 -26 * x26 * x69 +15 * x26 * x70 +10 * x26 * x71 -34 * x26 * x72 -46 * x26 * x73 -16 * x26 * x74 -24 * x26 * x75 -23 * x27 * x28 -13 * x27 * x29 -20 * x27 * x30 +3 * x27 * x31 -16 * x27 * x32 -28 * x27 * x33 -x27 * x35 -15 * x27 * x36 -22 * x27 * x37 +4 * x27 * x38 +12 * x27 * x39 -12 * x27 * x40 -21 * x27 * x41 +7 * x27 * x42 +41 * x27 * x43 -22 * x27 * x44 +2 * x27 * x45 -4 * x27 * x46 +10 * x27 * x47 +8 * x27 * x48 -13 * x27 * x49 +6 * x27 * x50 -4 * x27 * x51 -7 * x27 * x52 -31 * x27 * x53 +13 * x27 * x54 +29 * x27 * x55 +5 * x27 * x56 -7 * x27 * x57 -4 * x27 * x58 +8 * x27 * x59 -18 * x27 * x60 -12 * x27 * x61 -8 * x27 * x62 -15 * x27 * x63 -18 * x27 * x64 -28 * x27 * x65 -19 * x27 * x66 -14 * x27 * x67 -26 * x27 * x68 -10 * x27 * x69 +9 * x27 * x71 -15 * x27 * x72 +3 * x27 * x74 -16 * x27 * x75 +7 * x28 * x29 -44 * x28 * x30 -2 * x28 * x32 -19 * x28 * x33 -8 * x28 * x34 -16 * x28 * x35 +6 * x28 * x36 +11 * x28 * x37 -x28 * x38 -3 * x28 * x39 -2 * x28 * x40 +3 * x28 * x41 +30 * x28 * x42 -32 * x28 * x43 -4 * x28 * x44 -7 * x28 * x45 -2 * x28 * x46 +6 * x28 * x47 -8 * x28 * x48 +5 * x28 * x49 -10 * x28 * x50 +8 * x28 * x51 +25 * x28 * x52 -20 * x28 * x53 -6 * x28 * x54 -21 * x28 * x55 +2 * x28 * x56 -3 * x28 * x57 +8 * x28 * x58 -13 * x28 * x59 +31 * x28 * x60 +20 * x28 * x61 -25 * x28 * x62 +8 * x28 * x63 -22 * x28 * x64 +4 * x28 * x65 +22 * x28 * x66 +10 * x28 * x67 +5 * x28 * x68 -2 * x28 * x69 -3 * x28 * x70 +11 * x28 * x71 -7 * x28 * x72 +15 * x28 * x73 -17 * x28 * x74 -24 * x28 * x75 -58 * x29 * x30 -16 * x29 * x31 -3 * x29 * x32 -35 * x29 * x33 +x29 * x34 -24 * x29 * x35 -x29 * x36 +17 * x29 * x37 +29 * x29 * x38 +3 * x29 * x39 -14 * x29 * x40 -14 * x29 * x41 -3 * x29 * x42 -25 * x29 * x43 +8 * x29 * x44 -16 * x29 * x45 -7 * x29 * x46 +16 * x29 * x47 -43 * x29 * x48 +43 * x29 * x49 -16 * x29 * x50 +19 * x29 * x51 +28 * x29 * x52 -23 * x29 * x53 -12 * x29 * x54 -2 * x29 * x55 -35 * x29 * x56 +12 * x29 * x57 -10 * x29 * x59 +56 * x29 * x60 -2 * x29 * x61 -26 * x29 * x62 +23 * x29 * x63 +15 * x29 * x64 +8 * x29 * x65 +61 * x29 * x66 +9 * x29 * x67 -20 * x29 * x68 +3 * x29 * x69 +44 * x29 * x70 -16 * x29 * x71 -32 * x29 * x72 -x29 * x73 +3 * x29 * x74 -34 * x29 * x75 -33 * x30 * x31 -42 * x30 * x32 +38 * x30 * x33 -25 * x30 * x34 -7 * x30 * x36 +28 * x30 * x37 -58 * x30 * x38 +30 * x30 * x39 +36 * x30 * x40 +19 * x30 * x41 -21 * x30 * x42 -12 * x30 * x43 -29 * x30 * x44 +7 * x30 * x45 +11 * x30 * x46 -33 * x30 * x47 +12 * x30 * x48 -5 * x30 * x49 +14 * x30 * x50 -11 * x30 * x51 +29 * x30 * x53 -5 * x30 * x54 -18 * x30 * x55 +22 * x30 * x56 +29 * x30 * x57 -31 * x30 * x58 -2 * x30 * x59 -28 * x30 * x60 -6 * x30 * x61 +24 * x30 * x62 -18 * x30 * x63 +17 * x30 * x64 +x30 * x65 -16 * x30 * x66 -22 * x30 * x67 -x30 * x68 +16 * x30 * x69 +15 * x30 * x70 -15 * x30 * x71 +44 * x30 * x72 +41 * x30 * x73 +34 * x30 * x74 +69 * x30 * x75 -21 * x31 * x32 -39 * x31 * x33 +18 * x31 * x34 -33 * x31 * x35 -16 * x31 * x36 -18 * x31 * x37 +13 * x31 * x38 +4 * x31 * x39 +8 * x31 * x40 +8 * x31 * x41 +8 * x31 * x42 -7 * x31 * x43 -6 * x31 * x44 +x31 * x45 -11 * x31 * x46 -21 * x31 * x47 +22 * x31 * x48 -30 * x31 * x50 -4 * x31 * x51 +12 * x31 * x52 +2 * x31 * x53 +5 * x31 * x54 +9 * x31 * x55 -13 * x31 * x56 +40 * x31 * x58 -18 * x31 * x59 +24 * x31 * x60 -10 * x31 * x61 +6 * x31 * x62 -27 * x31 * x63 +14 * x31 * x64 -10 * x31 * x65 -8 * x31 * x66 -14 * x31 * x67 -16 * x31 * x68 +23 * x31 * x69 -30 * x31 * x70 -28 * x31 * x71 -19 * x31 * x72 -x31 * x73 -35 * x31 * x74 -49 * x31 * x75 -35 * x32 * x33 -22 * x32 * x34 -8 * x32 * x35 -10 * x32 * x36 -26 * x32 * x37 +9 * x32 * x38 -11 * x32 * x39 +10 * x32 * x40 +19 * x32 * x42 -4 * x32 * x43 -22 * x32 * x44 -15 * x32 * x45 +3 * x32 * x46 +16 * x32 * x47 -40 * x32 * x48 +15 * x32 * x49 -24 * x32 * x50 +38 * x32 * x51 -15 * x32 * x52 +24 * x32 * x53 -34 * x32 * x54 -15 * x32 * x55 -13 * x32 * x56 -19 * x32 * x57 +5 * x32 * x58 +8 * x32 * x59 -7 * x32 * x60 +23 * x32 * x61 -33 * x32 * x62 +2 * x32 * x63 +16 * x32 * x64 +16 * x32 * x65 +7 * x32 * x66 -10 * x32 * x67 +44 * x32 * x68 -11 * x32 * x69 +19 * x32 * x70 +10 * x32 * x71 -9 * x32 * x72 -24 * x32 * x73 +3 * x32 * x74 -3 * x32 * x75 -28 * x33 * x34 -4 * x33 * x35 -5 * x33 * x36 -22 * x33 * x38 +3 * x33 * x39 +15 * x33 * x40 +5 * x33 * x41 -27 * x33 * x42 +5 * x33 * x43 +10 * x33 * x44 +35 * x33 * x45 -x33 * x46 -13 * x33 * x47 -10 * x33 * x48 -30 * x33 * x49 +18 * x33 * x50 -29 * x33 * x51 +17 * x33 * x52 +16 * x33 * x53 +8 * x33 * x54 -21 * x33 * x55 +3 * x33 * x56 +8 * x33 * x57 -30 * x33 * x58 -x33 * x59 -35 * x33 * x60 -5 * x33 * x61 +61 * x33 * x62 +14 * x33 * x63 -18 * x33 * x64 +3 * x33 * x65 -16 * x33 * x66 -14 * x33 * x67 +25 * x33 * x68 -20 * x33 * x69 +8 * x33 * x70 -4 * x33 * x71 +13 * x33 * x72 +14 * x33 * x73 +23 * x33 * x74 +17 * x33 * x75 -17 * x34 * x35 -16 * x34 * x36 -37 * x34 * x37 +6 * x34 * x38 +11 * x34 * x39 -9 * x34 * x40 -15 * x34 * x41 -11 * x34 * x42 -4 * x34 * x43 -7 * x34 * x44 -27 * x34 * x45 -11 * x34 * x46 +31 * x34 * x47 +7 * x34 * x48 -12 * x34 * x49 -2 * x34 * x50 +7 * x34 * x51 -x34 * x52 -22 * x34 * x53 +13 * x34 * x55 +2 * x34 * x56 -14 * x34 * x57 +47 * x34 * x58 -4 * x34 * x59 +24 * x34 * x60 -7 * x34 * x61 -4 * x34 * x62 -3 * x34 * x63 -x34 * x64 -4 * x34 * x65 -13 * x34 * x66 +21 * x34 * x67 -26 * x34 * x68 +3 * x34 * x69 -32 * x34 * x70 -18 * x34 * x71 -33 * x34 * x72 +10 * x34 * x73 -16 * x34 * x74 -37 * x34 * x75 -36 * x35 * x36 +4 * x35 * x37 -31 * x35 * x38 -19 * x35 * x39 +14 * x35 * x40 -8 * x35 * x41 -7 * x35 * x42 -5 * x35 * x43 +17 * x35 * x44 -11 * x35 * x45 -12 * x35 * x46 +25 * x35 * x47 +7 * x35 * x48 +9 * x35 * x49 -18 * x35 * x51 -23 * x35 * x52 +9 * x35 * x53 +7 * x35 * x54 -3 * x35 * x55 +4 * x35 * x56 -7 * x35 * x57 -25 * x35 * x58 +39 * x35 * x59 -22 * x35 * x60 -3 * x35 * x61 -9 * x35 * x62 +x35 * x63 +23 * x35 * x64 +9 * x35 * x65 +x35 * x66 +27 * x35 * x67 +22 * x35 * x68 +3 * x35 * x69 -7 * x35 * x70 +27 * x35 * x71 +39 * x35 * x72 -25 * x35 * x73 +11 * x35 * x74 +48 * x35 * x75 -34 * x36 * x37 -16 * x36 * x38 +7 * x36 * x39 -24 * x36 * x40 +10 * x36 * x41 -12 * x36 * x42 +25 * x36 * x44 +9 * x36 * x45 -4 * x36 * x46 -26 * x36 * x47 +5 * x36 * x48 -33 * x36 * x49 +10 * x36 * x50 -9 * x36 * x51 +16 * x36 * x52 +19 * x36 * x53 -4 * x36 * x54 -18 * x36 * x55 +34 * x36 * x56 -5 * x36 * x57 -8 * x36 * x58 -19 * x36 * x59 -18 * x36 * x60 -9 * x36 * x61 +7 * x36 * x63 -22 * x36 * x64 +11 * x36 * x65 +x36 * x66 -3 * x36 * x67 -8 * x36 * x68 +12 * x36 * x69 -16 * x36 * x70 +66 * x36 * x71 +8 * x36 * x72 +29 * x36 * x73 -21 * x36 * x74 -7 * x36 * x75 -14 * x37 * x38 -34 * x37 * x39 -15 * x37 * x40 +3 * x37 * x41 +7 * x37 * x42 -41 * x37 * x43 +18 * x37 * x44 +15 * x37 * x45 +8 * x37 * x46 -16 * x37 * x47 -2 * x37 * x48 +6 * x37 * x49 +18 * x37 * x50 -25 * x37 * x51 +x37 * x52 +22 * x37 * x53 -15 * x37 * x54 -20 * x37 * x55 -27 * x37 * x56 +47 * x37 * x57 -37 * x37 * x58 +25 * x37 * x59 +31 * x37 * x60 -6 * x37 * x61 -8 * x37 * x62 -7 * x37 * x63 -22 * x37 * x64 +24 * x37 * x65 +45 * x37 * x66 -17 * x37 * x67 +22 * x37 * x68 -7 * x37 * x69 +14 * x37 * x70 -9 * x37 * x71 +21 * x37 * x72 -12 * x37 * x73 +6 * x37 * x74 +21 * x37 * x75 -31 * x38 * x39 -35 * x38 * x40 -5 * x38 * x41 +13 * x38 * x42 -3 * x38 * x43 -14 * x38 * x44 -18 * x38 * x45 +7 * x38 * x46 +14 * x38 * x47 -11 * x38 * x48 -8 * x38 * x49 -16 * x38 * x50 +7 * x38 * x51 +5 * x38 * x52 -16 * x38 * x53 -15 * x38 * x54 +10 * x38 * x55 -26 * x38 * x56 -7 * x38 * x57 +29 * x38 * x58 -25 * x38 * x59 +24 * x38 * x60 +24 * x38 * x61 -4 * x38 * x62 +23 * x38 * x63 -20 * x38 * x64 -x38 * x65 +x38 * x66 -15 * x38 * x67 +6 * x38 * x68 -21 * x38 * x69 +19 * x38 * x70 +x38 * x71 -21 * x38 * x72 -26 * x38 * x73 +25 * x38 * x74 -58 * x38 * x75 -19 * x39 * x40 -14 * x39 * x41 -18 * x39 * x42 +15 * x39 * x43 -29 * x39 * x44 -19 * x39 * x45 -8 * x39 * x46 -4 * x39 * x47 -4 * x39 * x48 +19 * x39 * x49 -8 * x39 * x50 -16 * x39 * x51 -5 * x39 * x52 +7 * x39 * x53 +20 * x39 * x54 -20 * x39 * x55 +20 * x39 * x56 -4 * x39 * x57 +11 * x39 * x58 -6 * x39 * x59 -x39 * x60 -10 * x39 * x61 -x39 * x62 +7 * x39 * x63 +21 * x39 * x64 -14 * x39 * x65 -3 * x39 * x66 +x39 * x67 -27 * x39 * x68 +14 * x39 * x69 -7 * x39 * x70 -14 * x39 * x71 +23 * x39 * x72 +50 * x39 * x73 -26 * x39 * x74 +12 * x39 * x75 -11 * x40 * x41 -32 * x40 * x42 -34 * x40 * x43 +4 * x40 * x46 -16 * x40 * x47 -25 * x40 * x48 +21 * x40 * x49 -20 * x40 * x50 +12 * x40 * x51 -20 * x40 * x52 +6 * x40 * x53 +10 * x40 * x54 -15 * x40 * x55 +17 * x40 * x56 -7 * x40 * x57 +20 * x40 * x59 -5 * x40 * x60 +15 * x40 * x61 +3 * x40 * x62 -10 * x40 * x63 +38 * x40 * x64 -x40 * x65 +22 * x40 * x66 -3 * x40 * x67 +22 * x40 * x68 -11 * x40 * x69 -6 * x40 * x70 -3 * x40 * x71 +43 * x40 * x72 -24 * x40 * x73 +3 * x40 * x74 +28 * x40 * x75 -39 * x41 * x42 -31 * x41 * x43 -11 * x41 * x44 +2 * x41 * x45 +22 * x41 * x46 -38 * x41 * x47 +12 * x41 * x48 -23 * x41 * x49 +4 * x41 * x50 -11 * x41 * x51 -9 * x41 * x52 +3 * x41 * x53 +9 * x41 * x54 -5 * x41 * x55 +15 * x41 * x56 +17 * x41 * x57 +10 * x41 * x58 -5 * x41 * x59 +10 * x41 * x60 -27 * x41 * x61 +18 * x41 * x62 -21 * x41 * x63 -6 * x41 * x64 +44 * x41 * x65 -9 * x41 * x66 -6 * x41 * x68 -4 * x41 * x69 +15 * x41 * x70 -35 * x41 * x71 -2 * x41 * x72 -7 * x41 * x73 +7 * x41 * x74 +13 * x41 * x75 -17 * x42 * x43 -11 * x42 * x44 -21 * x42 * x45 -16 * x42 * x46 +14 * x42 * x47 -5 * x42 * x48 -20 * x42 * x49 -2 * x42 * x50 -28 * x42 * x51 +30 * x42 * x52 +3 * x42 * x53 -12 * x42 * x54 -6 * x42 * x55 -47 * x42 * x56 -2 * x42 * x57 -13 * x42 * x58 +6 * x42 * x59 +11 * x42 * x60 +8 * x42 * x61 -16 * x42 * x62 -7 * x42 * x63 -18 * x42 * x64 -16 * x42 * x65 -2 * x42 * x66 -22 * x42 * x67 -14 * x42 * x68 +3 * x42 * x69 +5 * x42 * x70 -x42 * x71 -26 * x42 * x72 +22 * x42 * x73 -6 * x42 * x74 -24 * x42 * x75 -17 * x43 * x44 -2 * x43 * x45 -6 * x43 * x46 +2 * x43 * x47 -x43 * x48 -15 * x43 * x49 +11 * x43 * x50 -27 * x43 * x51 -16 * x43 * x52 -24 * x43 * x53 +4 * x43 * x54 +36 * x43 * x55 +22 * x43 * x56 -28 * x43 * x57 -10 * x43 * x58 +6 * x43 * x59 -41 * x43 * x60 -4 * x43 * x61 -7 * x43 * x62 -3 * x43 * x63 +2 * x43 * x64 -39 * x43 * x65 -38 * x43 * x66 +4 * x43 * x67 -4 * x43 * x68 +21 * x43 * x69 +4 * x43 * x70 +16 * x43 * x71 -11 * x43 * x72 +16 * x43 * x73 +13 * x43 * x74 +x43 * x75 -15 * x44 * x45 -24 * x44 * x46 -13 * x44 * x47 +3 * x44 * x48 -12 * x44 * x49 +9 * x44 * x50 -28 * x44 * x51 -x44 * x52 +10 * x44 * x54 -2 * x44 * x55 +22 * x44 * x56 +36 * x44 * x57 -12 * x44 * x58 -13 * x44 * x59 -3 * x44 * x60 -16 * x44 * x61 +11 * x44 * x62 +17 * x44 * x63 -30 * x44 * x64 +5 * x44 * x65 +19 * x44 * x66 +28 * x44 * x67 -2 * x44 * x68 +5 * x44 * x69 -26 * x44 * x70 +8 * x44 * x71 -4 * x44 * x72 -13 * x44 * x73 -20 * x44 * x74 +15 * x44 * x75 -22 * x45 * x46 -22 * x45 * x47 -15 * x45 * x48 -17 * x45 * x49 +6 * x45 * x50 -3 * x45 * x51 -6 * x45 * x52 +11 * x45 * x53 +11 * x45 * x54 -15 * x45 * x55 +13 * x45 * x56 +22 * x45 * x57 -28 * x45 * x58 -3 * x45 * x59 -13 * x45 * x60 -x45 * x61 +26 * x45 * x62 -11 * x45 * x63 +19 * x45 * x65 -12 * x45 * x66 -10 * x45 * x67 +13 * x45 * x68 +7 * x45 * x69 +7 * x45 * x70 -16 * x45 * x71 +14 * x45 * x72 -4 * x45 * x73 +3 * x45 * x74 +10 * x45 * x75 -48 * x46 * x47 -13 * x46 * x48 -8 * x46 * x49 -14 * x46 * x50 -9 * x46 * x51 -2 * x46 * x52 -14 * x46 * x53 +27 * x46 * x54 -8 * x46 * x55 -27 * x46 * x56 +19 * x46 * x57 -7 * x46 * x58 +3 * x46 * x59 +2 * x46 * x60 +8 * x46 * x61 +3 * x46 * x63 -4 * x46 * x64 +18 * x46 * x65 +2 * x46 * x66 +x46 * x67 +12 * x46 * x68 -25 * x46 * x69 +31 * x46 * x70 +8 * x46 * x71 +14 * x46 * x72 -16 * x46 * x73 +16 * x46 * x74 -2 * x46 * x75 -34 * x47 * x48 +4 * x47 * x49 -12 * x47 * x50 -3 * x47 * x51 -23 * x47 * x52 -4 * x47 * x53 -15 * x47 * x54 -5 * x47 * x55 +4 * x47 * x56 -14 * x47 * x57 -3 * x47 * x58 +x47 * x59 +7 * x47 * x60 +3 * x47 * x61 -21 * x47 * x62 -4 * x47 * x63 +23 * x47 * x64 -10 * x47 * x65 +11 * x47 * x66 +22 * x47 * x67 -10 * x47 * x68 +5 * x47 * x69 -16 * x47 * x70 +36 * x47 * x71 -14 * x47 * x72 -16 * x47 * x73 +7 * x47 * x74 -21 * x47 * x75 -43 * x48 * x49 +2 * x48 * x50 -33 * x48 * x51 -26 * x48 * x52 -7 * x48 * x53 -2 * x48 * x54 +3 * x48 * x55 +24 * x48 * x56 -22 * x48 * x57 +19 * x48 * x58 -9 * x48 * x59 -5 * x48 * x60 -14 * x48 * x61 +17 * x48 * x62 -2 * x48 * x63 -26 * x48 * x64 +5 * x48 * x65 -42 * x48 * x66 +16 * x48 * x67 -29 * x48 * x68 -6 * x48 * x69 -24 * x48 * x70 -15 * x48 * x71 +11 * x48 * x72 -2 * x48 * x73 -33 * x48 * x74 +38 * x48 * x75 -44 * x49 * x50 +3 * x49 * x51 -15 * x49 * x52 -2 * x49 * x53 +5 * x49 * x54 -21 * x49 * x55 -5 * x49 * x56 -10 * x49 * x57 -2 * x49 * x58 +9 * x49 * x59 +59 * x49 * x60 +32 * x49 * x61 -26 * x49 * x62 +19 * x49 * x63 +44 * x49 * x64 -22 * x49 * x65 +60 * x49 * x66 -21 * x49 * x67 +7 * x49 * x68 -14 * x49 * x69 -8 * x49 * x71 -2 * x49 * x72 -4 * x49 * x73 -4 * x49 * x74 -x49 * x75 -47 * x50 * x51 -10 * x50 * x52 -14 * x50 * x53 -x50 * x54 +3 * x50 * x55 +6 * x50 * x56 +8 * x50 * x57 -16 * x50 * x58 -x50 * x59 -24 * x50 * x60 -6 * x50 * x61 -20 * x50 * x62 -x50 * x63 -28 * x50 * x64 +11 * x50 * x65 -19 * x50 * x66 +8 * x50 * x67 -8 * x50 * x68 +15 * x50 * x69 -11 * x50 * x70 +2 * x50 * x71 -11 * x50 * x72 +10 * x50 * x74 +23 * x50 * x75 -32 * x51 * x52 -23 * x51 * x53 -28 * x51 * x54 -8 * x51 * x55 +x51 * x56 -12 * x51 * x57 +36 * x51 * x58 -13 * x51 * x59 +x51 * x60 +18 * x51 * x61 -7 * x51 * x62 +25 * x51 * x63 +9 * x51 * x64 -2 * x51 * x65 -11 * x51 * x66 +19 * x51 * x67 +6 * x51 * x68 -12 * x51 * x69 +15 * x51 * x70 +3 * x51 * x71 -15 * x51 * x72 -22 * x51 * x73 +4 * x51 * x74 -29 * x51 * x75 -31 * x52 * x53 -7 * x52 * x54 -20 * x52 * x55 -21 * x52 * x56 +7 * x52 * x57 +2 * x52 * x58 -8 * x52 * x59 +3 * x52 * x60 -15 * x52 * x61 +27 * x52 * x62 -28 * x52 * x63 -22 * x52 * x64 -12 * x52 * x65 +17 * x52 * x66 -22 * x52 * x67 +10 * x52 * x68 +18 * x52 * x69 +8 * x52 * x70 -9 * x52 * x71 -24 * x52 * x72 +59 * x52 * x73 +6 * x52 * x74 -25 * x52 * x75 -9 * x53 * x54 -33 * x53 * x55 -3 * x53 * x56 +8 * x53 * x57 -34 * x53 * x58 +18 * x53 * x59 -14 * x53 * x60 +12 * x53 * x61 +2 * x53 * x62 +4 * x53 * x63 +24 * x53 * x64 +29 * x53 * x65 +16 * x53 * x66 -33 * x53 * x67 +34 * x53 * x68 +5 * x53 * x69 -17 * x53 * x70 -4 * x53 * x71 +50 * x53 * x72 +11 * x53 * x73 -11 * x53 * x74 +18 * x53 * x75 -32 * x54 * x55 -9 * x54 * x56 +15 * x54 * x57 -24 * x54 * x58 +5 * x54 * x59 +3 * x54 * x60 -21 * x54 * x61 +2 * x54 * x62 +x54 * x63 -13 * x54 * x64 -9 * x54 * x65 -4 * x54 * x66 +9 * x54 * x67 -24 * x54 * x68 -15 * x54 * x69 +7 * x54 * x70 -2 * x54 * x71 -x54 * x72 -13 * x54 * x73 -4 * x54 * x74 -x54 * x75 -20 * x55 * x56 -23 * x55 * x57 +17 * x55 * x58 -4 * x55 * x59 -23 * x55 * x60 -21 * x55 * x61 -5 * x55 * x62 -25 * x55 * x63 +x55 * x64 -28 * x55 * x65 -20 * x55 * x66 -11 * x55 * x67 -23 * x55 * x68 -9 * x55 * x69 -4 * x55 * x70 -4 * x55 * x71 -31 * x55 * x72 -27 * x55 * x73 +13 * x55 * x74 -17 * x55 * x75 -18 * x56 * x57 -9 * x56 * x58 -2 * x56 * x59 -17 * x56 * x60 -12 * x56 * x61 +17 * x56 * x62 -2 * x56 * x63 +11 * x56 * x64 -3 * x56 * x65 -28 * x56 * x66 +x56 * x67 -4 * x56 * x68 +15 * x56 * x69 -30 * x56 * x70 +3 * x56 * x71 +38 * x56 * x72 +13 * x56 * x73 -20 * x56 * x74 +23 * x56 * x75 -25 * x57 * x58 -9 * x57 * x59 +8 * x57 * x60 -13 * x57 * x61 +13 * x57 * x62 -27 * x57 * x63 -6 * x57 * x64 +11 * x57 * x65 +34 * x57 * x66 -18 * x57 * x67 +19 * x57 * x68 -7 * x57 * x69 +36 * x57 * x70 -13 * x57 * x71 -15 * x57 * x72 +x57 * x73 +7 * x57 * x74 -15 * x57 * x75 -22 * x58 * x59 +20 * x58 * x60 -27 * x58 * x61 -7 * x58 * x62 -13 * x58 * x63 +13 * x58 * x64 -15 * x58 * x65 -6 * x58 * x66 +29 * x58 * x67 -26 * x58 * x68 -x58 * x69 -23 * x58 * x70 -17 * x58 * x71 -32 * x58 * x72 -10 * x58 * x73 -19 * x58 * x74 -27 * x58 * x75 -20 * x59 * x60 -16 * x59 * x61 -22 * x59 * x62 -16 * x59 * x63 +18 * x59 * x64 +12 * x59 * x65 +2 * x59 * x66 +13 * x59 * x67 -6 * x59 * x68 +5 * x59 * x69 +6 * x59 * x70 +8 * x59 * x71 +40 * x59 * x72 -6 * x59 * x73 +2 * x59 * x74 +21 * x59 * x75 -13 * x60 * x61 -20 * x60 * x62 -11 * x60 * x63 +11 * x60 * x64 +2 * x60 * x65 +30 * x60 * x66 +23 * x60 * x67 -19 * x60 * x68 -10 * x60 * x69 +19 * x60 * x70 -12 * x60 * x71 -20 * x60 * x72 -11 * x60 * x73 -3 * x60 * x74 -36 * x60 * x75 -18 * x61 * x62 +13 * x61 * x63 -4 * x61 * x64 -8 * x61 * x65 +6 * x61 * x66 -28 * x61 * x67 +15 * x61 * x68 -29 * x61 * x69 +15 * x61 * x70 -13 * x61 * x71 -2 * x61 * x72 -20 * x61 * x73 -11 * x61 * x74 -3 * x61 * x75 -6 * x62 * x63 -11 * x62 * x64 -3 * x62 * x65 -30 * x62 * x66 +3 * x62 * x67 +6 * x62 * x68 -11 * x62 * x69 -10 * x62 * x70 -16 * x62 * x71 -16 * x62 * x72 +16 * x62 * x73 +4 * x62 * x74 +12 * x62 * x75 -7 * x63 * x64 -20 * x63 * x65 -5 * x63 * x66 -11 * x63 * x67 +2 * x63 * x68 -38 * x63 * x69 -2 * x63 * x70 +9 * x63 * x71 -5 * x63 * x72 -13 * x63 * x73 +9 * x63 * x74 -5 * x63 * x75 -7 * x64 * x65 +19 * x64 * x66 +4 * x64 * x67 +x64 * x68 +39 * x64 * x69 -8 * x64 * x70 -8 * x64 * x71 +12 * x64 * x72 -11 * x64 * x73 -8 * x64 * x74 +14 * x64 * x75 +18 * x65 * x67 -4 * x65 * x68 +10 * x65 * x69 -6 * x65 * x70 -4 * x65 * x71 +20 * x65 * x72 -10 * x65 * x73 -19 * x65 * x74 +19 * x65 * x75 -14 * x66 * x67 +6 * x66 * x68 +21 * x66 * x69 +15 * x66 * x70 +2 * x66 * x71 +3 * x66 * x72 +9 * x66 * x73 +5 * x66 * x74 -12 * x66 * x75 -34 * x67 * x68 +16 * x67 * x69 -27 * x67 * x70 +8 * x67 * x71 -11 * x67 * x72 -22 * x67 * x73 -19 * x67 * x74 +5 * x67 * x75 +2 * x68 * x69 +10 * x68 * x70 +7 * x68 * x71 +20 * x68 * x72 -13 * x68 * x73 +12 * x68 * x74 +6 * x68 * x75 -31 * x69 * x70 -13 * x69 * x71 +2 * x69 * x72 +41 * x69 * x73 -20 * x69 * x74 +8 * x69 * x75 -11 * x70 * x71 -16 * x70 * x72 -10 * x70 * x73 +30 * x70 * x74 -16 * x70 * x75 -5 * x71 * x72 -6 * x71 * x73 +8 * x71 * x74 -14 * x71 * x75 +15 * x72 * x73 -19 * x72 * x74 +72 * x72 * x75 -21 * x73 * x74 +9 * x73 * x75 -16 * x74 * x75
sol_dual4 = np.array([0.00533967,0.0069561,0.0067903,0.0102072,0.00850971,0.00947128,0.00884541,0.0123845,0.00864575,0.0140111,0.0137064,0.0182655,0.0198592,0.0190728,0.013103,0.0188067,0.0157732,0.017214,0.0169975,0.0132126,0.0138101,0.0197212,0.0309405,0.0301007,0.0206168,0.0346408,0.0234838,0.0149505,0.0227329,0.0382054,0.0236822,0.027521,0.0131491,0.0182329,0.0225184,0.0197456,0.0204814,0.0170486,0.0164577,0.0115233,0.0180926,0.0214848,0.0139494,0.0194188,0.010628,0.00782975,0.0157195,0.0271219,0.0163457,0.0204362,0.0416197,0.019951,0.0168062,0.00368927,0.0264176,0.0,0.0,2.76E-23,0.0,3.59E-23,0.0,1.99E-23,0.00332686,3.04E-24,0.0025495,0.0,0.00481546,0.00354988,7.28E-24,1.09E-23,0.0,0.00836878,2.80E-23,2.22E-05,0.0011221])
sol_dual4 = np.array([0.00533967,0.0069561,0.0067903,0.0102072,0.00850971,0.00947128,0.00884541,0.0123845,0.00864575,0.0140111,0.0137064,0.0182655,0.0198592,0.0190728,0.013103,0.0188067,0.0157732,0.017214,0.0169975,0.0132126,0.0138101,0.0197212,0.0309405,0.0301007,0.0206168,0.0346408,0.0234838,0.0149505,0.0227329,0.0382054,0.0236822,0.027521,0.0131491,0.0182329,0.0225184,0.0197456,0.0204814,0.0170486,0.0164577,0.0115233,0.0180926,0.0214848,0.0139494,0.0194188,0.010628,0.00782975,0.0157195,0.0271219,0.0163457,0.0204362,0.0416197,0.019951,0.0168062,0.00368927,0.0264176,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00332686,0.0,0.0025495,0.0,0.00481546,0.00354988,0.0,0.0,0.0,0.00836878,0.0,2.22E-05,0.0011221])
eq1_dual4 =  x1 +x2 +x3 +x4 +x5 +x6 +x7 +x8 +x9 +x10 +x11 +x12 +x13 +x14 +x15 +x16 +x17 +x18 +x19 +x20 +x21 +x22 +x23 +x24 +x25 +x26 +x27 +x28 +x29 +x30 +x31 +x32 +x33 +x34 +x35 +x36 +x37 +x38 +x39 +x40 +x41 +x42 +x43 +x44 +x45 +x46 +x47 +x48 +x49 +x50 +x51 +x52 +x53 +x54 +x55 +x56 +x57 +x58 +x59 +x60 +x61 +x62 +x63 +x64 +x65 +x66 +x67 +x68 +x69 +x70 +x71 +x72 +x73 +x74 +x75 - 1
cons_dual4 = [{'func':eq1_dual4,'type': 'eq', 'prop': 'convex'}]
bnds_dual4 = [np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1]),np.array([0, 1])]
vars_dual4 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75]
dual4 = OptimizationProblem("dual4", sol_dual4, symobj_dual4, cons_dual4, vars_dual4, bnds_dual4)


################################################################################
# Alternative Problem Formulations
################################################################################
symobj_hs35mod_v2 =  (-8) * x1 - 6 * x2 - 4 * x3 + (x3**2) + 2 * (x1**2) + 2 * (x2**2) + 2 * x1 * x2 + 2 * x1 * x3 + 9
sol_hs35mod_v2 = np.array([1.5000000000,0.5000000000,0.5000000000])
ineq1_hs35mod_v2 = -(-x1 - x2 - 2 * x3) - 3
eq1_hs35mod_v2 = x2 - 0.5
cons_hs35mod_v2 = [{'func':ineq1_hs35mod_v2,'type': 'ineq', 'prop':'convex'}, {'func':eq1_hs35mod_v2,'type': 'eq', 'prop':'convex'}]
bnds_hs35mod_v2 = [np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000])]
vars_hs35mod_v2 = [x1, x2, x3]
hs35mod_v2 = OptimizationProblem("hs35mod_v2", sol_hs35mod_v2, symobj_hs35mod_v2, cons_hs35mod_v2, vars_hs35mod_v2, bnds_hs35mod_v2)

################################################################################
# Problems not used for tests
################################################################################
symobj_a = x1 + x2
sol_a = np.array([1, 9])
eq1_a = x1**2 + x2**2 - 1
eq2_a = -x2 + x1**2
cons_a = [{'func':eq1_a, 'type':'eq', 'prop':'unknown'}, {'func':eq2_a, 'type':'eq', 'prop':'unknown'}]
vars_a = [x1, x2]
bnds_a = [np.array([-10005, 10000]), np.array([-10000, 10005])]
a = OptimizationProblem('a', sol_a, symobj_a, cons_a, vars_a, bnds_a)

symobj_biggsc4 =  0
sol_biggsc4 = np.array([3.8125,3.3125,3.6875,2.8125])
ineq1_biggsc4 = -(x1 + x2 + x3 + x4) + 5
ineq2_biggsc4 = -x3 - x4 + 1.5
ineq3_biggsc4 = x3 + x4 - 6.5
ineq4_biggsc4 = -x2 - x4 + 2
ineq5_biggsc4 = x2 + x4 - 7
ineq6_biggsc4 = -x2 - x3 + 2
ineq7_biggsc4 = x2 + x3 - 7
ineq8_biggsc4 = -x1 - x2 + 2.5
ineq9_biggsc4 = x1 + x2 - 7.5
ineq10_biggsc4 = -x1 - x4 + 2.5
ineq11_biggsc4 = x1 + x4 - 7.5
ineq12_biggsc4 = -x1 - x3 + 2.5
ineq13_biggsc4 = x1 + x3 - 7.5
ineq14_biggsc4 = -(x1 * x3) - x2 * x4 + 23.375
cons_biggsc4 = [{'type': 'ineq', 'func': ineq1_biggsc4, 'prop':'convex'}, {'type': 'ineq', 'func': ineq2_biggsc4, 'prop':'convex'}, {'type': 'ineq', 'func': ineq3_biggsc4, 'prop':'convex'}, {'type': 'ineq', 'func': ineq4_biggsc4, 'prop':'convex'}, {'type': 'ineq', 'func': ineq5_biggsc4, 'prop':'convex'}, {'type': 'ineq', 'func': ineq6_biggsc4, 'prop':'convex'}, {'type': 'ineq', 'func': ineq7_biggsc4, 'prop':'convex'}, {'type': 'ineq', 'func': ineq8_biggsc4, 'prop':'convex'}, {'type': 'ineq', 'func': ineq9_biggsc4, 'prop':'convex'}, {'type': 'ineq', 'func': ineq10_biggsc4, 'prop':'convex'}, {'type': 'ineq', 'func': ineq11_biggsc4, 'prop':'convex'}, {'type': 'ineq', 'func': ineq12_biggsc4, 'prop':'convex'}, {'type': 'ineq', 'func': ineq13_biggsc4, 'prop':'convex'}, {'type': 'ineq', 'func': ineq14_biggsc4, 'prop':'unknown'}]
bnds_biggsc4 = [np.array([0, 5]), np.array([0, 5]), np.array([0, 5]), np.array([0, 5])]
vars_biggsc4 = [x1, x2, x3, x4]
biggsc4 = OptimizationProblem("biggsc4", sol_biggsc4, symobj_biggsc4, cons_biggsc4, vars_biggsc4, bnds_biggsc4)

symobj_braess =  0
sol_braess = np.array([3.14583,2.85417,3.14583,2.85417])
eq1_braess =  x2 - x4
eq2_braess =  x1 - x3
eq3_braess =  x3 + x4 - 6
eq4_braess =  x1 + x2 - 6
ineq1_braess = 50 * x1 + 50 * x4 + 0.5 * (x1**2) + 5 * (x2**2) + 5 * (x3**2) + 0.5 * (x4**2) - 403
cons_braess = [{'type': 'eq', 'func': eq1_braess, 'prop':'convex'}, {'type': 'eq', 'func': eq2_braess, 'prop':'convex'}, {'type': 'eq', 'func': eq3_braess, 'prop':'convex'}, {'type': 'eq', 'func': eq4_braess, 'prop':'convex'}, {'type': 'ineq', 'func': ineq1_braess, 'prop':'unknown'}]
bnds_braess = [np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000])]
vars_braess = [x1, x2, x3, x4]
braess = OptimizationProblem("braess", sol_braess, symobj_braess, cons_braess, vars_braess, bnds_braess)

symobj_braess_new =  0
sol_braess_new = np.array([3.14583,2.85417,3.14583,2.85417,0])
eq1_braess_new =  x2 - x4 - x5
eq2_braess_new =  x1 - x3 + x5
eq3_braess_new =  x3 + x4 - 6
eq4_braess_new =  x1 + x2 - 6
ineq1_braess_new = 50 * x1 + 50 * x4 + 10 * x5 + 0.5 * (x1**2) + 5 * (x2**2) + 5 * (x3**2) + 0.5 * (x4**2) + 0.5 * (x5**2) - 403
cons_braess_new = [{'type': 'eq', 'func': eq1_braess_new}, {'type': 'eq', 'func': eq2_braess_new}, {'type': 'eq', 'func': eq3_braess_new}, {'type': 'eq', 'func': eq4_braess_new}, {'type': 'ineq', 'func': ineq1_braess_new}]
bnds_braess_new = [np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000])]
vars_braess_new = [x1, x2, x3, x4, x5]
braess_new = OptimizationProblem("braess_new", sol_braess_new, symobj_braess_new, cons_braess_new, vars_braess_new, bnds_braess_new)

symobj_bt8b = x1**2 + x2**2 + x3**2
sol_bt8b = np.array([0.888031, 0.459783, 0.315328, 8.78968e-07, -3.76183e-06])
eq1_bt8b = x1 - 1 - x4**2 + x2**2
eq2_bt8b = -1 + x1**2 + x2**2 - x5**2
cons_bt8b = [{'func':eq1_bt8b, 'type':'eq', 'prop':'unknown'}, {'func':eq2_bt8b, 'type':'eq', 'prop':'unknown'}]
vars_bt8b = [x1, x2, x3, x4, x5]
bnds_bt8b = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
bnds_bt8b = [np.array([-0.01, 1]), np.array([-0.01, 1]), np.array([-0.01, 1]), np.array([-0.01, 1]), np.array([-0.01, 1])]
bt8b = OptimizationProblem('bt8b', sol_bt8b, symobj_bt8b, cons_bt8b, vars_bt8b, bnds_bt8b)

symobj_ex_2_1_4 =  6.5 * x1 - x2 - 2 * x3 - 3 * x4 - 2 * x5 - x6 - 0.5 * (x1**2)
sol_ex_2_1_4 = np.array([3.92065e-20,6,1.51959e-21,1,1,2.49805e-21])
ineq1_ex_2_1_4 = (-0.10000000000000001) * x1 - 0.5 * x2 + 2 * x3 + 5 * x4 - 5 * x5 + 3 * x6 - 3
ineq2_ex_2_1_4 = 0.20000000000000001 * x1 + 2 * x2 + 0.10000000000000001 * x3 - 4 * x4 + 2 * x5 + 2 * x6 - 12
ineq3_ex_2_1_4 = 2 * x1 + 0.5 * x2 + 0.20000000000000001 * x3 - 3 * x4 - x5 - 4 * x6 - 24
ineq4_ex_2_1_4 = (-8) * x1 - 4 * x2 - 2 * x3 + 2 * x4 + 4 * x5 - x6 + 1
ineq5_ex_2_1_4 = x1 + 2 * x2 + 8 * x3 + x4 + 3 * x5 + 5 * x6 - 16
cons_ex_2_1_4 = [{'func':ineq1_ex_2_1_4,'type': 'ineq'},{'func':ineq2_ex_2_1_4,'type': 'ineq'},{'func':ineq3_ex_2_1_4,'type': 'ineq'},{'func':ineq4_ex_2_1_4,'type': 'ineq'},{'func':ineq5_ex_2_1_4,'type': 'ineq'}]
bnds_ex_2_1_4 = [np.array([0,1]), np.array([0,10000]), np.array([0,10000]), np.array([0,1]), np.array([0,1]), np.array([0, 2])]
vars_ex_2_1_4 = [x1, x2, x3, x4, x5, x6]
ex_2_1_4 = OptimizationProblem("ex_2_1_4", sol_ex_2_1_4, symobj_ex_2_1_4, cons_ex_2_1_4, vars_ex_2_1_4, bnds_ex_2_1_4)

symobj_ex_3_1_1 =  x1 + x2 + x3
sol_ex_3_1_1 = np.array([584.3281753710,1354.1644988200,5110.7156710100,182.4326253100,295.5675732140,217.5673746900,286.8650520960,395.5675732140])
ineq1_ex_3_1_1 = (-0.01) * x5 + 0.01 * x8 - 1
ineq2_ex_3_1_1 = (-0.0025000000000000001) * x4 + 0.0025000000000000001 * x5 + 0.0025000000000000001 * x7 - 1
ineq3_ex_3_1_1 = 0.0025000000000000001 * x4 + 0.0025000000000000001 * x6 - 1
ineq4_ex_3_1_1 = 100 * x1 + 833.33252000000005 * x4 - x1 * x6 - 83333.332999999999
ineq5_ex_3_1_1 = (-2500) * x5 + x3 * x5 - x3 * x8 - -1250000
ineq6_ex_3_1_1 = (-1250) * x4 + 1250 * x5 + x2 * x4 - x2 * x7 - 0
cons_ex_3_1_1 = [{'func':ineq1_ex_3_1_1,'type': 'ineq'},{'func':ineq2_ex_3_1_1,'type': 'ineq'},{'func':ineq3_ex_3_1_1,'type': 'ineq'},{'func':ineq4_ex_3_1_1,'type': 'ineq'},{'func':ineq5_ex_3_1_1,'type': 'ineq'},{'func':ineq6_ex_3_1_1,'type': 'ineq'}]
bnds_ex_3_1_1 = [np.array([100, 10000]), np.array([1000, 10000]), np.array([1000, 10000]), np.array([10, 1000]), np.array([10, 1000]), np.array([10, 1000]), np.array([10, 1000]), np.array([10, 1000])]
vars_ex_3_1_1 = [x1, x2, x3, x4, x5, x6, x7, x8]
ex_3_1_1 = OptimizationProblem("ex_3_1_1", sol_ex_3_1_1, symobj_ex_3_1_1, cons_ex_3_1_1, vars_ex_3_1_1, bnds_ex_3_1_1)

symobj_ex_3_1_4 =  (-2) * x1 + x2 - x3
sol_ex_3_1_4 = np.array([2,0,0])
ineq1_ex_3_1_4 = 3 * x2 + x3 - 6
ineq2_ex_3_1_4 = x1 + x2 + x3 - 4
ineq3_ex_3_1_4 = -((-20) * x1 + 9 * x2 - 13 * x3 + x1 * (4 * x1 - 2 * x2 + 2 * x3) + x2 * ((-2) * x1 + 2 * x2 - x3) + x3 * (2 * x1 - x2 + 2 * x3)) - 24
cons_ex_3_1_4 = [{'func':ineq1_ex_3_1_4,'type': 'ineq'},{'func':ineq2_ex_3_1_4,'type': 'ineq'},{'func':ineq3_ex_3_1_4,'type': 'ineq'}]
bnds_ex_3_1_4 = [np.array([0, 2]), np.array([0, 10000]), np.array([0, 3])]
vars_ex_3_1_4 = [x1, x2, x3]
ex_3_1_4 = OptimizationProblem("ex_3_1_4", sol_ex_3_1_4, symobj_ex_3_1_4, cons_ex_3_1_4, vars_ex_3_1_4, bnds_ex_3_1_4)

symobj_ex_5_2_2 =  (-9) * x4 - 15 * x5 + 6 * x6 + 16 * x7 + 10 * x8 + 10 * x9
sol_ex_5_2_2 = np.array([1,4.07665e-15,100,0,200,7.10543e-15,100,0,100])
eq1_ex_5_2_2 =  -x3 + x5 - x9 - 0
eq2_ex_5_2_2 =  -x2 + x4 - x8 - 0
eq3_ex_5_2_2 =  x2 + x3 - x6 - x7 - 0
eq4_ex_5_2_2 =  (-3) * x6 - x7 + x1 * x2 + x1 * x3 - 0
ineq1_ex_5_2_2 = (-1.5) * x5 + 2 * x9 + x1 * x3 - 0
ineq2_ex_5_2_2 = (-2.5) * x4 + 2 * x8 + x1 * x2 - 0
cons_ex_5_2_2 = [{'func':eq1_ex_5_2_2,'type': 'eq'},{'func':eq2_ex_5_2_2,'type': 'eq'},{'func':eq3_ex_5_2_2,'type': 'eq'},{'func':eq4_ex_5_2_2,'type': 'eq'},{'func':ineq1_ex_5_2_2,'type': 'ineq'},{'func':ineq2_ex_5_2_2,'type': 'ineq'}]
bnds_ex_5_2_2 = [np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 100]), np.array([0, 200]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500]), np.array([0, 500])]
vars_ex_5_2_2 = [x1, x2, x3, x4, x5, x6, x7, x8, x9]
ex_5_2_2 = OptimizationProblem("ex_5_2_2", sol_ex_5_2_2, symobj_ex_5_2_2, cons_ex_5_2_2, vars_ex_5_2_2, bnds_ex_5_2_2)

symobj_ex5_2_4 =  x6 - 5 * x7 - x4 * ((-6) * x1 - 16 * x2 - 15 * x3 + 9) - x5 * ((-6) * x1 - 16 * x2 - 15 * x3 + 15)
sol_ex5_2_4 = np.array([0.0000000000,0.5000000000,0.5000000000,0.0000000000,100.0000000000,0.0000000000,100.0000000000])
eq1_ex5_2_4 =  x1 + x2 + x3 - 1
ineq1_ex5_2_4 = x5 + x7 - 200
ineq2_ex5_2_4 = x4 + x6 - 100
ineq3_ex5_2_4 = 0.5 * x7 + x5 * (3 * x1 + x2 + x3 - 1.5) - 0
ineq4_ex5_2_4 = (-0.5) * x6 + x4 * (3 * x1 + x2 + x3 - 2.5) - 0
ineq5_ex5_2_4 = x3 * x4 + x3 * x5 - 50
cons_ex5_2_4 = [{'func':eq1_ex5_2_4,'type': 'eq'},{'func':ineq1_ex5_2_4,'type': 'ineq'},{'func':ineq2_ex5_2_4,'type': 'ineq'},{'func':ineq3_ex5_2_4,'type': 'ineq'},{'func':ineq4_ex5_2_4,'type': 'ineq'},{'func':ineq5_ex5_2_4,'type': 'ineq'}]
bnds_ex5_2_4 = [np.array([0,1]), np.array([0,1]), np.array([0,1]), np.array([0,100]), np.array([0,200]), np.array([0,100]), np.array([0,200])]
vars_ex5_2_4 = [x1, x2, x3, x4, x5, x6, x7]
ex5_2_4 = OptimizationProblem("ex5_2_4", sol_ex5_2_4, symobj_ex5_2_4, cons_ex5_2_4, vars_ex5_2_4, bnds_ex5_2_4)

symobj_ex525 = (-8) * x28 - 5 * x29 - 9 * x30 - 6 * x31 - 4 * x32 - x13 * ((-6) * x1 - 16 * x4 - 15 * x7 - 12 * x10 + 18) - x14 * ((-6) * x1 - 16 * x4 - 15 * x7 - 12 * x10 + 15) - x15 * ((-6) * x1 - 16 * x4 - 15 * x7 - 12 * x10 + 19) - x16 * ((-6) * x1 - 16 * x4 - 15 * x7 - 12 * x10 + 16) - x17 * ((-6) * x1 - 16 * x4 - 15 * x7 - 12 * x10 + 14) - x18 * ((-6) * x2 - 16 * x5 - 15 * x8 - 12 * x11 + 18) - x19 * ((-6) * x2 - 16 * x5 - 15 * x8 - 12 * x11 + 15) - x20 * ((-6) * x2 - 16 * x5 - 15 * x8 - 12 * x11 + 19) - x21 * ((-6) * x2 - 16 * x5 - 15 * x8 - 12 * x11 + 16) - x22 * ((-6) * x2 - 16 * x5 - 15 * x8 - 12 * x11 + 14) - x23 * ((-6) * x3 - 16 * x6 - 15 * x9 - 12 * x12 + 18) - x24 * ((-6) * x3 - 16 * x6 - 15 * x9 - 12 * x12 + 15) - x25 * ((-6) * x3 - 16 * x6 - 15 * x9 - 12 * x12 + 19) - x26 * ((-6) * x3 - 16 * x6 - 15 * x9 - 12 * x12 + 16) - x27 * ((-6) * x3 - 16 * x6 - 15 * x9 - 12 * x12 + 14)
sol_ex525 = np.array([0.0000000000,0.0000000000,0.6666666758,0.0000000000,0.0000000000,0.0000000000,0.0000000000,0.0000000000,0.0000000000,1.0000000000,1.0000000000,0.3333333150,0.0000000000,100.6648675822,0.0000000000,0.0000000000,0.0000000000,0.0000000000,99.3351324178,50.0000018340,50.0000016106,50.0000018340,100.0000000000,0.0000000000,49.9999981660,49.9999983894,49.9999981660,0.0000000000,0.0000000000,0.0000000000,0.0000000000,0.0000000000])
eq1_ex525 = x3 + x6 + x9 + x12 - 1
eq2_ex525 = x2 + x5 + x8 + x11 - 1
eq3_ex525 = x1 + x4 + x7 + x10 - 1
ineq1_ex525 = x17 + x22 + x27 + x32 - 100
ineq2_ex525 = x16 + x21 + x26 + x31 - 100
ineq3_ex525 = x15 + x20 + x25 + x30 - 100
ineq4_ex525 = x14 + x19 + x24 + x29 - 200
ineq5_ex525 = x13 + x18 + x23 + x28 - 100
ineq6_ex525 = 0.5 * x32 + x17 * (x1 + 3 * x4 + 2.5 * x7 + 2.5 * x10 - 2) + x22 * (x2 + 3 * x5 + 2.5 * x8 + 2.5 * x11 - 2) + x27 * (x3 + 3 * x6 + 2.5 * x9 + 2.5 * x12 - 2)
ineq7_ex525 = x17 * (3 * x1 + x4 + x7 + 1.5 * x10 - 2) + x22 * (3 * x2 + x5 + x8 + 1.5 * x11 - 2) + x27 * (3 * x3 + x6 + x9 + 1.5 * x12 - 2)
ineq8_ex525 = 0.5 * x31 + x16 * (x1 + 3 * x4 + 2.5 * x7 + 2.5 * x10 - 2) + x21 * (x2 + 3 * x5 + 2.5 * x8 + 2.5 * x11 - 2) + x26 * (x3 + 3 * x6 + 2.5 * x9 + 2.5 * x12 - 2)
ineq9_ex525 = x16 * (3 * x1 + x4 + x7 + 1.5 * x10 - 2) + x21 * (3 * x2 + x5 + x8 + 1.5 * x11 - 2) + x26 * (3 * x3 + x6 + x9 + 1.5 * x12 - 2)
ineq10_ex525 = (-0.10000000000000001) * x30 + x15 * (x1 + 3 * x4 + 2.5 * x7 + 2.5 * x10 - 2.6000000000000001) + x20 * (x2 + 3 * x5 + 2.5 * x8 + 2.5 * x11 - 2.6000000000000001) + x25 * (x3 + 3 * x6 + 2.5 * x9 + 2.5 * x12 - 2.6000000000000001)
ineq11_ex525 = x15 * (3 * x1 + x4 + x7 + 1.5 * x10 - 2) + x20 * (3 * x2 + x5 + x8 + 1.5 * x11 - 2) + x25 * (3 * x3 + x6 + x9 + 1.5 * x12 - 2)
ineq12_ex525 = x14 * (x1 + 3 * x4 + 2.5 * x7 + 2.5 * x10 - 2.5) + x19 * (x2 + 3 * x5 + 2.5 * x8 + 2.5 * x11 - 2.5) + x24 * (x3 + 3 * x6 + 2.5 * x9 + 2.5 * x12 - 2.5)
ineq13_ex525 = 0.5 * x29 + x14 * (3 * x1 + x4 + x7 + 1.5 * x10 - 1.5) + x19 * (3 * x2 + x5 + x8 + 1.5 * x11 - 1.5) + x24 * (3 * x3 + x6 + x9 + 1.5 * x12 - 1.5)
ineq14_ex525 = 0.5 * x28 + x13 * (x1 + 3 * x4 + 2.5 * x7 + 2.5 * x10 - 2) + x18 * (x2 + 3 * x5 + 2.5 * x8 + 2.5 * x11 - 2) + x23 * (x3 + 3 * x6 + 2.5 * x9 + 2.5 * x12 - 2)
ineq15_ex525 = (-0.5) * x28 + x13 * (3 * x1 + x4 + x7 + 1.5 * x10 - 2.5) + x18 * (3 * x2 + x5 + x8 + 1.5 * x11 - 2.5) + x23 * (3 * x3 + x6 + x9 + 1.5 * x12 - 2.5)
ineq16_ex525 = x7 * x13 + x7 * x14 + x7 * x15 + x7 * x16 + x7 * x17 + x8 * x18 + x8 * x19 + x8 * x20 + x8 * x21 + x8 * x22 + x9 * x23 + x9 * x24 + x9 * x25 + x9 * x26 + x9 * x27 - 50
cons_ex525 = [{'func':eq1_ex525, 'type':'eq'}, {'func':eq2_ex525, 'type':'eq'}, {'func':eq3_ex525, 'type':'eq'},{'func':ineq1_ex525, 'type':'ineq'},{'func':ineq2_ex525, 'type':'ineq'},{'func':ineq3_ex525, 'type':'ineq'},{'func':ineq4_ex525, 'type':'ineq'},{'func':ineq5_ex525, 'type':'ineq'},{'func':ineq6_ex525, 'type':'ineq'},{'func':ineq7_ex525, 'type':'ineq'},{'func':ineq8_ex525, 'type':'ineq'},{'func':ineq9_ex525, 'type':'ineq'},{'func':ineq10_ex525, 'type':'ineq'},{'func':ineq11_ex525, 'type':'ineq'},{'func':ineq12_ex525, 'type':'ineq'},{'func':ineq13_ex525, 'type':'ineq'},{'func':ineq14_ex525, 'type':'ineq'},{'func':ineq15_ex525, 'type':'ineq'},{'func':ineq16_ex525, 'type':'ineq'}]
bnds_ex525 = [np.array([0,1]),np.array([0,1]),np.array([0,1]),np.array([0,1]),np.array([0,1]),np.array([0,1]),np.array([0,1]),np.array([0,1]),np.array([0,1]),np.array([0,1]),np.array([0,1]),np.array([0,1]),np.array([0,100]),np.array([0,200]),np.array([0,100]),np.array([0,100]),np.array([0,100]),np.array([0,100]),np.array([0,200]),np.array([0,100]),np.array([0,100]),np.array([0,100]),np.array([0,100]),np.array([0,200]),np.array([0,100]),np.array([0,100]),np.array([0,100]),np.array([0,100]),np.array([0,200]),np.array([0,100]),np.array([0,100]),np.array([0,100])]
vars_ex525 = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32]
ex5_2_5 = OptimizationProblem('ex525', sol_ex525, symobj_ex525, cons_ex525, vars_ex525, bnds_ex525)

symobj_ex7_3_3 =  x5
sol_ex7_3_3 = np.array([2.4543817622,1.9087635245,1.3509826522,2.7262905734,0.8175270489])
eq1_ex7_3_3 =  (-4) * x1 - x2 - 78 * x3 + x4 + 16 * (x3**2) + 9.625 * x1 * x3 + 16 * x2 * x3 +12
eq2_ex7_3_3 =  (-19) * x1 - 8 * x2 - 24 * x3 - x4 + 16 * x1 * x3 +44
ineq1_ex7_3_3 = x4 - 1.5 * x5 - 1.5
ineq2_ex7_3_3 = -x4 - 1.5 * x5 + 1.5
ineq3_ex7_3_3 = x2 - 0.5 * x5 - 1.5
ineq4_ex7_3_3 = -x2 - 0.5 * x5 + 1.5
ineq5_ex7_3_3 = -x1 - 0.25 * x5 + 2.25
ineq6_ex7_3_3 = x1 - 0.25 * x5 - 2.25
cons_ex7_3_3 = [{'func':eq1_ex7_3_3,'type': 'eq'},{'func':eq2_ex7_3_3,'type': 'eq'},{'func':ineq1_ex7_3_3,'type': 'ineq'},{'func':ineq2_ex7_3_3,'type': 'ineq'},{'func':ineq3_ex7_3_3,'type': 'ineq'},{'func':ineq4_ex7_3_3,'type': 'ineq'},{'func':ineq5_ex7_3_3,'type': 'ineq'},{'func':ineq6_ex7_3_3,'type': 'ineq'}]
bnds_ex7_3_3 = [np.array([-10000, 10000]),np.array([-10000, 10000]),np.array([0, 10]),np.array([-10000, 10000]),np.array([-10000, 10000])]
vars_ex7_3_3 = [x1, x2, x3, x4, x5]
ex7_3_3 = OptimizationProblem("ex7_3_3", sol_ex7_3_3, symobj_ex7_3_3, cons_ex7_3_3, vars_ex7_3_3, bnds_ex7_3_3)

symobj_ex9_2_4 =  (0.5 * x5 - 1) * (x5 - 2) + (0.5 * x6 - 1) * (x6 - 2)
sol_ex9_2_4 = np.array([1,2,0,0,1,2,-1,3])
eq1_ex9_2_4 =  -x4 + x7 - -1
eq2_ex9_2_4 =  -x3 + x5 + x7 - 0
eq3_ex9_2_4 =  x2 - x6 - 0
eq4_ex9_2_4 =  x1 - x5 - 0
eq5_ex9_2_4 =  x5 + x6 - x8 - 0
eq6_ex9_2_4 =  x2 * x4 - 0
eq7_ex9_2_4 =  x1 * x3 - 0
cons_ex9_2_4 = [{'func':eq1_ex9_2_4,'type': 'eq'},{'func':eq2_ex9_2_4,'type': 'eq'},{'func':eq3_ex9_2_4,'type': 'eq'},{'func':eq4_ex9_2_4,'type': 'eq'},{'func':eq5_ex9_2_4,'type': 'eq'},{'func':eq6_ex9_2_4,'type': 'eq'},{'func':eq7_ex9_2_4,'type': 'eq'}]
bnds_ex9_2_4 = [np.array([0, 200]), np.array([0, 200]), np.array([0, 200]), np.array([0, 200]), np.array([0, 10000]), np.array([0, 10000]), np.array([-10000, 10000]), np.array([0, 10000])]
vars_ex9_2_4 = [x1, x2, x3, x4, x5, x6, x7, x8]
ex9_2_4 = OptimizationProblem("ex9_2_4", sol_ex9_2_4, symobj_ex9_2_4, cons_ex9_2_4, vars_ex9_2_4, bnds_ex9_2_4)

symobj_ex9_2_5 =  (x7 - 2) * (x7 - 2) + (x8 - 3) * (x8 - 3)
sol_ex9_2_5 = np.array([0.0000000000,7.0000000000,7.0000000000,4.0000000000,0.0000000000,0.0000000000,3.0000000000,1.0000000000])
eq1_ex9_2_5 =  x4 - 2 * x5 + 2 * x6 + 2 * x7 - 10
eq2_ex9_2_5 =  x3 + 2 * x7 + x8 - 14
eq3_ex9_2_5 =  x2 - 2 * x7 + x8 - 2
eq4_ex9_2_5 =  x1 + x7 - 2 * x8 - 1
eq5_ex9_2_5 =  x3 * x6 - 0
eq6_ex9_2_5 =  x2 * x5 - 0
eq7_ex9_2_5 =  x1 * x4 - 0
cons_ex9_2_5 = [{'func':eq1_ex9_2_5,'type': 'eq'},{'func':eq2_ex9_2_5,'type': 'eq'},{'func':eq3_ex9_2_5,'type': 'eq'},{'func':eq4_ex9_2_5,'type': 'eq'},{'func':eq5_ex9_2_5,'type': 'eq'},{'func':eq6_ex9_2_5,'type': 'eq'},{'func':eq7_ex9_2_5,'type': 'eq'}]
bnds_ex9_2_5 = [np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]),np.array([-10000, 10000]),np.array([0, 8])]
vars_ex9_2_5 = [x1, x2, x3, x4, x5, x6, x7, x8]
ex9_2_5 = OptimizationProblem("ex9_2_5", sol_ex9_2_5, symobj_ex9_2_5, cons_ex9_2_5, vars_ex9_2_5, bnds_ex9_2_5)

symobj_ex_14_1_6  =  x9
sol_ex_14_1_6  = np.array([0.671554,0.740955,-0.651591,-0.758571,-0.962545,0.271122,-0.437578,-0.899181,1.61338e-16])
eq1_ex_14_1_6  =  (-0.76229999999999998) * x1 + 0.2238 * x2 - -0.34610000000000002
ineq1_ex_14_1_6  = (-0.12379999999999999) * x1 - 0.001637 * x2 - 0.93379999999999996 * x4 + x7 - x9 + 0.004731 * x1 * x3 - 0.35780000000000001 * x2 * x3 - 0.35709999999999997
ineq2_ex_14_1_6  = -x9 - (x7**2) - (x8**2) - -1
ineq3_ex_14_1_6  = -x9 + (x7**2) + (x8**2) - 1
ineq4_ex_14_1_6  = -x9 - (x5**2) - (x6**2) - -1
ineq5_ex_14_1_6  = -x9 + (x5**2) + (x6**2) - 1
ineq6_ex_14_1_6  = -x9 - (x3**2) - (x4**2) - -1
ineq7_ex_14_1_6  = -x9 + (x3**2) + (x4**2) - 1
ineq8_ex_14_1_6  = 0.12379999999999999 * x1 + 0.001637 * x2 + 0.93379999999999996 * x4 - x7 - x9 - 0.004731 * x1 * x3 + 0.35780000000000001 * x2 * x3 - -0.35709999999999997
ineq9_ex_14_1_6  = -x9 - (x1**2) - (x2**2) - -1
ineq10_ex_14_1_6  = -x9 + (x1**2) + (x2**2) - 1
ineq11_ex_14_1_6  = (-0.35780000000000001) * x1 - 0.004731 * x2 - x9 - x6 * x8 - 0
ineq12_ex_14_1_6  = 0.35780000000000001 * x1 + 0.004731 * x2 - x9 + x6 * x8 - 0
ineq13_ex_14_1_6  = (-0.26379999999999998) * x1 + 0.077450000000000005 * x2 + 0.6734 * x4 + x7 - x9 - 0.2238 * x1 * x3 - 0.76229999999999998 * x2 * x3 - -0.60219999999999996
ineq14_ex_14_1_6  = 0.26379999999999998 * x1 - 0.077450000000000005 * x2 - 0.6734 * x4 - x7 - x9 + 0.2238 * x1 * x3 + 0.76229999999999998 * x2 * x3 - 0.60219999999999996
cons_ex_14_1_6  = [{'func':eq1_ex_14_1_6 ,'type': 'eq'},{'func':ineq1_ex_14_1_6 ,'type': 'ineq'},{'func':ineq2_ex_14_1_6 ,'type': 'ineq'},{'func':ineq3_ex_14_1_6 ,'type': 'ineq'},{'func':ineq4_ex_14_1_6 ,'type': 'ineq'},{'func':ineq5_ex_14_1_6 ,'type': 'ineq'},{'func':ineq6_ex_14_1_6 ,'type': 'ineq'},{'func':ineq7_ex_14_1_6 ,'type': 'ineq'},{'func':ineq8_ex_14_1_6 ,'type': 'ineq'},{'func':ineq9_ex_14_1_6 ,'type': 'ineq'},{'func':ineq10_ex_14_1_6 ,'type': 'ineq'},{'func':ineq11_ex_14_1_6 ,'type': 'ineq'},{'func':ineq12_ex_14_1_6 ,'type': 'ineq'},{'func':ineq13_ex_14_1_6 ,'type': 'ineq'},{'func':ineq14_ex_14_1_6 ,'type': 'ineq'}]
bnds_ex_14_1_6  = [np.array([-1,1]), np.array([-1,1]), np.array([-1,1]), np.array([-1,1]), np.array([-1,1]), np.array([-1,1]), np.array([-1,1]), np.array([-1,1]), np.array([-1,1])]
vars_ex_14_1_6  = [x1, x2, x3, x4, x5, x6, x7, x8, x9]
ex_14_1_6  = OptimizationProblem("ex_14_1_6 ", sol_ex_14_1_6 , symobj_ex_14_1_6 , cons_ex_14_1_6 , vars_ex_14_1_6 , bnds_ex_14_1_6 )

symobj_hatfldh =  -(x1 * x3) - x2 * x4
sol_hatfldh = np.array([4, 3.5, 3.5, 3])
ineq1_hatfldh = -(x1 + x2 + x3 + x4) + 5
ineq2_hatfldh = -(x3 + x4) + 1.5
ineq3_hatfldh = x3 + x4 - 6.5
ineq4_hatfldh = -(x2 + x4) + 2
ineq5_hatfldh = x2 + x4 - 7
ineq6_hatfldh = -(x2 + x3) + 2
ineq7_hatfldh = x2 + x3 - 7
ineq8_hatfldh = -(x1 + x2) + 2.5
ineq9_hatfldh = x1 + x2 - 7.5
ineq10_hatfldh = -(x1 + x4) + 2.5
ineq11_hatfldh = x1 + x4 - 7.5
ineq12_hatfldh = -(x1 + x3) + 2.5
ineq13_hatfldh = x1 + x3 - 7.5
cons_hatfldh = [{'func':ineq1_hatfldh,'type': 'ineq', 'prop': 'convex'},{'func':ineq2_hatfldh,'type': 'ineq', 'prop': 'convex'},{'func':ineq3_hatfldh,'type': 'ineq', 'prop': 'convex'},{'func':ineq4_hatfldh,'type': 'ineq', 'prop': 'convex'},{'func':ineq5_hatfldh,'type': 'ineq', 'prop': 'convex'},{'func':ineq6_hatfldh,'type': 'ineq', 'prop': 'convex'},{'func':ineq7_hatfldh,'type': 'ineq', 'prop': 'convex'},{'func':ineq8_hatfldh,'type': 'ineq', 'prop': 'convex'},{'func':ineq9_hatfldh,'type': 'ineq', 'prop': 'convex'},{'func':ineq10_hatfldh,'type': 'ineq', 'prop': 'convex'},{'func':ineq11_hatfldh,'type': 'ineq', 'prop': 'convex'},{'func':ineq12_hatfldh,'type': 'ineq', 'prop': 'convex'},{'func':ineq13_hatfldh,'type': 'ineq', 'prop': 'convex'}]
bnds_hatfldh = [np.array([0, 5]), np.array([0, 5]), np.array([0, 5]), np.array([0, 5])]
vars_hatfldh = [x1, x2, x3, x4]
hatfldh = OptimizationProblem("hatfldh", sol_hatfldh, symobj_hatfldh, cons_hatfldh, vars_hatfldh, bnds_hatfldh)

symobj_himmel11 =  37.293239 * x1 + 5000 * x9 + 5.3578546999999999 * (x2**2) + 0.83568909999999996 * x1 * x3 - 40792.141000000003
sol_himmel11 = np.array([78.00000,29.99526,36.77581,33.00000,45.00000,92.00000,98.84050,20.00000,0.000000])
eq1_himmel11 =  x8 + 4 * x9 - 0.0012547000000000001 * x1 * x2 - 0.0047026000000000004 * x2 * x3 - 0.0019085 * x2 * x5 - 9.3009609999999991
eq2_himmel11 =  x7 - 0.0021813000000000002 * (x2**2) - 0.0071317000000000004 * x3 * x4 - 0.0029954999999999999 * x1 * x4 - 80.51249
eq3_himmel11 =  x6 + 2 * x9 - 0.00062620000000000004 * x1 * x5 + 0.0022052999999999999 * x2 * x3 - 0.0056858000000000004 * x3 * x4 - 85.334406999999999
ineq1_himmel11 = -(-x1 + 7 * x2 - x3 + 5 * x9)
cons_himmel11 = [{'func':eq1_himmel11,'type': 'eq'},{'func':eq2_himmel11,'type': 'eq'},{'func':eq3_himmel11,'type': 'eq'},{'func':ineq1_himmel11,'type': 'ineq'}]
bnds_himmel11 = [np.array([78, 102]), np.array([27, 45]), np.array([27, 45]), np.array([33, 45]), np.array([27, 45]), np.array([0, 92]), np.array([90, 110]), np.array([20, 25]), np.array([0, 10000])]
vars_himmel11 = [x1, x2, x3, x4, x5, x6, x7, x8, x9]
himmel11 = OptimizationProblem("himmel11", sol_himmel11, symobj_himmel11, cons_himmel11, vars_himmel11, bnds_himmel11)

symobj_hs053 = (x4 - 1)**2 + (x5 - 1)**2 + (x1 - x2)**2 + (x2 + x3 - 2)**2
sol_hs053 = np.array([-0.7674418605, 0.2558139535, 0.6279069767, -0.1162790698, 0.2558139535])
eq1_hs053 = x2 - x5
eq2_hs053 = x3 + x4 - 2 * x5
eq3_hs053 = x1 + 3 * x2
cons_hs053 = [{'func':eq1_hs053, 'type':'eq', 'prop':'unknown'}, {'func':eq2_hs053, 'type':'eq', 'prop':'unknown'}, {'func':eq3_hs053, 'type':'eq', 'prop':'unknown'}]
vars_hs053 = [x1, x2, x3, x4, x5]
bnds_hs053 = [np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10]), np.array([-10, 10])]
hs053 = OptimizationProblem('hs053', sol_hs053, symobj_hs053, cons_hs053, vars_hs053, bnds_hs053)

symobj_hs097 =  4.2999999999999998 * x1 + 63.299999999999997 * x2 + 15.800000000000001 * x3 + 68.5 * x4 + 4.7000000000000002 * x5 + 31.800000000000001 * x6
sol_hs097 = np.array([0.2685649123,0.0000000000,0.0000000000,0.0280000000,0.0134000000,0.0000000000])
ineq1_hs097 = -(159.90000000000001 * x1 + 587 * x3 + 391 * x4 + 2198 * x5 - 311 * x6 - 14000 * x1 * x5) - 78.019999999999996
ineq2_hs097 = -((-70) * x3 - 819 * x4 - 273 * x6 + 26000 * x3 * x4) - 29.079999999999998
ineq3_hs097 = -(17.100000000000001 * x1 + 204.19999999999999 * x2 + 212.30000000000001 * x3 + 623.39999999999998 * x4 + 1495.5 * x5 + 38.200000000000003 * x6 - 169 * x1 * x2 - 3580 * x2 * x4 - 3810 * x3 * x4 - 18500 * x3 * x5 - 24300 * x4 * x5) + 32.969999999999999
ineq4_hs097 = -(17.899999999999999 * x1 + 113.90000000000001 * x2 + 169.69999999999999 * x3 + 337.80000000000001 * x4 + 1385.2 * x5 + 36.799999999999997 * x6 - 139 * x1 * x2 - 2450 * x3 * x4 - 16600 * x3 * x5 - 17200 * x4 * x5) + 25.120000000000001
cons_hs097 = [{'func':ineq1_hs097,'type': 'ineq'},{'func':ineq2_hs097,'type': 'ineq'},{'func':ineq3_hs097,'type': 'ineq'},{'func':ineq4_hs097,'type': 'ineq'}]
bnds_hs097 = [np.array([0, 0.31]), np.array([0, 0.068000000000000005]), np.array([0, 0.042000000000000003]), np.array([0, 0.028000000000000001]), np.array([0, 0.0134]), np.array([0, 0.045999999999999999])]
vars_hs097 = [x1, x2, x3, x4, x5, x6]
hs097 = OptimizationProblem("hs097", sol_hs097, symobj_hs097, cons_hs097, vars_hs097, bnds_hs097)

symobj_immun = (- x1)**2 + ((- x2) + 50000)**2 + ((- x3) + 42000)**2 + ((- x4) + 40000)**2 + ((- x5) + 40000)**2 + ((- x6) + 45000)**2
sol_immun = np.array([0.0000000000,50000.0000000000,42000.0000000000,40000.0000000000,40000.0000000000,45000.0000000000,38769.8294430162,11.7138938118,0.1000000000,0.0000000000,0.0002524834,0.0000000000,914.0868823231,0.0666666667,0.0625000000,0.0000000000,1863.0310692451,0.0526315789,0.0000000000,40979.4765382521,1.22062833446e+5])
eq1_immun = x7 - 40.9351218608642 * x8 - 43.201865262881498 * x9 - 45.347331110186801 * x10 - 39.805625287986999 * x11 - 41.312576949405297 * x12 - 41.878149854114099 * x13 - 42.140321344808399 * x14 - 46.603891467033698 * x15
eq2_immun = -x6 + 1115.8195763046001 * x11 + 1126.3428356729 * x12 + 134.50350827059299 * x13 + 136.452834477414 * x14 + 185.185989647919 * x15 + 1.0760017435043401 * x20 - x21
eq3_immun = -x5 + 1167.30216560492 * x10 + 74.454899129982294 * x11 + 84.724540389290297 * x12 + 88.575655861530706 * x13 + 89.859361018944199 * x14 + 121.951989954281 * x15 + 1.05 * x19 - x20
eq4_immun = -x4 + 75.456505608032998 * x10 + 36.777120380385803 * x11 + 41.849826639749402 * x12 + 43.752091487010802 * x13 + 44.386179769431202 * x14 + 60.2383868299423 * x15 + 1.02284761238063 * x18 - x19
eq5_immun = -x3 + 75.577639511960001 * x10 + 36.836160434400703 * x11 + 41.917010149490402 * x12 + 43.822328792649103 * x13 + 44.457435007035301 * x14 + 60.3350903666908 * x15 + 1.0391091639109 * x17 - x18
eq6_immun = -x2 + 1044.8072745632601 * x8 + 1079.40354193291 * x9 + 74.544203311322306 * x10 + 36.332468840812503 * x11 + 41.343843853338399 * x12 + 43.2231094830356 * x13 + 43.8495313596014 * x14 + 59.510078273744703 * x15 + 1.0094009315372301 * x16 - x17
eq7_immun = -x1 - x16
cons_immun = [{'func':eq1_immun, 'type':'eq'}, {'func':eq2_immun, 'type':'eq'}, {'func':eq3_immun, 'type':'eq'}, {'func':eq4_immun, 'type':'eq'}, {'func':eq5_immun, 'type':'eq'}, {'func':eq6_immun, 'type':'eq'}, {'func':eq7_immun, 'type':'eq'}]
bnds_immun = [np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 51000]), np.array([0, 100000])]
vars_immun = [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21]
immun = OptimizationProblem('immun', sol_immun ,symobj_immun, cons_immun, vars_immun, bnds_immun)

symobj_markowitz =  0
sol_markowitz = np.array([0.478897,0.209467,0.143539,0.0788822,0.0892156,0,0,0])
eq1_markowitz =  x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 - 1
ineq1_markowitz = (-1.0781363636363637) * x1 - 1.0929090909090906 * x2 - 1.1197727272727274 * x3 - 1.1236363636363633 * x4 - 1.1213181818181817 * x5 - 1.0917727272727273 * x6 - 1.1412272727272728 * x7 - 1.1289545454545453 * x8 + 9.0909090909090917 * ((-0.0031363636363637148) * x1 - 0.15090909090909066 * x2 - 0.26777272727272738 * x3 - 0.30863636363636338 * x4 - 0.4233181818181817 * x5 - 0.06877272727272743 * x6 - 0.29022727272727278 * x7 + 0.54804545454545472 * x8)**2 + 9.0909090909090917 * (0.0058636363636364042 * x1 - 0.07290909090909059 * x2 - 0.38477272727272738 * x3 - 0.40763636363636335 * x4 - 0.45931818181818163 * x5 - 0.089772727272727337 * x6 - 0.37322727272727274 * x7 + 0.59304545454545465 * x8)**2 + 9.0909090909090917 * ((-0.017136363636363727) * x1 - 0.036909090909090558 * x2 + 0.25122727272727263 * x3 + 0.26136363636363669 * x4 + 0.1966818181818184 * x5 + 0.031227272727272659 * x6 + 0.21277272727272734 * x7 - 0.36895454545454531 * x8)**2 + 9.0909090909090917 * ((-0.026136363636363624) * x1 + 0.082090909090909436 * x2 + 0.11622727272727262 * x3 + 0.14236363636363669 * x4 + 0.15868181818181837 * x5 + 0.064227272727272577 * x6 - 0.11622727272727285 * x7 - 0.16895454545454536 * x8)**2 + 9.0909090909090917 * ((-0.023136363636363733) * x1 - 0.090909090909090606 * x2 - 0.19377272727272732 * x3 - 0.14963636363636335 * x4 - 0.028318181818181687 * x5 - 0.061772727272727312 * x6 + 0.039772727272727293 * x7 + 0.071045454545454634 * x8)**2 + 9.0909090909090917 * ((-0.0011363636363637131) * x1 - 0.11090909090909062 * x2 - 0.055772727272727307 * x3 - 0.030636363636363351 * x4 + 0.024681818181818249 * x5 - 0.079772727272727328 * x6 + 0.18477272727272731 * x7 + 0.16604545454545461 * x8)**2 + 9.0909090909090917 * (0.030863636363636315 * x1 - 0.11490909090909063 * x2 + 0.064227272727272577 * x3 + 0.13236363636363668 * x4 + 0.18568181818181828 * x5 - 0.06877272727272743 * x6 - 0.093227272727272714 * x7 + 1.0830454545454549 * x8)**2 + 9.0909090909090917 * (0.048863636363636331 * x1 - 0.14590909090909066 * x2 + 0.20322727272727259 * x3 + 0.21336363636363664 * x4 + 0.24568181818181833 * x5 - 0.060772727272727423 * x6 + 0.084772727272727222 * x7 + 0.16704545454545472 * x8)**2 + 9.0909090909090917 * (0.077863636363636246 * x1 - 0.089909090909090716 * x2 - 0.17077272727272741 * x3 - 0.16063636363636336 * x4 - 0.13131818181818167 * x5 - 0.018772727272727385 * x6 - 0.16422727272727278 * x7 - 0.44095454545454538 * x8)**2 + 9.0909090909090917 * (0.038863636363636322 * x1 + 0.37209090909090947 * x2 + 0.095227272727272716 * x3 + 0.063363636363636733 * x4 + 0.09168181818181842 * x5 + 0.2192272727272726 * x6 - 0.16022727272727277 * x7 - 0.044954545454545247 * x8)**2 + 9.0909090909090917 * (0.013863636363636411 * x1 - 0.10790909090909062 * x2 + 0.10422727272727261 * x3 + 0.11136363636363678 * x4 + 0.095681818181818423 * x5 - 0.011772727272727268 * x6 + 0.095772727272727343 * x7 - 0.25695454545454532 * x8)**2 + 9.0909090909090917 * (0.02486363636363631 * x1 + 0.066090909090909422 * x2 - 0.058772727272727421 * x3 - 0.093636363636363296 * x4 - 0.21831818181818163 * x5 + 0.058227272727272572 * x6 - 0.067227272727272691 * x7 - 0.30395454545454537 * x8)**2 + 9.0909090909090917 * (0.0018636363636364006 * x1 + 0.27309090909090949 * x2 + 0.19622727272727269 * x3 + 0.20236363636363675 * x4 + 0.2116818181818183 * x5 + 0.12122727272727274 * x6 + 0.4207727272727273 * x7 - 0.12295454545454532 * x8)**2 + 9.0909090909090917 * ((-0.015136363636363726) * x1 + 0.21609090909090933 * x2 + 0.066227272727272579 * x3 + 0.03736363636363671 * x4 - 0.035318181818181582 * x5 + 0.064227272727272577 * x6 + 0.55277272727272719 * x7 + 0.087045454545454648 * x8)**2 + 9.0909090909090917 * ((-0.017136363636363727) * x1 - 0.16790909090909056 * x2 - 0.067772727272727318 * x3 - 0.10063636363636341 * x4 - 0.16231818181818169 * x5 - 0.06877272727272743 * x6 + 0.10477272727272724 * x7 + 0.11504545454545467 * x8)**2 + 9.0909090909090917 * ((-0.0071363636363637184) * x1 - 0.0069090909090905317 * x2 + 0.045227272727272672 * x3 + 0.055363636363636726 * x4 + 0.043681818181818377 * x5 - 0.015772727272727272 * x6 + 0.14177272727272716 * x7 - 0.26795454545454533 * x8)**2 + 9.0909090909090917 * (0.0088636363636362958 * x1 + 0.11909090909090936 * x2 + 0.19622727272727269 * x3 + 0.16836363636363672 * x4 + 0.082681818181818301 * x5 + 0.050227272727272565 * x6 - 0.036227272727272775 * x7 - 0.15195454545454534 * x8)**2 + 9.0909090909090917 * (0.0018636363636364006 * x1 - 0.03890909090909056 * x2 - 0.15177272727272739 * x3 - 0.18563636363636338 * x4 - 0.2913181818181817 * x5 - 0.0087727272727273764 * x6 - 0.37522727272727274 * x7 - 0.20695454545454528 * x8)**2 + 9.0909090909090917 * ((-0.021136363636363731) * x1 + 0.10009090909090945 * x2 + 0.18422727272727268 * x3 + 0.21836363636363676 * x4 + 0.47268181818181843 * x5 + 0.069227272727272693 * x6 - 0.02022727272727276 * x7 - 0.17095454545454536 * x8)**2 + 9.0909090909090917 * ((-0.042136363636363638) * x1 - 0.013909090909090649 * x2 - 0.043772727272727296 * x3 - 0.033636363636363242 * x4 + 0.052681818181818274 * x5 - 0.015772727272727272 * x6 - 0.26322727272727275 * x7 - 0.20295454545454528 * x8)**2 + 9.0909090909090917 * ((-0.047136363636363754) * x1 + 0.12409090909090947 * x2 - 0.019772727272727275 * x3 - 0.010636363636363333 * x4 + 0.040681818181818263 * x5 + 0.018227272727272759 * x6 + 0.18477272727272731 * x7 + 0.017045454545454586 * x8)**2 + 9.0909090909090917 * ((-0.033136363636363741) * x1 - 0.2039090909090906 * x2 - 0.10777272727272735 * x3 - 0.12463636363636332 * x4 - 0.15331818181818169 * x5 - 0.12677272727272737 * x6 - 0.063227272727272688 * x7 - 0.13895454545454533 * x8)**2 - 0.070741038099999987
cons_markowitz = [{'func':eq1_markowitz,'type': 'eq'},{'func':ineq1_markowitz,'type': 'ineq'}]
bnds_markowitz = [np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000]), np.array([0, 10000])]
vars_markowitz = [x1, x2, x3, x4, x5, x6, x7, x8]
markowitz = OptimizationProblem("markowitz", sol_markowitz, symobj_markowitz, cons_markowitz, vars_markowitz, bnds_markowitz)

symobj_mifflin2 =  x3
sol_mifflin2 = np.array([1,-1.20614e-07,-1])
ineq1_mifflin2 = -x1 - x3 + 0.25 * (x1**2) + 0.25 * (x2**2) - 0.25
ineq2_mifflin2 = -x1 - x3 + 3.75 * (x1**2) + 3.75 * (x2**2) - 3.75
cons_mifflin2 = [{'func':ineq1_mifflin2,'type': 'ineq'},{'func':ineq2_mifflin2,'type': 'ineq'}]
bnds_mifflin2 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_mifflin2 = [x1, x2, x3]
mifflin2 = OptimizationProblem("mifflin2", sol_mifflin2, symobj_mifflin2, cons_mifflin2, vars_mifflin2, bnds_mifflin2)

symobj_minmaxrb =  x3
sol_minmaxrb = np.array([1,1,2.79992e-17])
ineq1_minmaxrb = -(-x1 + x3) - 1
ineq2_minmaxrb = -(x1 + x3) + 1
ineq3_minmaxrb = -((-10) * x2 + x3 + 10 * (x1**2))
ineq4_minmaxrb = -(10 * x2 + x3 - 10 * (x1**2))
cons_minmaxrb = [{'func':ineq1_minmaxrb,'type': 'ineq'},{'func':ineq2_minmaxrb,'type': 'ineq'},{'func':ineq3_minmaxrb,'type': 'ineq'},{'func':ineq4_minmaxrb,'type': 'ineq'}]
bnds_minmaxrb = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_minmaxrb = [x1, x2, x3]
minmaxrb = OptimizationProblem("minmaxrb", sol_minmaxrb, symobj_minmaxrb, cons_minmaxrb, vars_minmaxrb, bnds_minmaxrb)

symobj_polak4 =  x3
sol_polak4 = np.array([1,-1.43365e-07,-1.4878e-11])
ineq1_polak4 = -x1 - x3 + 2 * (x1**2) + 2 * (x2**2) - 1
ineq2_polak4 = -x3 + (x2**2) + 100000 * ((x1) - 2)**2 - 100000
ineq3_polak4 = -x3 + 0.01 * (x1**2) + 0.01 * (x2**2) - 0.01
cons_polak4 = [{'func':ineq1_polak4,'type': 'ineq'},{'func':ineq2_polak4,'type': 'ineq'},{'func':ineq3_polak4,'type': 'ineq'}]
bnds_polak4 = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_polak4 = [x1, x2, x3]
polak4 = OptimizationProblem("polak4", sol_polak4, symobj_polak4, cons_polak4, vars_polak4, bnds_polak4)

symobj_rosenbr =  0
sol_rosenbr = np.array([0.763951,0.615797,0.321754,0.236049])
eq1_rosenbr =  -x1 - x4 + 1 - 0
eq2_rosenbr =  10 * x2 - x3 - 10 * (x1**2) - 0
ineq1_rosenbr = (x3**2) + (x4**2) - 1.0000000000000002
cons_rosenbr = [{'func':eq1_rosenbr,'type': 'eq'},{'func':eq2_rosenbr,'type': 'eq'},{'func':ineq1_rosenbr,'type': 'ineq'}]
bnds_rosenbr = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_rosenbr = [x1, x2, x3, x4]
rosenbr = OptimizationProblem("rosenbr", sol_rosenbr, symobj_rosenbr, cons_rosenbr, vars_rosenbr, bnds_rosenbr)

symobj_rosenmmx =  x5
sol_rosenmmx = np.array([2.51282e-09,1,2,-1,-44])
ineq1_rosenmmx = 15 * x1 - 15 * x2 - 21 * x3 - 3 * x4 - x5 + 11 * (x1**2) + 11 * (x2**2) + (x4**2) + 12 * (x3**2) - 50
ineq2_rosenmmx = (-5) * x1 - 5 * x2 - 21 * x3 + 7 * x4 - x5 + (x1**2) + (x2**2) + (x4**2) + 2 * (x3**2) - 0
ineq3_rosenmmx = (-15) * x1 - 5 * x2 - 21 * x3 - 3 * x4 - x5 + 11 * (x1**2) + 21 * (x2**2) + 21 * (x4**2) + 12 * (x3**2) - 100
ineq4_rosenmmx = 5 * x1 - 15 * x2 - 11 * x3 - 3 * x4 - x5 + 11 * (x1**2) + 11 * (x2**2) + 11 * (x4**2) + 12 * (x3**2) - 80
cons_rosenmmx = [{'func':ineq1_rosenmmx,'type': 'ineq'},{'func':ineq2_rosenmmx,'type': 'ineq'},{'func':ineq3_rosenmmx,'type': 'ineq'},{'func':ineq4_rosenmmx,'type': 'ineq'}]
bnds_rosenmmx = [np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000]), np.array([-10000, 10000])]
vars_rosenmmx = [x1, x2, x3, x4, x5]
rosenmmx = OptimizationProblem("rosenmmx", sol_rosenmmx, symobj_rosenmmx, cons_rosenmmx, vars_rosenmmx, bnds_rosenmmx)

symobj_simpllpd = 1.5 * x1 + x2
sol_simpllpd = np.array([0.2, 0.8])
ineq1_simpllpd = -2 * x1 - x2 + 1.2
ineq2_simpllpd = -x1 - 2 * x2 + 1.2
ineq3_simpllpd = -x1 - x2 + 1
cons_simpllpd = [{'func':ineq1_simpllpd, 'type':'ineq', 'prop':'unknown'}, {'func':ineq2_simpllpd, 'type':'ineq', 'prop':'unknown'}, {'func':ineq3_simpllpd, 'type':'ineq', 'prop':'unknown'}]
vars_simpllpd = [x1, x2]
bnds_simpllpd = [np.array([0, 10000]), np.array([0, 10000])]
simpllpd = OptimizationProblem('simpllpd', sol_simpllpd, symobj_simpllpd, cons_simpllpd, vars_simpllpd, bnds_simpllpd)

symobj_simpllpd_sv = 1.5 * x1 + x2
ineq1_simpllpd_sv = -2 * x1 - x2 + 1.2 + x3**2
ineq2_simpllpd_sv = -x1 - 2 * x2 + 1.2 + x4**2
ineq3_simpllpd_sv = -x1 - x2 + 1 + x5**2
cons_simpllpd_sv = [{'func':ineq1_simpllpd_sv, 'type':'eq', 'prop':'unknown'}, {'func':ineq2_simpllpd_sv, 'type':'eq', 'prop':'unknown'}, {'func':ineq3_simpllpd_sv, 'type':'eq', 'prop':'unknown'}]
vars_simpllpd_sv = [x1, x2, x3, x4, x5]
bnds_simpllpd_sv = [np.array([0, 10000]), np.array([0, 10000]), np.array([-1.5, 1.5]), np.array([-1.5, 1.5]), np.array([-1.5, 1.5])]
simpllpd_sv = OptimizationProblem('simpllpd_sv', None, symobj_simpllpd_sv, cons_simpllpd_sv, vars_simpllpd_sv, bnds_simpllpd_sv)

symobj_tame1 = (x1 - x2)**2
sol_tame1 = np.array([0.5, 0.5])
eq1_tame1 =  x1 + x2 - 1
cons_tame1 = [{'func':eq1_tame1,'type': 'eq'}]
bnds_tame1 = [np.array([0, 10000]), np.array([0, 10000])]
vars_tame1 = [x1, x2]
tame1 = OptimizationProblem("tame1", sol_tame1, symobj_tame1, cons_tame1, vars_tame1, bnds_tame1)
